Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"


State 60 conflicts: 1 shift/reduce
State 380 conflicts: 1 shift/reduce
State 470 conflicts: 1 shift/reduce
State 475 conflicts: 1 shift/reduce
State 574 conflicts: 2 shift/reduce
State 611 conflicts: 1 shift/reduce
State 757 conflicts: 1 shift/reduce
State 767 conflicts: 1 shift/reduce
State 849 conflicts: 2 shift/reduce
State 916 conflicts: 1 shift/reduce
State 1321 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty
   65                          | "else" expression_if_one_liner

   66 expression_if_one_liner: expr
   67                        | expression_return_no_pipe
   68                        | expression_yield_no_pipe
   69                        | expression_break
   70                        | expression_continue

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else
   72                        | expression_if_one_liner "if" expr expression_else_one_liner "end of expression"

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 expression_with_alias: "assume" "name" '=' expr

   78 annotation_argument_value: string_constant
   79                          | "name"
   80                          | "integer constant"
   81                          | "floating point constant"
   82                          | "true"
   83                          | "false"

   84 annotation_argument_value_list: annotation_argument_value
   85                               | annotation_argument_value_list ',' annotation_argument_value

   86 annotation_argument_name: "name"
   87                         | "type"
   88                         | "in"

   89 annotation_argument: annotation_argument_name '=' string_constant
   90                    | annotation_argument_name '=' "name"
   91                    | annotation_argument_name '=' "integer constant"
   92                    | annotation_argument_name '=' "floating point constant"
   93                    | annotation_argument_name '=' "true"
   94                    | annotation_argument_name '=' "false"
   95                    | annotation_argument_name
   96                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   97 annotation_argument_list: annotation_argument
   98                         | annotation_argument_list ',' annotation_argument

   99 metadata_argument_list: '@' annotation_argument
  100                       | metadata_argument_list '@' annotation_argument

  101 annotation_declaration_name: name_in_namespace
  102                            | "require"
  103                            | "private"

  104 annotation_declaration_basic: annotation_declaration_name
  105                             | annotation_declaration_name '(' annotation_argument_list ')'

  106 annotation_declaration: annotation_declaration_basic
  107                       | '!' annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration
  111                       | '(' annotation_declaration ')'
  112                       | "|>" annotation_declaration

  113 annotation_list: annotation_declaration
  114                | annotation_list ',' annotation_declaration

  115 optional_annotation_list: %empty
  116                         | '[' annotation_list ']'

  117 optional_function_argument_list: %empty
  118                                | '(' ')'
  119                                | '(' function_argument_list ')'

  120 optional_function_type: %empty
  121                       | ':' type_declaration

  122 function_name: "name"
  123              | "operator" '!'
  124              | "operator" '~'
  125              | "operator" "+="
  126              | "operator" "-="
  127              | "operator" "*="
  128              | "operator" "/="
  129              | "operator" "%="
  130              | "operator" "&="
  131              | "operator" "|="
  132              | "operator" "^="
  133              | "operator" "&&="
  134              | "operator" "||="
  135              | "operator" "^^="
  136              | "operator" "&&"
  137              | "operator" "||"
  138              | "operator" "^^"
  139              | "operator" '+'
  140              | "operator" '-'
  141              | "operator" '*'
  142              | "operator" '/'
  143              | "operator" '%'
  144              | "operator" '<'
  145              | "operator" '>'
  146              | "operator" ".."
  147              | "operator" "=="
  148              | "operator" "!="
  149              | "operator" "<="
  150              | "operator" ">="
  151              | "operator" '&'
  152              | "operator" '|'
  153              | "operator" '^'
  154              | "++" "operator"
  155              | "--" "operator"
  156              | "operator" "++"
  157              | "operator" "--"
  158              | "operator" "<<"
  159              | "operator" ">>"
  160              | "operator" "<<="
  161              | "operator" ">>="
  162              | "operator" "<<<"
  163              | "operator" ">>>"
  164              | "operator" "<<<="
  165              | "operator" ">>>="
  166              | "operator" '[' ']'
  167              | "operator" "?[" ']'
  168              | "operator" '.'
  169              | "operator" "?."
  170              | "operator" '.' "name"
  171              | "operator" '.' "name" ":="
  172              | "operator" "?." "name"
  173              | "operator" ":="
  174              | "operator" "delete"
  175              | "operator" "??"
  176              | "operator" "is"
  177              | "operator" "as"
  178              | "operator" "is" "name"
  179              | "operator" "as" "name"
  180              | "operator" '?' "as"
  181              | "operator" '?' "as" "name"
  182              | "bool"
  183              | "string"
  184              | "int"
  185              | "int2"
  186              | "int3"
  187              | "int4"
  188              | "uint"
  189              | "uint2"
  190              | "uint3"
  191              | "uint4"
  192              | "float"
  193              | "float2"
  194              | "float3"
  195              | "float4"
  196              | "range"
  197              | "urange"
  198              | "range64"
  199              | "urange64"
  200              | "int64"
  201              | "uint64"
  202              | "double"
  203              | "int8"
  204              | "uint8"
  205              | "int16"
  206              | "uint16"

  207 global_function_declaration: optional_annotation_list "def" function_declaration

  208 optional_public_or_private_function: %empty
  209                                    | "private"
  210                                    | "public"

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type

  212 $@2: %empty

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  214 expression_block: "begin of code block" expressions "end of code block"
  215                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  216 expr_call_pipe: expr expr_full_block_assumed_piped
  217               | expression_keyword expr_full_block_assumed_piped

  218 expression_any: "end of expression"
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign "end of expression"
  223               | expression_delete "end of expression"
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break "end of expression"
  231               | expression_continue "end of expression"
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label "end of expression"
  237               | expression_goto "end of expression"
  238               | "pass" "end of expression"

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 optional_expr_list_in_braces: %empty
  246                             | '(' optional_expr_list ')'

  247 type_declaration_no_options_list: type_declaration
  248                                 | type_declaration_no_options_list "end of expression" type_declaration

  249 $@3: %empty

  250 $@4: %empty

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr

  252 $@5: %empty

  253 $@6: %empty

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

  255 expr_pipe: expr_assign " <|" expr_block
  256          | "@ <|" expr_block
  257          | "@@ <|" expr_block
  258          | "$ <|" expr_block
  259          | expr_call_pipe

  260 name_in_namespace: "name"
  261                  | "name" "::" "name"
  262                  | "::" "name"

  263 expression_delete: "delete" expr
  264                  | "delete" "explicit" expr

  265 $@7: %empty

  266 $@8: %empty

  267 new_type_declaration: '<' $@7 type_declaration '>' $@8

  268 expr_new: "new" structure_type_declaration
  269         | "new" structure_type_declaration '(' optional_expr_list ')'
  270         | "new" new_type_declaration '(' use_initializer ')'
  271         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  272         | "new" make_decl

  273 expression_break: "break"

  274 expression_continue: "continue"

  275 expression_return_no_pipe: "return"
  276                          | "return" expr_list
  277                          | "return" "<-" expr_list

  278 expression_return: expression_return_no_pipe "end of expression"
  279                  | "return" expr_pipe
  280                  | "return" "<-" expr_pipe

  281 expression_yield_no_pipe: "yield" expr
  282                         | "yield" "<-" expr

  283 expression_yield: expression_yield_no_pipe "end of expression"
  284                 | "yield" expr_pipe
  285                 | "yield" "<-" expr_pipe

  286 expression_try_catch: "try" expression_block "recover" expression_block

  287 kwd_let_var_or_nothing: "let"
  288                       | "var"
  289                       | %empty

  290 kwd_let: "let"
  291        | "var"

  292 optional_in_scope: "inscope"
  293                  | %empty

  294 tuple_expansion: "name"
  295                | tuple_expansion ',' "name"

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  298 expression_let: kwd_let optional_in_scope let_variable_declaration
  299               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  300 $@9: %empty

  301 $@10: %empty

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr

  303 $@11: %empty

  304 $@12: %empty

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr

  306 $@13: %empty

  307 $@14: %empty

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr

  309 $@15: %empty

  310 $@16: %empty

  311 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  315 expr_list: expr
  316          | expr_list ',' expr

  317 block_or_simple_block: expression_block
  318                      | "=>" expr
  319                      | "=>" "<-" expr

  320 block_or_lambda: '$'
  321                | '@'
  322                | '@' '@'

  323 capture_entry: '&' "name"
  324              | '=' "name"
  325              | "<-" "name"
  326              | ":=" "name"

  327 capture_list: capture_entry
  328             | capture_list ',' capture_entry

  329 optional_capture_list: %empty
  330                      | '[' '[' capture_list ']' ']'

  331 expr_block: expression_block
  332           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  335 expr_numeric_const: "integer constant"
  336                   | "unsigned integer constant"
  337                   | "long integer constant"
  338                   | "unsigned long integer constant"
  339                   | "unsigned int8 constant"
  340                   | "floating point constant"
  341                   | "double constant"

  342 expr_assign: expr
  343            | expr '=' expr
  344            | expr "<-" expr
  345            | expr ":=" expr
  346            | expr "&=" expr
  347            | expr "|=" expr
  348            | expr "^=" expr
  349            | expr "&&=" expr
  350            | expr "||=" expr
  351            | expr "^^=" expr
  352            | expr "+=" expr
  353            | expr "-=" expr
  354            | expr "*=" expr
  355            | expr "/=" expr
  356            | expr "%=" expr
  357            | expr "<<=" expr
  358            | expr ">>=" expr
  359            | expr "<<<=" expr
  360            | expr ">>>=" expr

  361 expr_assign_pipe_right: "@ <|" expr_block
  362                       | "@@ <|" expr_block
  363                       | "$ <|" expr_block
  364                       | expr_call_pipe

  365 expr_assign_pipe: expr '=' expr_assign_pipe_right
  366                 | expr "<-" expr_assign_pipe_right
  367                 | expr "&=" expr_assign_pipe_right
  368                 | expr "|=" expr_assign_pipe_right
  369                 | expr "^=" expr_assign_pipe_right
  370                 | expr "&&=" expr_assign_pipe_right
  371                 | expr "||=" expr_assign_pipe_right
  372                 | expr "^^=" expr_assign_pipe_right
  373                 | expr "+=" expr_assign_pipe_right
  374                 | expr "-=" expr_assign_pipe_right
  375                 | expr "*=" expr_assign_pipe_right
  376                 | expr "/=" expr_assign_pipe_right
  377                 | expr "%=" expr_assign_pipe_right
  378                 | expr "<<=" expr_assign_pipe_right
  379                 | expr ">>=" expr_assign_pipe_right
  380                 | expr "<<<=" expr_assign_pipe_right
  381                 | expr ">>>=" expr_assign_pipe_right

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  383                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  384 expr_method_call: expr "->" "name" '(' ')'
  385                 | expr "->" "name" '(' expr_list ')'

  386 func_addr_name: name_in_namespace
  387               | "$i" '(' expr ')'

  388 func_addr_expr: '@' '@' func_addr_name

  389 $@17: %empty

  390 $@18: %empty

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name

  392 $@19: %empty

  393 $@20: %empty

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

  395 expr_field: expr '.' "name"
  396           | expr '.' '.' "name"
  397           | expr '.' "name" '(' ')'
  398           | expr '.' "name" '(' expr_list ')'

  399 $@21: %empty

  400 $@22: %empty

  401 expr_field: expr '.' $@21 error $@22

  402 expr_call: name_in_namespace '(' ')'
  403          | name_in_namespace '(' make_struct_single ')'
  404          | name_in_namespace '(' expr_list ')'
  405          | basic_type_declaration '(' ')'
  406          | basic_type_declaration '(' expr_list ')'

  407 expr: "null"
  408     | name_in_namespace
  409     | expr_numeric_const
  410     | expr_reader
  411     | string_builder
  412     | make_decl
  413     | "true"
  414     | "false"
  415     | expr_field
  416     | expr_mtag
  417     | '!' expr
  418     | '~' expr
  419     | '+' expr
  420     | '-' expr
  421     | expr "<<" expr
  422     | expr ">>" expr
  423     | expr "<<<" expr
  424     | expr ">>>" expr
  425     | expr '+' expr
  426     | expr '-' expr
  427     | expr '*' expr
  428     | expr '/' expr
  429     | expr '%' expr
  430     | expr '<' expr
  431     | expr '>' expr
  432     | expr "==" expr
  433     | expr "!=" expr
  434     | expr "<=" expr
  435     | expr ">=" expr
  436     | expr '&' expr
  437     | expr '|' expr
  438     | expr '^' expr
  439     | expr "&&" expr
  440     | expr "||" expr
  441     | expr "^^" expr
  442     | expr ".." expr
  443     | "++" expr
  444     | "--" expr
  445     | expr "++"
  446     | expr "--"
  447     | '(' expr_list optional_comma ')'
  448     | expr '[' expr ']'
  449     | expr '.' '[' expr ']'
  450     | expr "?[" expr ']'
  451     | expr '.' "?[" expr ']'
  452     | expr "?." "name"
  453     | expr '.' "?." "name"
  454     | func_addr_expr
  455     | expr_call
  456     | '*' expr
  457     | "deref" '(' expr ')'
  458     | "addr" '(' expr ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  461     | expr "??" expr
  462     | expr '?' expr ':' expr

  463 $@23: %empty

  464 $@24: %empty

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr "is" basic_type_declaration
  467     | expr "is" "name"
  468     | expr "as" "name"

  469 $@25: %empty

  470 $@26: %empty

  471 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr "as" basic_type_declaration
  473     | expr '?' "as" "name"

  474 $@27: %empty

  475 $@28: %empty

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr '?' "as" basic_type_declaration
  478     | expr_type_info
  479     | expr_type_decl
  480     | expr_cast
  481     | expr_new
  482     | expr_method_call
  483     | expr_named_call
  484     | expr_full_block
  485     | expr "<|" expr
  486     | expr "|>" expr
  487     | expr "|>" basic_type_declaration
  488     | expression_keyword

  489 expr_mtag: "$$" '(' expr ')'
  490          | "$i" '(' expr ')'
  491          | "$v" '(' expr ')'
  492          | "$b" '(' expr ')'
  493          | "$a" '(' expr ')'
  494          | "..."
  495          | "$c" '(' expr ')' '(' ')'
  496          | "$c" '(' expr ')' '(' expr_list ')'
  497          | expr '.' "$f" '(' expr ')'
  498          | expr "?." "$f" '(' expr ')'
  499          | expr '.' '.' "$f" '(' expr ')'
  500          | expr '.' "?." "$f" '(' expr ')'
  501          | expr "as" "$f" '(' expr ')'
  502          | expr '?' "as" "$f" '(' expr ')'
  503          | expr "is" "$f" '(' expr ')'
  504          | '@' '@' "$c" '(' expr ')'

  505 optional_field_annotation: %empty
  506                          | metadata_argument_list

  507 optional_override: %empty
  508                  | "override"
  509                  | "sealed"

  510 optional_constant: %empty
  511                  | "const"

  512 optional_public_or_private_member_variable: %empty
  513                                           | "public"
  514                                           | "private"

  515 optional_static_member_variable: %empty
  516                                | "static"

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  518 struct_variable_declaration_list: %empty

  519 $@29: %empty

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression"

  521 $@30: %empty

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"

  523 $@31: %empty

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

  525 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  526                              | "$a" '(' expr ')'

  527 function_argument_list: function_argument_declaration
  528                       | function_argument_list "end of expression" function_argument_declaration

  529 tuple_type: type_declaration
  530           | "name" ':' type_declaration

  531 tuple_type_list: tuple_type
  532                | tuple_type_list "end of expression" tuple_type

  533 tuple_alias_type_list: %empty
  534                      | tuple_alias_type_list "end of expression"
  535                      | tuple_alias_type_list tuple_type "end of expression"

  536 variant_type: "name" ':' type_declaration

  537 variant_type_list: variant_type
  538                  | variant_type_list "end of expression" variant_type

  539 variant_alias_type_list: %empty
  540                        | variant_alias_type_list "end of expression"
  541                        | variant_alias_type_list variant_type "end of expression"

  542 copy_or_move: '='
  543             | "<-"

  544 variable_declaration: variable_name_with_pos_list
  545                     | variable_name_with_pos_list '&'
  546                     | variable_name_with_pos_list ':' type_declaration
  547                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  548                     | variable_name_with_pos_list copy_or_move expr
  549                     | variable_name_with_pos_list copy_or_move expr_pipe

  550 copy_or_move_or_clone: '='
  551                      | "<-"
  552                      | ":="

  553 optional_ref: %empty
  554             | '&'

  555 let_variable_name_with_pos_list: "name"
  556                                | "$i" '(' expr ')'
  557                                | "name" "aka" "name"
  558                                | let_variable_name_with_pos_list ',' "name"
  559                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  563                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  565 global_variable_declaration_list: %empty

  566 $@32: %empty

  567 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration

  568 optional_shared: %empty
  569                | "shared"

  570 optional_public_or_private_variable: %empty
  571                                    | "private"
  572                                    | "public"

  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  574 $@33: %empty

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

  576 enum_expression: "name"
  577                | "name" '=' expr

  578 enum_list: %empty
  579          | enum_expression
  580          | enum_list ',' enum_expression

  581 optional_public_or_private_alias: %empty
  582                                 | "private"
  583                                 | "public"

  584 $@34: %empty

  585 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration

  586 alias_list: single_alias "end of expression"
  587           | alias_list single_alias "end of expression"

  588 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"
  589                  | "typedef" single_alias "end of expression"

  590 optional_public_or_private_enum: %empty
  591                                | "private"
  592                                | "public"

  593 enum_name: "name"

  594 optional_enum_basic_type_declaration: %empty
  595                                     | ':' enum_basic_type_declaration

  596 $@35: %empty

  597 $@36: %empty

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

  599 optional_structure_parent: %empty
  600                          | ':' name_in_namespace

  601 optional_sealed: %empty
  602                | "sealed"

  603 structure_name: optional_sealed "name" optional_structure_parent

  604 class_or_struct: "class"
  605                | "struct"

  606 optional_public_or_private_structure: %empty
  607                                     | "private"
  608                                     | "public"

  609 optional_struct_variable_declaration_list: %empty
  610                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  611 $@37: %empty

  612 $@38: %empty

  613 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

  614 variable_name_with_pos_list: "name"
  615                            | "$i" '(' expr ')'
  616                            | "name" "aka" "name"
  617                            | variable_name_with_pos_list ',' "name"
  618                            | variable_name_with_pos_list ',' "name" "aka" "name"

  619 basic_type_declaration: "bool"
  620                       | "string"
  621                       | "int"
  622                       | "int8"
  623                       | "int16"
  624                       | "int64"
  625                       | "int2"
  626                       | "int3"
  627                       | "int4"
  628                       | "uint"
  629                       | "uint8"
  630                       | "uint16"
  631                       | "uint64"
  632                       | "uint2"
  633                       | "uint3"
  634                       | "uint4"
  635                       | "float"
  636                       | "float2"
  637                       | "float3"
  638                       | "float4"
  639                       | "void"
  640                       | "range"
  641                       | "urange"
  642                       | "range64"
  643                       | "urange64"
  644                       | "double"
  645                       | "bitfield"

  646 enum_basic_type_declaration: "int"
  647                            | "int8"
  648                            | "int16"
  649                            | "uint"
  650                            | "uint8"
  651                            | "uint16"
  652                            | "int64"
  653                            | "uint64"

  654 structure_type_declaration: name_in_namespace

  655 auto_type_declaration: "auto"
  656                      | "auto" '(' "name" ')'
  657                      | "$t" '(' expr ')'

  658 bitfield_bits: "name"
  659              | bitfield_bits "end of expression" "name"

  660 bitfield_alias_bits: %empty
  661                    | "name"
  662                    | bitfield_alias_bits ',' "name"

  663 $@39: %empty

  664 $@40: %empty

  665 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40

  666 table_type_pair: type_declaration
  667                | type_declaration "end of expression" type_declaration

  668 dim_list: '[' expr ']'
  669         | dim_list '[' expr ']'

  670 type_declaration_no_options: basic_type_declaration
  671                            | auto_type_declaration
  672                            | bitfield_type_declaration
  673                            | structure_type_declaration
  674                            | type_declaration_no_options dim_list
  675                            | type_declaration_no_options '[' ']'

  676 $@41: %empty

  677 $@42: %empty

  678 type_declaration_no_options: "type" '<' $@41 type_declaration '>' $@42
  679                            | "typedecl" '(' expr ')'
  680                            | '$' name_in_namespace '(' optional_expr_list ')'

  681 $@43: %empty

  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  683                            | type_declaration_no_options '-' '[' ']'
  684                            | type_declaration_no_options "explicit"
  685                            | type_declaration_no_options "const"
  686                            | type_declaration_no_options '-' "const"
  687                            | type_declaration_no_options '&'
  688                            | type_declaration_no_options '-' '&'
  689                            | type_declaration_no_options '#'
  690                            | type_declaration_no_options "implicit"
  691                            | type_declaration_no_options '-' '#'
  692                            | type_declaration_no_options "==" "const"
  693                            | type_declaration_no_options "==" '&'
  694                            | type_declaration_no_options '*'

  695 $@44: %empty

  696 $@45: %empty

  697 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' $@45
  698                            | type_declaration_no_options "??"

  699 $@46: %empty

  700 $@47: %empty

  701 type_declaration_no_options: "array" '<' $@46 type_declaration '>' $@47

  702 $@48: %empty

  703 $@49: %empty

  704 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' $@49

  705 $@50: %empty

  706 $@51: %empty

  707 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' $@51
  708                            | "block"

  709 $@52: %empty

  710 $@53: %empty

  711 type_declaration_no_options: "block" '<' $@52 type_declaration '>' $@53

  712 $@54: %empty

  713 $@55: %empty

  714 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  715                            | "function"

  716 $@56: %empty

  717 $@57: %empty

  718 type_declaration_no_options: "function" '<' $@56 type_declaration '>' $@57

  719 $@58: %empty

  720 $@59: %empty

  721 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59
  722                            | "lambda"

  723 $@60: %empty

  724 $@61: %empty

  725 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' $@61

  726 $@62: %empty

  727 $@63: %empty

  728 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63

  729 $@64: %empty

  730 $@65: %empty

  731 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' $@65

  732 $@66: %empty

  733 $@67: %empty

  734 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' $@67

  735 type_declaration: type_declaration_no_options
  736                 | type_declaration '|' type_declaration_no_options
  737                 | type_declaration '|' '#'

  738 $@68: %empty

  739 $@69: %empty

  740 $@70: %empty

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

  742 $@71: %empty

  743 $@72: %empty

  744 $@73: %empty

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

  746 $@74: %empty

  747 $@75: %empty

  748 $@76: %empty

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

  750 make_decl: make_struct_decl
  751          | make_dim_decl
  752          | make_table_decl
  753          | array_comprehension
  754          | make_tuple_call

  755 make_struct_fields: "name" copy_or_move expr
  756                   | "name" ":=" expr
  757                   | make_struct_fields ',' "name" copy_or_move expr
  758                   | make_struct_fields ',' "name" ":=" expr
  759                   | "$f" '(' expr ')' copy_or_move expr
  760                   | "$f" '(' expr ')' ":=" expr
  761                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  763 make_struct_single: make_struct_fields

  764 make_struct_dim: make_struct_fields
  765                | make_struct_dim "end of expression" make_struct_fields

  766 use_initializer: %empty
  767                | "uninitialized"

  768 $@77: %empty

  769 $@78: %empty

  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

  771 $@79: %empty

  772 $@80: %empty

  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

  774 $@81: %empty

  775 $@82: %empty

  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

  777 $@83: %empty

  778 $@84: %empty

  779 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 use_initializer

  780 make_map_tuple: expr "=>" expr
  781               | expr

  782 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  783 $@85: %empty

  784 $@86: %empty

  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

  786 make_dim_decl: '[' expr_list optional_comma ']'

  787 $@87: %empty

  788 $@88: %empty

  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

  790 $@89: %empty

  791 $@90: %empty

  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

  793 $@91: %empty

  794 $@92: %empty

  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'
  796              | "array" '(' expr_list optional_comma ')'

  797 $@93: %empty

  798 $@94: %empty

  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'
  800              | "dim" '(' expr_list optional_comma ')'

  801 $@95: %empty

  802 $@96: %empty

  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

  804 expr_map_tuple_list: make_map_tuple
  805                    | expr_map_tuple_list ',' make_map_tuple

  806 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  807                | "table" '(' expr_map_tuple_list optional_comma ')'
  808                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  809                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  810 array_comprehension_where: %empty
  811                          | "end of expression" "where" expr

  812 optional_comma: %empty
  813               | ','

  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  815                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  816                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 107 123 417
    '#' (35) 689 691 737
    '$' (36) 20 320 680 682
    '%' (37) 35 42 143 429
    '&' (38) 151 323 436 545 554 687 688 693
    '(' (40) 96 105 111 118 119 246 269 270 271 296 297 312 313 314 382 383 384 385 387 397 398 402 403 404 405 406 447 457 458 459 460 489 490 491 492 493 495 496 497 498 499 500 501 502 503 504 526 556 615 656 657 679 680 682 759 760 761 762 770 773 776 782 785 789 792 795 796 799 800 803 807 808 809
    ')' (41) 96 105 111 118 119 246 269 270 271 296 297 312 313 314 382 383 384 385 387 397 398 402 403 404 405 406 447 457 458 459 460 489 490 491 492 493 495 496 497 498 499 500 501 502 503 504 526 556 615 656 657 679 680 682 759 760 761 762 770 773 776 782 785 789 792 795 796 799 800 803 807 808 809
    '*' (42) 141 427 456 694
    '+' (43) 139 419 425
    ',' (44) 51 85 98 114 295 316 328 383 558 559 580 617 618 662 757 758 761 762 805 813
    '-' (45) 140 420 426 683 686 688 691
    '.' (46) 43 168 170 171 395 396 397 398 401 449 451 453 497 499 500
    '/' (47) 44 142 428
    ':' (58) 53 54 121 296 462 530 536 546 547 560 561 562 595 600
    "end of expression" (59) 15 16 72 218 222 223 230 231 236 237 238 248 278 283 296 297 314 520 522 528 532 534 535 538 540 541 560 561 563 586 587 589 659 667 765 809 811 814 815 816
    '<' (60) 144 251 254 267 302 305 308 311 313 314 391 394 430 459 460 465 471 476 665 678 682 697 701 704 707 711 714 718 721 725 728 731 734 770 773 776 779 785 789 792 795 799 803 808 809
    '=' (61) 77 89 90 91 92 93 94 96 324 343 365 542 550 577 585
    '>' (62) 145 251 254 267 302 305 308 311 313 314 391 394 431 459 460 465 471 476 665 678 682 697 701 704 707 711 714 718 721 725 728 731 734 770 773 776 779 785 789 792 795 799 803 808 809
    '?' (63) 180 181 462 473 476 477 502
    '@' (64) 99 100 321 322 388 391 394 504
    '[' (91) 116 166 330 382 383 448 449 668 669 675 683 786 814 815
    ']' (93) 116 166 167 330 382 383 448 449 450 451 668 669 675 683 786 814 815
    '^' (94) 153 438
    "begin of code block" (123) 214 215 573 588 598 610 741 745 749 806 816
    '|' (124) 152 437 736 737
    "end of code block" (125) 214 215 573 588 598 610 741 745 749 806 816
    '~' (126) 124 418
    error (256) 241 401
    "lexer error" (258)
    "struct" (259) 605 770 789
    "class" (260) 604 773
    "let" (261) 287 290
    "def" (262) 207 522 524
    "while" (263) 75
    "if" (264) 62 72
    "static_if" (265) 63
    "else" (266) 60 65
    "for" (267) 73 814 815 816
    "recover" (268) 286
    "true" (269) 82 93 413
    "false" (270) 83 94 414
    "new" (271) 268 269 270 271 272
    "typeinfo" (272) 312 313 314
    "type" (273) 87 311 465 471 476 678
    "in" (274) 73 88 814 815 816
    "is" (275) 176 178 465 466 467 503
    "as" (276) 46 177 179 180 181 468 471 472 473 476 477 501 502
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 701 789 792 795 796 799
    "return" (280) 275 276 277 279 280
    "null" (281) 407
    "break" (282) 273
    "try" (283) 286
    "options" (284) 36
    "table" (285) 704 807 808 809
    "expect" (286) 49
    "const" (287) 511 685 686 692
    "require" (288) 37 102
    "operator" (289) 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181
    "enum" (290) 598
    "finally" (291) 215
    "delete" (292) 174 263 264
    "deref" (293) 457
    "typedef" (294) 588 589
    "typedecl" (295) 679
    "with" (296) 76
    "aka" (297) 557 559 616 618
    "assume" (298) 77
    "cast" (299) 302
    "override" (300) 508
    "abstract" (301) 522
    "upcast" (302) 305
    "iterator" (303) 707 815
    "var" (304) 288 291
    "addr" (305) 458
    "continue" (306) 274
    "where" (307) 811
    "pass" (308) 238
    "reinterpret" (309) 308
    "module" (310) 22
    "public" (311) 18 48 210 513 572 583 592 608
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 690
    "explicit" (315) 264 684
    "shared" (316) 569
    "private" (317) 19 103 209 514 571 582 591 607
    "smart_ptr" (318) 697
    "unsafe" (319) 74
    "inscope" (320) 292
    "static" (321) 516
    "dim" (322) 800 803
    "default" (323) 779
    "uninitialized" (324) 767
    "bool" (325) 182 619
    "void" (326) 639
    "string" (327) 183 620
    "auto" (328) 655 656
    "int" (329) 184 621 646
    "int2" (330) 185 625
    "int3" (331) 186 626
    "int4" (332) 187 627
    "uint" (333) 188 628 649
    "bitfield" (334) 645 665 749
    "uint2" (335) 189 632
    "uint3" (336) 190 633
    "uint4" (337) 191 634
    "float" (338) 192 635
    "float2" (339) 193 636
    "float3" (340) 194 637
    "float4" (341) 195 638
    "range" (342) 196 640
    "urange" (343) 197 641
    "range64" (344) 198 642
    "urange64" (345) 199 643
    "block" (346) 708 711 714
    "int64" (347) 200 624 652
    "uint64" (348) 201 631 653
    "double" (349) 202 644
    "function" (350) 715 718 721
    "lambda" (351) 722 725 728
    "int8" (352) 203 622 647
    "uint8" (353) 204 629 650
    "int16" (354) 205 623 648
    "uint16" (355) 206 630 651
    "tuple" (356) 731 741 782 785 792
    "variant" (357) 734 745 776 795
    "generator" (358) 459 460
    "yield" (359) 281 282 284 285
    "sealed" (360) 509 602
    "+=" (361) 125 352 373
    "-=" (362) 126 353 374
    "/=" (363) 128 355 376
    "*=" (364) 127 354 375
    "%=" (365) 129 356 377
    "&=" (366) 130 346 367
    "|=" (367) 131 347 368
    "^=" (368) 132 348 369
    "<<" (369) 158 421
    ">>" (370) 159 422
    "++" (371) 154 156 443 445
    "--" (372) 155 157 444 446
    "<=" (373) 149 434
    "<<=" (374) 160 357 378
    ">>=" (375) 161 358 379
    ">=" (376) 150 435
    "==" (377) 147 432 692 693
    "!=" (378) 148 433
    "->" (379) 384 385
    "<-" (380) 277 280 282 285 319 325 344 366 543 551
    "??" (381) 175 461 698
    "?." (382) 169 172 452 453 498 500
    "?[" (383) 167 450 451
    "<|" (384) 485
    " <|" (385) 255
    "$ <|" (386) 258 363
    "@ <|" (387) 256 361
    "@@ <|" (388) 257 362
    "|>" (389) 112 486 487
    ":=" (390) 171 173 326 345 552 756 758 760 762
    "<<<" (391) 162 423
    ">>>" (392) 163 424
    "<<<=" (393) 164 359 380
    ">>>=" (394) 165 360 381
    "=>" (395) 318 319 780
    "::" (396) 261 262
    "&&" (397) 108 136 439
    "||" (398) 109 137 440
    "^^" (399) 110 138 441
    "&&=" (400) 133 349 370
    "||=" (401) 134 350 371
    "^^=" (402) 135 351 372
    ".." (403) 146 442
    "$$" (404) 489
    "$i" (405) 387 490 556 615
    "$v" (406) 491
    "$b" (407) 492
    "$a" (408) 493 526
    "$t" (409) 657
    "$c" (410) 495 496 504
    "$f" (411) 497 498 499 500 501 502 503 759 760 761 762
    "..." (412) 494
    "integer constant" <i> (413) 52 53 54 55 80 91 335
    "long integer constant" <i64> (414) 337
    "unsigned integer constant" <ui> (415) 336
    "unsigned long integer constant" <ui64> (416) 338
    "unsigned int8 constant" <ui> (417) 339
    "floating point constant" <fd> (418) 81 92 340
    "double constant" <d> (419) 341
    "name" <s> (420) 21 38 46 77 79 86 90 122 170 171 172 178 179 181 260 261 262 294 295 313 314 323 324 325 326 384 385 395 396 397 398 452 453 467 468 473 530 536 555 557 558 559 576 577 585 593 603 614 616 617 618 656 658 659 661 662 741 745 749 755 756 757 758
    "keyword" <s> (421) 39 242 251
    "type function" <s> (422) 40 254
    "start of the string" (423) 27 31
    STRING_CHARACTER <ch> (424) 23 25 32 33
    STRING_CHARACTER_ESC (425) 24 26
    "end of the string" (426) 27 31
    "{" (427) 30
    "}" (428) 30
    "end of failed eader macro" (429)
    ";}}" (430)
    ";}]" (431)
    ";]]" (432)
    ",]]" (433)
    ",}]" (434)
    UNARY_MINUS (435)
    UNARY_PLUS (436)
    PRE_INC (437)
    PRE_DEC (438)
    POST_INC (439)
    POST_DEC (440)
    DEREF (441)


Nonterminals, with rules where they appear

    $accept (214)
        on left: 0
    program (215)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (216)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (217)
        on left: 17 18 19
        on right: 22
    module_name <s> (218)
        on left: 20 21
        on right: 22
    module_declaration (219)
        on left: 22
        on right: 2
    character_sequence <s> (220)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (221)
        on left: 27
        on right: 78 89
    string_builder_body <pExpression> (222)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (223)
        on left: 31
        on right: 411
    reader_character_sequence (224)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (225)
        on left: 35
        on right: 16 410
    $@1 (226)
        on left: 34
        on right: 35
    options_declaration (227)
        on left: 36
        on right: 9
    require_declaration (228)
        on left: 37
        on right: 8
    keyword_or_name <s> (229)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (230)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (231)
        on left: 45 46
        on right: 37
    is_public_module <b> (232)
        on left: 47 48
        on right: 45 46
    expect_declaration (233)
        on left: 49
        on right: 7
    expect_list (234)
        on left: 50 51
        on right: 49 51
    expect_error (235)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (236)
        on left: 54
        on right: 236
    expression_goto <pExpression> (237)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (238)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (239)
        on left: 59 60 61
        on right: 61 71
    if_or_static_if <b> (240)
        on left: 62 63
        on right: 71
    expression_else_one_liner <pExpression> (241)
        on left: 64 65
        on right: 72
    expression_if_one_liner <pExpression> (242)
        on left: 66 67 68 69 70
        on right: 65 72
    expression_if_then_else <pExpression> (243)
        on left: 71 72
        on right: 234
    expression_for_loop <pExpression> (244)
        on left: 73
        on right: 229
    expression_unsafe <pExpression> (245)
        on left: 74
        on right: 226
    expression_while_loop <pExpression> (246)
        on left: 75
        on right: 225
    expression_with <pExpression> (247)
        on left: 76
        on right: 227
    expression_with_alias <pExpression> (248)
        on left: 77
        on right: 228
    annotation_argument_value <aa> (249)
        on left: 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_value_list <aaList> (250)
        on left: 84 85
        on right: 85 96
    annotation_argument_name <s> (251)
        on left: 86 87 88
        on right: 89 90 91 92 93 94 95 96
    annotation_argument <aa> (252)
        on left: 89 90 91 92 93 94 95 96
        on right: 97 98 99 100
    annotation_argument_list <aaList> (253)
        on left: 97 98
        on right: 36 98 105
    metadata_argument_list <aaList> (254)
        on left: 99 100
        on right: 100 506
    annotation_declaration_name <s> (255)
        on left: 101 102 103
        on right: 104 105
    annotation_declaration_basic <fa> (256)
        on left: 104 105
        on right: 106
    annotation_declaration <fa> (257)
        on left: 106 107 108 109 110 111 112
        on right: 107 108 109 110 111 112 113 114
    annotation_list <faList> (258)
        on left: 113 114
        on right: 114 116
    optional_annotation_list <faList> (259)
        on left: 115 116
        on right: 207 332 333 334 522 524 598 613
    optional_function_argument_list <pVarDeclList> (260)
        on left: 117 118 119
        on right: 211 332 333 334 394 714 721 728
    optional_function_type <pTypeDecl> (261)
        on left: 120 121
        on right: 211 332 333 334 394 714 721 728
    function_name <s> (262)
        on left: 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
        on right: 211
    global_function_declaration (263)
        on left: 207
        on right: 6
    optional_public_or_private_function <b> (264)
        on left: 208 209 210
        on right: 213
    function_declaration_header <pFuncDecl> (265)
        on left: 211
        on right: 213 522 524
    function_declaration <pFuncDecl> (266)
        on left: 213
        on right: 207
    $@2 (267)
        on left: 212
        on right: 213
    expression_block <pExpression> (268)
        on left: 214 215
        on right: 60 61 71 73 74 75 76 213 242 286 317 331 334 524
    expr_call_pipe <pExpression> (269)
        on left: 216 217
        on right: 259 364
    expression_any <pExpression> (270)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (271)
        on left: 239 240 241
        on right: 214 215 240 241
    expr_keyword <pExpression> (272)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (273)
        on left: 243 244
        on right: 246 269 680 682
    optional_expr_list_in_braces <pExpression> (274)
        on left: 245 246
        on right: 254
    type_declaration_no_options_list <pTypeDeclList> (275)
        on left: 247 248
        on right: 248 251 254 682
    expression_keyword <pExpression> (276)
        on left: 251 254
        on right: 217 488
    $@3 (277)
        on left: 249
        on right: 251
    $@4 (278)
        on left: 250
        on right: 251
    $@5 (279)
        on left: 252
        on right: 254
    $@6 (280)
        on left: 253
        on right: 254
    expr_pipe <pExpression> (281)
        on left: 255 256 257 258 259
        on right: 219 279 280 284 285 549 562 564
    name_in_namespace <s> (282)
        on left: 260 261 262
        on right: 35 101 312 313 314 382 383 386 402 403 404 408 600 654 680 682
    expression_delete <pExpression> (283)
        on left: 263 264
        on right: 223
    new_type_declaration <pTypeDecl> (284)
        on left: 267
        on right: 270 271
    $@7 (285)
        on left: 265
        on right: 267
    $@8 (286)
        on left: 266
        on right: 267
    expr_new <pExpression> (287)
        on left: 268 269 270 271 272
        on right: 481
    expression_break <pExpression> (288)
        on left: 273
        on right: 69 230
    expression_continue <pExpression> (289)
        on left: 274
        on right: 70 231
    expression_return_no_pipe <pExpression> (290)
        on left: 275 276 277
        on right: 67 278
    expression_return <pExpression> (291)
        on left: 278 279 280
        on right: 232
    expression_yield_no_pipe <pExpression> (292)
        on left: 281 282
        on right: 68 283
    expression_yield <pExpression> (293)
        on left: 283 284 285
        on right: 233
    expression_try_catch <pExpression> (294)
        on left: 286
        on right: 235
    kwd_let_var_or_nothing <b> (295)
        on left: 287 288 289
        on right: 525
    kwd_let <b> (296)
        on left: 290 291
        on right: 298 299 573 575
    optional_in_scope <b> (297)
        on left: 292 293
        on right: 298 299
    tuple_expansion <pNameList> (298)
        on left: 294 295
        on right: 295 296 297
    tuple_expansion_variable_declaration <pVarDecl> (299)
        on left: 296 297
        on right: 299
    expression_let <pExpression> (300)
        on left: 298 299
        on right: 224
    expr_cast <pExpression> (301)
        on left: 302 305 308
        on right: 480
    $@9 (302)
        on left: 300
        on right: 302
    $@10 (303)
        on left: 301
        on right: 302
    $@11 (304)
        on left: 303
        on right: 305
    $@12 (305)
        on left: 304
        on right: 305
    $@13 (306)
        on left: 306
        on right: 308
    $@14 (307)
        on left: 307
        on right: 308
    expr_type_decl <pExpression> (308)
        on left: 311
        on right: 479
    $@15 (309)
        on left: 309
        on right: 311
    $@16 (310)
        on left: 310
        on right: 311
    expr_type_info <pExpression> (311)
        on left: 312 313 314
        on right: 478
    expr_list <pExpression> (312)
        on left: 315 316
        on right: 73 244 276 277 316 383 385 398 404 406 447 496 782 786 796 799 800 803 814 815 816
    block_or_simple_block <pExpression> (313)
        on left: 317 318 319
        on right: 332 333
    block_or_lambda <i> (314)
        on left: 320 321 322
        on right: 332 333 334
    capture_entry <pCapt> (315)
        on left: 323 324 325 326
        on right: 327 328
    capture_list <pCaptList> (316)
        on left: 327 328
        on right: 328 330
    optional_capture_list <pCaptList> (317)
        on left: 329 330
        on right: 332 333 334 459 460
    expr_block <pExpression> (318)
        on left: 331 332
        on right: 255 256 257 258 361 362 363
    expr_full_block <pExpression> (319)
        on left: 333
        on right: 484
    expr_full_block_assumed_piped <pExpression> (320)
        on left: 334
        on right: 216 217
    expr_numeric_const <pExpression> (321)
        on left: 335 336 337 338 339 340 341
        on right: 409
    expr_assign <pExpression> (322)
        on left: 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360
        on right: 222 255
    expr_assign_pipe_right <pExpression> (323)
        on left: 361 362 363 364
        on right: 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381
    expr_assign_pipe <pExpression> (324)
        on left: 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381
        on right: 221
    expr_named_call <pExpression> (325)
        on left: 382 383
        on right: 483
    expr_method_call <pExpression> (326)
        on left: 384 385
        on right: 482
    func_addr_name <pExpression> (327)
        on left: 386 387
        on right: 388 391 394
    func_addr_expr <pExpression> (328)
        on left: 388 391 394
        on right: 454
    $@17 (329)
        on left: 389
        on right: 391
    $@18 (330)
        on left: 390
        on right: 391
    $@19 (331)
        on left: 392
        on right: 394
    $@20 (332)
        on left: 393
        on right: 394
    expr_field <pExpression> (333)
        on left: 395 396 397 398 401
        on right: 415
    $@21 (334)
        on left: 399
        on right: 401
    $@22 (335)
        on left: 400
        on right: 401
    expr_call <pExpression> (336)
        on left: 402 403 404 405 406
        on right: 455
    expr <pExpression> (337)
        on left: 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 465 466 467 468 471 472 473 476 477 478 479 480 481 482 483 484 485 486 487 488
        on right
    $@23 (338)
        on left: 463
        on right: 465
    $@24 (339)
        on left: 464
        on right: 465
    $@25 (340)
        on left: 469
        on right: 471
    $@26 (341)
        on left: 470
        on right: 471
    $@27 (342)
        on left: 474
        on right: 476
    $@28 (343)
        on left: 475
        on right: 476
    expr_mtag <pExpression> (344)
        on left: 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504
        on right: 416
    optional_field_annotation <aaList> (345)
        on left: 505 506
        on right: 517 525 567 575
    optional_override <i> (346)
        on left: 507 508 509
        on right: 517 524
    optional_constant <b> (347)
        on left: 510 511
        on right: 522 524
    optional_public_or_private_member_variable <b> (348)
        on left: 512 513 514
        on right: 517 522 524
    optional_static_member_variable <b> (349)
        on left: 515 516
        on right: 517 524
    structure_variable_declaration <pVarDecl> (350)
        on left: 517
        on right: 520
    struct_variable_declaration_list <pVarDeclList> (351)
        on left: 518 520 522 524
        on right: 520 522 524 610
    $@29 (352)
        on left: 519
        on right: 520
    $@30 (353)
        on left: 521
        on right: 522
    $@31 (354)
        on left: 523
        on right: 524
    function_argument_declaration <pVarDecl> (355)
        on left: 525 526
        on right: 527 528
    function_argument_list <pVarDeclList> (356)
        on left: 527 528
        on right: 119 528
    tuple_type <pVarDecl> (357)
        on left: 529 530
        on right: 531 532 535
    tuple_type_list <pVarDeclList> (358)
        on left: 531 532
        on right: 532 731
    tuple_alias_type_list <pVarDeclList> (359)
        on left: 533 534 535
        on right: 534 535 741
    variant_type <pVarDecl> (360)
        on left: 536
        on right: 537 538 541
    variant_type_list <pVarDeclList> (361)
        on left: 537 538
        on right: 538 734
    variant_alias_type_list <pVarDeclList> (362)
        on left: 539 540 541
        on right: 540 541 745
    copy_or_move <b> (363)
        on left: 542 543
        on right: 547 548 549 755 757 759 761
    variable_declaration <pVarDecl> (364)
        on left: 544 545 546 547 548 549
        on right: 517 525
    copy_or_move_or_clone <i> (365)
        on left: 550 551 552
        on right: 296 297 561 562 563 564
    optional_ref <b> (366)
        on left: 553 554
        on right: 297 563 564
    let_variable_name_with_pos_list <pNameWithPosList> (367)
        on left: 555 556 557 558 559
        on right: 558 559 560 561 562 563 564
    let_variable_declaration <pVarDecl> (368)
        on left: 560 561 562 563 564
        on right: 298 567 575
    global_variable_declaration_list <pVarDeclList> (369)
        on left: 565 567
        on right: 567 573
    $@32 (370)
        on left: 566
        on right: 567
    optional_shared <b> (371)
        on left: 568 569
        on right: 22 573 575
    optional_public_or_private_variable <b> (372)
        on left: 570 571 572
        on right: 573 575
    global_let (373)
        on left: 573 575
        on right: 5
    $@33 (374)
        on left: 574
        on right: 575
    enum_expression <pEnumPair> (375)
        on left: 576 577
        on right: 579 580
    enum_list <pEnum> (376)
        on left: 578 579 580
        on right: 580 598
    optional_public_or_private_alias <b> (377)
        on left: 581 582 583
        on right: 585 741 745 749
    single_alias (378)
        on left: 585
        on right: 586 587 589
    $@34 (379)
        on left: 584
        on right: 585
    alias_list (380)
        on left: 586 587
        on right: 587 588
    alias_declaration (381)
        on left: 588 589
        on right: 10
    optional_public_or_private_enum <b> (382)
        on left: 590 591 592
        on right: 598
    enum_name <pEnum> (383)
        on left: 593
        on right: 598
    optional_enum_basic_type_declaration <type> (384)
        on left: 594 595
        on right: 598
    enum_declaration (385)
        on left: 598
        on right: 4
    $@35 (386)
        on left: 596
        on right: 598
    $@36 (387)
        on left: 597
        on right: 598
    optional_structure_parent <s> (388)
        on left: 599 600
        on right: 603
    optional_sealed <b> (389)
        on left: 601 602
        on right: 603
    structure_name <pStructure> (390)
        on left: 603
        on right: 613
    class_or_struct <b> (391)
        on left: 604 605
        on right: 613
    optional_public_or_private_structure <b> (392)
        on left: 606 607 608
        on right: 613
    optional_struct_variable_declaration_list <pVarDeclList> (393)
        on left: 609 610
        on right: 613
    structure_declaration (394)
        on left: 613
        on right: 3
    $@37 (395)
        on left: 611
        on right: 613
    $@38 (396)
        on left: 612
        on right: 613
    variable_name_with_pos_list <pNameWithPosList> (397)
        on left: 614 615 616 617 618
        on right: 73 544 545 546 547 548 549 617 618 814 815 816
    basic_type_declaration <type> (398)
        on left: 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645
        on right: 405 406 466 472 477 487 670
    enum_basic_type_declaration <type> (399)
        on left: 646 647 648 649 650 651 652 653
        on right: 595
    structure_type_declaration <pTypeDecl> (400)
        on left: 654
        on right: 268 269 673
    auto_type_declaration <pTypeDecl> (401)
        on left: 655 656 657
        on right: 671
    bitfield_bits <pNameList> (402)
        on left: 658 659
        on right: 659 665
    bitfield_alias_bits <pNameList> (403)
        on left: 660 661 662
        on right: 662 749
    bitfield_type_declaration <pTypeDecl> (404)
        on left: 665
        on right: 672
    $@39 (405)
        on left: 663
        on right: 665
    $@40 (406)
        on left: 664
        on right: 665
    table_type_pair <aTypePair> (407)
        on left: 666 667
        on right: 704
    dim_list <pTypeDecl> (408)
        on left: 668 669
        on right: 669 674
    type_declaration_no_options <pTypeDecl> (409)
        on left: 670 671 672 673 674 675 678 679 680 682 683 684 685 686 687 688 689 690 691 692 693 694 697 698 701 704 707 708 711 714 715 718 721 722 725 728 731 734
        on right: 296 302 305 308 391 459 460 465 560 561 562 674 675 683 684 685 686 687 688 689 690 691 692 693 694 698 735 736 770 773 776 779 785 789 792 795 799 803 808 809
    $@41 (410)
        on left: 676
        on right: 678
    $@42 (411)
        on left: 677
        on right: 678
    $@43 (412)
        on left: 681
        on right: 682
    $@44 (413)
        on left: 695
        on right: 697
    $@45 (414)
        on left: 696
        on right: 697
    $@46 (415)
        on left: 699
        on right: 701
    $@47 (416)
        on left: 700
        on right: 701
    $@48 (417)
        on left: 702
        on right: 704
    $@49 (418)
        on left: 703
        on right: 704
    $@50 (419)
        on left: 705
        on right: 707
    $@51 (420)
        on left: 706
        on right: 707
    $@52 (421)
        on left: 709
        on right: 711
    $@53 (422)
        on left: 710
        on right: 711
    $@54 (423)
        on left: 712
        on right: 714
    $@55 (424)
        on left: 713
        on right: 714
    $@56 (425)
        on left: 716
        on right: 718
    $@57 (426)
        on left: 717
        on right: 718
    $@58 (427)
        on left: 719
        on right: 721
    $@59 (428)
        on left: 720
        on right: 721
    $@60 (429)
        on left: 723
        on right: 725
    $@61 (430)
        on left: 724
        on right: 725
    $@62 (431)
        on left: 726
        on right: 728
    $@63 (432)
        on left: 727
        on right: 728
    $@64 (433)
        on left: 729
        on right: 731
    $@65 (434)
        on left: 730
        on right: 731
    $@66 (435)
        on left: 732
        on right: 734
    $@67 (436)
        on left: 733
        on right: 734
    type_declaration <pTypeDecl> (437)
        on left: 735 736 737
        on right: 121 247 248 267 311 471 476 529 530 536 546 547 585 666 667 678 697 701 707 711 718 725 736 737
    tuple_alias_declaration (438)
        on left: 741
        on right: 12
    $@68 (439)
        on left: 738
        on right: 741
    $@69 (440)
        on left: 739
        on right: 741
    $@70 (441)
        on left: 740
        on right: 741
    variant_alias_declaration (442)
        on left: 745
        on right: 11
    $@71 (443)
        on left: 742
        on right: 745
    $@72 (444)
        on left: 743
        on right: 745
    $@73 (445)
        on left: 744
        on right: 745
    bitfield_alias_declaration (446)
        on left: 749
        on right: 13
    $@74 (447)
        on left: 746
        on right: 749
    $@75 (448)
        on left: 747
        on right: 749
    $@76 (449)
        on left: 748
        on right: 749
    make_decl <pExpression> (450)
        on left: 750 751 752 753 754
        on right: 272 412
    make_struct_fields <pMakeStruct> (451)
        on left: 755 756 757 758 759 760 761 762
        on right: 382 383 757 758 761 762 763 764 765
    make_struct_single <pExpression> (452)
        on left: 763
        on right: 271 403
    make_struct_dim <pExpression> (453)
        on left: 764 765
        on right: 765 770 773 776 785 789 792 795
    use_initializer <b> (454)
        on left: 766 767
        on right: 270 271 770 773 779 785 789 792
    make_struct_decl <pExpression> (455)
        on left: 770 773 776 779
        on right: 750
    $@77 (456)
        on left: 768
        on right: 770
    $@78 (457)
        on left: 769
        on right: 770
    $@79 (458)
        on left: 771
        on right: 773
    $@80 (459)
        on left: 772
        on right: 773
    $@81 (460)
        on left: 774
        on right: 776
    $@82 (461)
        on left: 775
        on right: 776
    $@83 (462)
        on left: 777
        on right: 779
    $@84 (463)
        on left: 778
        on right: 779
    make_map_tuple <pExpression> (464)
        on left: 780 781
        on right: 804 805 816
    make_tuple_call <pExpression> (465)
        on left: 782 785
        on right: 754
    $@85 (466)
        on left: 783
        on right: 785
    $@86 (467)
        on left: 784
        on right: 785
    make_dim_decl <pExpression> (468)
        on left: 786 789 792 795 796 799 800 803
        on right: 751
    $@87 (469)
        on left: 787
        on right: 789
    $@88 (470)
        on left: 788
        on right: 789
    $@89 (471)
        on left: 790
        on right: 792
    $@90 (472)
        on left: 791
        on right: 792
    $@91 (473)
        on left: 793
        on right: 795
    $@92 (474)
        on left: 794
        on right: 795
    $@93 (475)
        on left: 797
        on right: 799
    $@94 (476)
        on left: 798
        on right: 799
    $@95 (477)
        on left: 801
        on right: 803
    $@96 (478)
        on left: 802
        on right: 803
    expr_map_tuple_list <pExpression> (479)
        on left: 804 805
        on right: 805 806 807 808 809
    make_table_decl <pExpression> (480)
        on left: 806 807 808 809
        on right: 752
    array_comprehension_where <pExpression> (481)
        on left: 810 811
        on right: 814 815 816
    optional_comma <b> (482)
        on left: 812 813
        on right: 447 598 749 782 786 796 799 800 803 806 807 808 809
    array_comprehension <pExpression> (483)
        on left: 814 815 816
        on right: 753


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 115 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  290 kwd_let: "let" .

    $default  reduce using rule 290 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  588 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  589                  | "typedef" . single_alias "end of expression"

    "public"               shift, and go to state 48
    "private"              shift, and go to state 49
    "begin of code block"  shift, and go to state 50

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 52


State 8

  291 kwd_let: "var" .

    $default  reduce using rule 291 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 53
    '$'     shift, and go to state 54

    module_name  go to state 55


State 10

  749 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 11

  741 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 12

  745 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 58


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 61


State 15

  116 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  207 global_function_declaration: optional_annotation_list . "def" function_declaration
  598 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"
  613 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 73
    "class"   shift, and go to state 74
    "def"     shift, and go to state 75
    "enum"    shift, and go to state 76

    class_or_struct  go to state 77


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  573 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  575           | kwd_let . optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 78

    $default  reduce using rule 568 (optional_shared)

    optional_shared  go to state 79


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   87 annotation_argument_name: "type" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   88 annotation_argument_name: "in" .

    $default  reduce using rule 88 (annotation_argument_name)


State 34

   86 annotation_argument_name: "name" .

    $default  reduce using rule 86 (annotation_argument_name)


State 35

   89 annotation_argument: annotation_argument_name . '=' string_constant
   90                    | annotation_argument_name . '=' "name"
   91                    | annotation_argument_name . '=' "integer constant"
   92                    | annotation_argument_name . '=' "floating point constant"
   93                    | annotation_argument_name . '=' "true"
   94                    | annotation_argument_name . '=' "false"
   95                    | annotation_argument_name .
   96                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 80

    $default  reduce using rule 95 (annotation_argument)


State 36

   97 annotation_argument_list: annotation_argument .

    $default  reduce using rule 97 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 81

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 82

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 83

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 84


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 85
    "public"  shift, and go to state 86
    '/'       shift, and go to state 87
    '.'       shift, and go to state 88

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 89


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  583 optional_public_or_private_alias: "public" .

    $default  reduce using rule 583 (optional_public_or_private_alias)


State 49

  582 optional_public_or_private_alias: "private" .

    $default  reduce using rule 582 (optional_public_or_private_alias)


State 50

  588 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 90
    alias_list                        go to state 91


State 51

  585 single_alias: optional_public_or_private_alias . "name" $@34 '=' type_declaration

    "name"  shift, and go to state 92


State 52

  589 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 93


State 53

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 54

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 55

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 78

    $default  reduce using rule 568 (optional_shared)

    optional_shared  go to state 94


State 56

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "name"  shift, and go to state 95


State 57

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "name"  shift, and go to state 96


State 58

  745 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "name"  shift, and go to state 97


State 59

  262 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 98


State 60

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"

    "::"  shift, and go to state 99

    "::"      [reduce using rule 260 (name_in_namespace)]
    $default  reduce using rule 260 (name_in_namespace)


State 61

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 100


State 62

  102 annotation_declaration_name: "require" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 63

  103 annotation_declaration_name: "private" .

    $default  reduce using rule 103 (annotation_declaration_name)


State 64

  112 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 101
    name_in_namespace             go to state 71


State 65

  107 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 66

  111 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 67

  104 annotation_declaration_basic: annotation_declaration_name .
  105                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 104

    $default  reduce using rule 104 (annotation_declaration_basic)


State 68

  106 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 106 (annotation_declaration)


State 69

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 113 (annotation_list)


State 70

  114 annotation_list: annotation_list . ',' annotation_declaration
  116 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 108
    ']'  shift, and go to state 109


State 71

  101 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 101 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  605 class_or_struct: "struct" .

    $default  reduce using rule 605 (class_or_struct)


State 74

  604 class_or_struct: "class" .

    $default  reduce using rule 604 (class_or_struct)


State 75

  207 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 208 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 112
    function_declaration                 go to state 113


State 76

  598 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 590 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 116


State 77

  613 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 606 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 119


State 78

  569 optional_shared: "shared" .

    $default  reduce using rule 569 (optional_shared)


State 79

  573 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  575           | kwd_let optional_shared . optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 570 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 122


State 80

   89 annotation_argument: annotation_argument_name '=' . string_constant
   90                    | annotation_argument_name '=' . "name"
   91                    | annotation_argument_name '=' . "integer constant"
   92                    | annotation_argument_name '=' . "floating point constant"
   93                    | annotation_argument_name '=' . "true"
   94                    | annotation_argument_name '=' . "false"
   96                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 123
    "false"                    shift, and go to state 124
    "integer constant"         shift, and go to state 125
    "floating point constant"  shift, and go to state 126
    "name"                     shift, and go to state 127
    "start of the string"      shift, and go to state 128
    '('                        shift, and go to state 129

    string_constant  go to state 130


State 81

   98 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 131


State 82

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 132


State 83

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 133


State 84

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 88

    $default  reduce using rule 42 (require_module_name)


State 85

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 134


State 86

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 87

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 136


State 89

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 90

  586 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  587 alias_list: alias_list . single_alias "end of expression"
  588 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 48
    "private"            shift, and go to state 49
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 139


State 92

  585 single_alias: optional_public_or_private_alias "name" . $@34 '=' type_declaration

    $default  reduce using rule 584 ($@34)

    $@34  go to state 140


State 93

  589 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 589 (alias_declaration)


State 94

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 95

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    $default  reduce using rule 746 ($@74)

    $@74  go to state 144


State 96

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 738 ($@68)

    $@68  go to state 145


State 97

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 742 ($@71)

    $@71  go to state 146


State 98

  262 name_in_namespace: "::" "name" .

    $default  reduce using rule 262 (name_in_namespace)


State 99

  261 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 100

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 101

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  112                       | "|>" annotation_declaration .

    $default  reduce using rule 112 (annotation_declaration)


State 102

  107 annotation_declaration: '!' annotation_declaration .
  108                       | annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 103

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  111                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107
    ')'   shift, and go to state 150


State 104

  105 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 105

  108 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 152
    name_in_namespace             go to state 71


State 106

  109 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 153
    name_in_namespace             go to state 71


State 107

  110 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 154
    name_in_namespace             go to state 71


State 108

  114 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 155
    name_in_namespace             go to state 71


State 109

  116 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 116 (optional_annotation_list)


State 110

  210 optional_public_or_private_function: "public" .

    $default  reduce using rule 210 (optional_public_or_private_function)


State 111

  209 optional_public_or_private_function: "private" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 112

  213 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 212 ($@2)

    $@2  go to state 156


State 113

  207 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 207 (global_function_declaration)


State 114

  592 optional_public_or_private_enum: "public" .

    $default  reduce using rule 592 (optional_public_or_private_enum)


State 115

  591 optional_public_or_private_enum: "private" .

    $default  reduce using rule 591 (optional_public_or_private_enum)


State 116

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 117

  608 optional_public_or_private_structure: "public" .

    $default  reduce using rule 608 (optional_public_or_private_structure)


State 118

  607 optional_public_or_private_structure: "private" .

    $default  reduce using rule 607 (optional_public_or_private_structure)


State 119

  613 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@37 structure_name $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 611 ($@37)

    $@37  go to state 159


State 120

  572 optional_public_or_private_variable: "public" .

    $default  reduce using rule 572 (optional_public_or_private_variable)


State 121

  571 optional_public_or_private_variable: "private" .

    $default  reduce using rule 571 (optional_public_or_private_variable)


State 122

  573 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  575           | kwd_let optional_shared optional_public_or_private_variable . $@33 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 574 ($@33)

    $@33  go to state 161


State 123

   93 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 93 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   91 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 91 (annotation_argument)


State 126

   92 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 92 (annotation_argument)


State 127

   90 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 90 (annotation_argument)


State 128

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 129

   96 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 130

   89 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 89 (annotation_argument)


State 131

   98 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 132

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 133

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 134

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 86

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 135

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 136

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 137

  586 alias_list: single_alias "end of expression" .

    $default  reduce using rule 586 (alias_list)


State 138

  588 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 588 (alias_declaration)


State 139

  587 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 174


State 140

  585 single_alias: optional_public_or_private_alias "name" $@34 . '=' type_declaration

    '='  shift, and go to state 175


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 . "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "begin of code block"  shift, and go to state 176


State 145

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 . "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "begin of code block"  shift, and go to state 177


State 146

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 . "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "begin of code block"  shift, and go to state 178


State 147

  261 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 261 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  111 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 111 (annotation_declaration)


State 151

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 81
    ')'  shift, and go to state 180


State 152

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration .
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 108 (annotation_declaration)


State 153

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration .
  110                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 105
    "^^"  shift, and go to state 107

    $default  reduce using rule 109 (annotation_declaration)


State 154

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 105

    $default  reduce using rule 110 (annotation_declaration)


State 155

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  114 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 114 (annotation_list)


State 156

  213 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  593 enum_name: "name" .

    $default  reduce using rule 593 (enum_name)


State 158

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    ':'  shift, and go to state 212

    $default  reduce using rule 594 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 213


State 159

  613 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 . structure_name $@38 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 601 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 565 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 218

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list     go to state 219
    optional_field_annotation  go to state 220


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 221
    STRING_CHARACTER_ESC  shift, and go to state 222
    "end of the string"   shift, and go to state 223


State 165

   82 annotation_argument_value: "true" .

    $default  reduce using rule 82 (annotation_argument_value)


State 166

   83 annotation_argument_value: "false" .

    $default  reduce using rule 83 (annotation_argument_value)


State 167

   80 annotation_argument_value: "integer constant" .

    $default  reduce using rule 80 (annotation_argument_value)


State 168

   81 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 169

   79 annotation_argument_value: "name" .

    $default  reduce using rule 79 (annotation_argument_value)


State 170

   78 annotation_argument_value: string_constant .

    $default  reduce using rule 78 (annotation_argument_value)


State 171

   84 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 84 (annotation_argument_value_list)


State 172

   85 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 224
    ')'  shift, and go to state 225


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  587 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 587 (alias_list)


State 175

  585 single_alias: optional_public_or_private_alias "name" $@34 '=' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 273


State 176

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" . $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    $default  reduce using rule 747 ($@75)

    $@75  go to state 274


State 177

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" . $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 739 ($@69)

    $@69  go to state 275


State 178

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" . $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 743 ($@72)

    $@72  go to state 276


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 105 (annotation_declaration_basic)


State 181

  123 function_name: "operator" . '!'
  124              | "operator" . '~'
  125              | "operator" . "+="
  126              | "operator" . "-="
  127              | "operator" . "*="
  128              | "operator" . "/="
  129              | "operator" . "%="
  130              | "operator" . "&="
  131              | "operator" . "|="
  132              | "operator" . "^="
  133              | "operator" . "&&="
  134              | "operator" . "||="
  135              | "operator" . "^^="
  136              | "operator" . "&&"
  137              | "operator" . "||"
  138              | "operator" . "^^"
  139              | "operator" . '+'
  140              | "operator" . '-'
  141              | "operator" . '*'
  142              | "operator" . '/'
  143              | "operator" . '%'
  144              | "operator" . '<'
  145              | "operator" . '>'
  146              | "operator" . ".."
  147              | "operator" . "=="
  148              | "operator" . "!="
  149              | "operator" . "<="
  150              | "operator" . ">="
  151              | "operator" . '&'
  152              | "operator" . '|'
  153              | "operator" . '^'
  156              | "operator" . "++"
  157              | "operator" . "--"
  158              | "operator" . "<<"
  159              | "operator" . ">>"
  160              | "operator" . "<<="
  161              | "operator" . ">>="
  162              | "operator" . "<<<"
  163              | "operator" . ">>>"
  164              | "operator" . "<<<="
  165              | "operator" . ">>>="
  166              | "operator" . '[' ']'
  167              | "operator" . "?[" ']'
  168              | "operator" . '.'
  169              | "operator" . "?."
  170              | "operator" . '.' "name"
  171              | "operator" . '.' "name" ":="
  172              | "operator" . "?." "name"
  173              | "operator" . ":="
  174              | "operator" . "delete"
  175              | "operator" . "??"
  176              | "operator" . "is"
  177              | "operator" . "as"
  178              | "operator" . "is" "name"
  179              | "operator" . "as" "name"
  180              | "operator" . '?' "as"
  181              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 277
    "as"      shift, and go to state 278
    "delete"  shift, and go to state 279
    "+="      shift, and go to state 280
    "-="      shift, and go to state 281
    "/="      shift, and go to state 282
    "*="      shift, and go to state 283
    "%="      shift, and go to state 284
    "&="      shift, and go to state 285
    "|="      shift, and go to state 286
    "^="      shift, and go to state 287
    "<<"      shift, and go to state 288
    ">>"      shift, and go to state 289
    "++"      shift, and go to state 290
    "--"      shift, and go to state 291
    "<="      shift, and go to state 292
    "<<="     shift, and go to state 293
    ">>="     shift, and go to state 294
    ">="      shift, and go to state 295
    "=="      shift, and go to state 296
    "!="      shift, and go to state 297
    "??"      shift, and go to state 298
    "?."      shift, and go to state 299
    "?["      shift, and go to state 300
    ":="      shift, and go to state 301
    "<<<"     shift, and go to state 302
    ">>>"     shift, and go to state 303
    "<<<="    shift, and go to state 304
    ">>>="    shift, and go to state 305
    "&&"      shift, and go to state 306
    "||"      shift, and go to state 307
    "^^"      shift, and go to state 308
    "&&="     shift, and go to state 309
    "||="     shift, and go to state 310
    "^^="     shift, and go to state 311
    ".."      shift, and go to state 312
    '?'       shift, and go to state 313
    '|'       shift, and go to state 314
    '^'       shift, and go to state 315
    '&'       shift, and go to state 316
    '<'       shift, and go to state 317
    '>'       shift, and go to state 318
    '-'       shift, and go to state 319
    '+'       shift, and go to state 320
    '*'       shift, and go to state 321
    '/'       shift, and go to state 322
    '%'       shift, and go to state 323
    '~'       shift, and go to state 324
    '!'       shift, and go to state 325
    '.'       shift, and go to state 326
    '['       shift, and go to state 327


State 182

  182 function_name: "bool" .

    $default  reduce using rule 182 (function_name)


State 183

  183 function_name: "string" .

    $default  reduce using rule 183 (function_name)


State 184

  184 function_name: "int" .

    $default  reduce using rule 184 (function_name)


State 185

  185 function_name: "int2" .

    $default  reduce using rule 185 (function_name)


State 186

  186 function_name: "int3" .

    $default  reduce using rule 186 (function_name)


State 187

  187 function_name: "int4" .

    $default  reduce using rule 187 (function_name)


State 188

  188 function_name: "uint" .

    $default  reduce using rule 188 (function_name)


State 189

  189 function_name: "uint2" .

    $default  reduce using rule 189 (function_name)


State 190

  190 function_name: "uint3" .

    $default  reduce using rule 190 (function_name)


State 191

  191 function_name: "uint4" .

    $default  reduce using rule 191 (function_name)


State 192

  192 function_name: "float" .

    $default  reduce using rule 192 (function_name)


State 193

  193 function_name: "float2" .

    $default  reduce using rule 193 (function_name)


State 194

  194 function_name: "float3" .

    $default  reduce using rule 194 (function_name)


State 195

  195 function_name: "float4" .

    $default  reduce using rule 195 (function_name)


State 196

  196 function_name: "range" .

    $default  reduce using rule 196 (function_name)


State 197

  197 function_name: "urange" .

    $default  reduce using rule 197 (function_name)


State 198

  198 function_name: "range64" .

    $default  reduce using rule 198 (function_name)


State 199

  199 function_name: "urange64" .

    $default  reduce using rule 199 (function_name)


State 200

  200 function_name: "int64" .

    $default  reduce using rule 200 (function_name)


State 201

  201 function_name: "uint64" .

    $default  reduce using rule 201 (function_name)


State 202

  202 function_name: "double" .

    $default  reduce using rule 202 (function_name)


State 203

  203 function_name: "int8" .

    $default  reduce using rule 203 (function_name)


State 204

  204 function_name: "uint8" .

    $default  reduce using rule 204 (function_name)


State 205

  205 function_name: "int16" .

    $default  reduce using rule 205 (function_name)


State 206

  206 function_name: "uint16" .

    $default  reduce using rule 206 (function_name)


State 207

  154 function_name: "++" . "operator"

    "operator"  shift, and go to state 328


State 208

  155 function_name: "--" . "operator"

    "operator"  shift, and go to state 329


State 209

  122 function_name: "name" .

    $default  reduce using rule 122 (function_name)


State 210

  211 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 331


State 211

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 333


State 212

  595 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 334
    "uint"    shift, and go to state 335
    "int64"   shift, and go to state 336
    "uint64"  shift, and go to state 337
    "int8"    shift, and go to state 338
    "uint8"   shift, and go to state 339
    "int16"   shift, and go to state 340
    "uint16"  shift, and go to state 341

    enum_basic_type_declaration  go to state 342


State 213

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "begin of code block"  shift, and go to state 343


State 214

  602 optional_sealed: "sealed" .

    $default  reduce using rule 602 (optional_sealed)


State 215

  603 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 344


State 216

  613 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name . $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 612 ($@38)

    $@38  go to state 345


State 217

  567 global_variable_declaration_list: global_variable_declaration_list . $@32 optional_field_annotation let_variable_declaration
  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 346

    $default  reduce using rule 566 ($@32)

    $@32  go to state 347


State 218

   99 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 348


State 219

  100 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  506 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 349

    $default  reduce using rule 506 (optional_field_annotation)


State 220

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 350
    "name"  shift, and go to state 351

    let_variable_name_with_pos_list  go to state 352
    let_variable_declaration         go to state 353


State 221

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 222

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 223

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 224

   85 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant            go to state 170
    annotation_argument_value  go to state 354


State 225

   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 96 (annotation_argument)


State 226

  678 type_declaration_no_options: "type" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 355


State 227

  701 type_declaration_no_options: "array" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 356


State 228

  704 type_declaration_no_options: "table" . '<' $@48 table_type_pair '>' $@49

    '<'  shift, and go to state 357


State 229

  679 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 358


State 230

  707 type_declaration_no_options: "iterator" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 359


State 231

  697 type_declaration_no_options: "smart_ptr" . '<' $@44 type_declaration '>' $@45

    '<'  shift, and go to state 360


State 232

  619 basic_type_declaration: "bool" .

    $default  reduce using rule 619 (basic_type_declaration)


State 233

  639 basic_type_declaration: "void" .

    $default  reduce using rule 639 (basic_type_declaration)


State 234

  620 basic_type_declaration: "string" .

    $default  reduce using rule 620 (basic_type_declaration)


State 235

  655 auto_type_declaration: "auto" .
  656                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 361

    $default  reduce using rule 655 (auto_type_declaration)


State 236

  621 basic_type_declaration: "int" .

    $default  reduce using rule 621 (basic_type_declaration)


State 237

  625 basic_type_declaration: "int2" .

    $default  reduce using rule 625 (basic_type_declaration)


State 238

  626 basic_type_declaration: "int3" .

    $default  reduce using rule 626 (basic_type_declaration)


State 239

  627 basic_type_declaration: "int4" .

    $default  reduce using rule 627 (basic_type_declaration)


State 240

  628 basic_type_declaration: "uint" .

    $default  reduce using rule 628 (basic_type_declaration)


State 241

  645 basic_type_declaration: "bitfield" .
  665 bitfield_type_declaration: "bitfield" . '<' $@39 bitfield_bits '>' $@40

    '<'  shift, and go to state 362

    $default  reduce using rule 645 (basic_type_declaration)


State 242

  632 basic_type_declaration: "uint2" .

    $default  reduce using rule 632 (basic_type_declaration)


State 243

  633 basic_type_declaration: "uint3" .

    $default  reduce using rule 633 (basic_type_declaration)


State 244

  634 basic_type_declaration: "uint4" .

    $default  reduce using rule 634 (basic_type_declaration)


State 245

  635 basic_type_declaration: "float" .

    $default  reduce using rule 635 (basic_type_declaration)


State 246

  636 basic_type_declaration: "float2" .

    $default  reduce using rule 636 (basic_type_declaration)


State 247

  637 basic_type_declaration: "float3" .

    $default  reduce using rule 637 (basic_type_declaration)


State 248

  638 basic_type_declaration: "float4" .

    $default  reduce using rule 638 (basic_type_declaration)


State 249

  640 basic_type_declaration: "range" .

    $default  reduce using rule 640 (basic_type_declaration)


State 250

  641 basic_type_declaration: "urange" .

    $default  reduce using rule 641 (basic_type_declaration)


State 251

  642 basic_type_declaration: "range64" .

    $default  reduce using rule 642 (basic_type_declaration)


State 252

  643 basic_type_declaration: "urange64" .

    $default  reduce using rule 643 (basic_type_declaration)


State 253

  708 type_declaration_no_options: "block" .
  711                            | "block" . '<' $@52 type_declaration '>' $@53
  714                            | "block" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 363

    $default  reduce using rule 708 (type_declaration_no_options)


State 254

  624 basic_type_declaration: "int64" .

    $default  reduce using rule 624 (basic_type_declaration)


State 255

  631 basic_type_declaration: "uint64" .

    $default  reduce using rule 631 (basic_type_declaration)


State 256

  644 basic_type_declaration: "double" .

    $default  reduce using rule 644 (basic_type_declaration)


State 257

  715 type_declaration_no_options: "function" .
  718                            | "function" . '<' $@56 type_declaration '>' $@57
  721                            | "function" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 364

    $default  reduce using rule 715 (type_declaration_no_options)


State 258

  722 type_declaration_no_options: "lambda" .
  725                            | "lambda" . '<' $@60 type_declaration '>' $@61
  728                            | "lambda" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 365

    $default  reduce using rule 722 (type_declaration_no_options)


State 259

  622 basic_type_declaration: "int8" .

    $default  reduce using rule 622 (basic_type_declaration)


State 260

  629 basic_type_declaration: "uint8" .

    $default  reduce using rule 629 (basic_type_declaration)


State 261

  623 basic_type_declaration: "int16" .

    $default  reduce using rule 623 (basic_type_declaration)


State 262

  630 basic_type_declaration: "uint16" .

    $default  reduce using rule 630 (basic_type_declaration)


State 263

  731 type_declaration_no_options: "tuple" . '<' $@64 tuple_type_list '>' $@65

    '<'  shift, and go to state 366


State 264

  734 type_declaration_no_options: "variant" . '<' $@66 variant_type_list '>' $@67

    '<'  shift, and go to state 367


State 265

  657 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 368


State 266

  680 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  682                            | '$' . name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 369


State 267

  654 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 654 (structure_type_declaration)


State 268

  670 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 670 (type_declaration_no_options)


State 269

  673 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 673 (type_declaration_no_options)


State 270

  671 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 671 (type_declaration_no_options)


State 271

  672 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 672 (type_declaration_no_options)


State 272

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  735 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    $default  reduce using rule 735 (type_declaration)

    dim_list  go to state 380


State 273

  585 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 585 (single_alias)


State 274

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 . bitfield_alias_bits optional_comma $@76 "end of code block"

    "name"  shift, and go to state 382

    $default  reduce using rule 660 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 383


State 275

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 . tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 533 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 384


State 276

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 . variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 539 (variant_alias_type_list)

    variant_alias_type_list  go to state 385


State 277

  176 function_name: "operator" "is" .
  178              | "operator" "is" . "name"

    "name"  shift, and go to state 386

    $default  reduce using rule 176 (function_name)


State 278

  177 function_name: "operator" "as" .
  179              | "operator" "as" . "name"

    "name"  shift, and go to state 387

    $default  reduce using rule 177 (function_name)


State 279

  174 function_name: "operator" "delete" .

    $default  reduce using rule 174 (function_name)


State 280

  125 function_name: "operator" "+=" .

    $default  reduce using rule 125 (function_name)


State 281

  126 function_name: "operator" "-=" .

    $default  reduce using rule 126 (function_name)


State 282

  128 function_name: "operator" "/=" .

    $default  reduce using rule 128 (function_name)


State 283

  127 function_name: "operator" "*=" .

    $default  reduce using rule 127 (function_name)


State 284

  129 function_name: "operator" "%=" .

    $default  reduce using rule 129 (function_name)


State 285

  130 function_name: "operator" "&=" .

    $default  reduce using rule 130 (function_name)


State 286

  131 function_name: "operator" "|=" .

    $default  reduce using rule 131 (function_name)


State 287

  132 function_name: "operator" "^=" .

    $default  reduce using rule 132 (function_name)


State 288

  158 function_name: "operator" "<<" .

    $default  reduce using rule 158 (function_name)


State 289

  159 function_name: "operator" ">>" .

    $default  reduce using rule 159 (function_name)


State 290

  156 function_name: "operator" "++" .

    $default  reduce using rule 156 (function_name)


State 291

  157 function_name: "operator" "--" .

    $default  reduce using rule 157 (function_name)


State 292

  149 function_name: "operator" "<=" .

    $default  reduce using rule 149 (function_name)


State 293

  160 function_name: "operator" "<<=" .

    $default  reduce using rule 160 (function_name)


State 294

  161 function_name: "operator" ">>=" .

    $default  reduce using rule 161 (function_name)


State 295

  150 function_name: "operator" ">=" .

    $default  reduce using rule 150 (function_name)


State 296

  147 function_name: "operator" "==" .

    $default  reduce using rule 147 (function_name)


State 297

  148 function_name: "operator" "!=" .

    $default  reduce using rule 148 (function_name)


State 298

  175 function_name: "operator" "??" .

    $default  reduce using rule 175 (function_name)


State 299

  169 function_name: "operator" "?." .
  172              | "operator" "?." . "name"

    "name"  shift, and go to state 388

    $default  reduce using rule 169 (function_name)


State 300

  167 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 389


State 301

  173 function_name: "operator" ":=" .

    $default  reduce using rule 173 (function_name)


State 302

  162 function_name: "operator" "<<<" .

    $default  reduce using rule 162 (function_name)


State 303

  163 function_name: "operator" ">>>" .

    $default  reduce using rule 163 (function_name)


State 304

  164 function_name: "operator" "<<<=" .

    $default  reduce using rule 164 (function_name)


State 305

  165 function_name: "operator" ">>>=" .

    $default  reduce using rule 165 (function_name)


State 306

  136 function_name: "operator" "&&" .

    $default  reduce using rule 136 (function_name)


State 307

  137 function_name: "operator" "||" .

    $default  reduce using rule 137 (function_name)


State 308

  138 function_name: "operator" "^^" .

    $default  reduce using rule 138 (function_name)


State 309

  133 function_name: "operator" "&&=" .

    $default  reduce using rule 133 (function_name)


State 310

  134 function_name: "operator" "||=" .

    $default  reduce using rule 134 (function_name)


State 311

  135 function_name: "operator" "^^=" .

    $default  reduce using rule 135 (function_name)


State 312

  146 function_name: "operator" ".." .

    $default  reduce using rule 146 (function_name)


State 313

  180 function_name: "operator" '?' . "as"
  181              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 390


State 314

  152 function_name: "operator" '|' .

    $default  reduce using rule 152 (function_name)


State 315

  153 function_name: "operator" '^' .

    $default  reduce using rule 153 (function_name)


State 316

  151 function_name: "operator" '&' .

    $default  reduce using rule 151 (function_name)


State 317

  144 function_name: "operator" '<' .

    $default  reduce using rule 144 (function_name)


State 318

  145 function_name: "operator" '>' .

    $default  reduce using rule 145 (function_name)


State 319

  140 function_name: "operator" '-' .

    $default  reduce using rule 140 (function_name)


State 320

  139 function_name: "operator" '+' .

    $default  reduce using rule 139 (function_name)


State 321

  141 function_name: "operator" '*' .

    $default  reduce using rule 141 (function_name)


State 322

  142 function_name: "operator" '/' .

    $default  reduce using rule 142 (function_name)


State 323

  143 function_name: "operator" '%' .

    $default  reduce using rule 143 (function_name)


State 324

  124 function_name: "operator" '~' .

    $default  reduce using rule 124 (function_name)


State 325

  123 function_name: "operator" '!' .

    $default  reduce using rule 123 (function_name)


State 326

  168 function_name: "operator" '.' .
  170              | "operator" '.' . "name"
  171              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 391

    $default  reduce using rule 168 (function_name)


State 327

  166 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 392


State 328

  154 function_name: "++" "operator" .

    $default  reduce using rule 154 (function_name)


State 329

  155 function_name: "--" "operator" .

    $default  reduce using rule 155 (function_name)


State 330

  118 optional_function_argument_list: '(' . ')'
  119                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 393
    ')'   shift, and go to state 394
    '@'   shift, and go to state 218

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list         go to state 219
    optional_field_annotation      go to state 395
    function_argument_declaration  go to state 396
    function_argument_list         go to state 397


State 331

  211 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 399


State 332

  214 expression_block: "begin of code block" . expressions "end of code block"
  215                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 239 (expressions)

    expressions  go to state 400


State 333

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 213 (function_declaration)


State 334

  646 enum_basic_type_declaration: "int" .

    $default  reduce using rule 646 (enum_basic_type_declaration)


State 335

  649 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 336

  652 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 652 (enum_basic_type_declaration)


State 337

  653 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 653 (enum_basic_type_declaration)


State 338

  647 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 647 (enum_basic_type_declaration)


State 339

  650 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 340

  648 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 648 (enum_basic_type_declaration)


State 341

  651 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 651 (enum_basic_type_declaration)


State 342

  595 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 595 (optional_enum_basic_type_declaration)


State 343

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@35 enum_list optional_comma $@36 "end of code block"

    $default  reduce using rule 596 ($@35)

    $@35  go to state 401


State 344

  603 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 402

    $default  reduce using rule 599 (optional_structure_parent)

    optional_structure_parent  go to state 403


State 345

  613 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 404

    $default  reduce using rule 609 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 405


State 346

  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 573 (global_let)


State 347

  567 global_variable_declaration_list: global_variable_declaration_list $@32 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 218

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list     go to state 219
    optional_field_annotation  go to state 406


State 348

   99 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 99 (metadata_argument_list)


State 349

  100 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 407


State 350

  556 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 408


State 351

  555 let_variable_name_with_pos_list: "name" .
  557                                | "name" . "aka" "name"

    "aka"  shift, and go to state 409

    $default  reduce using rule 555 (let_variable_name_with_pos_list)


State 352

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  559                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  560 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  561                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  563                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 410
    ':'  shift, and go to state 411
    '&'  shift, and go to state 412

    $default  reduce using rule 553 (optional_ref)

    optional_ref  go to state 413


State 353

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 575 (global_let)


State 354

   85 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 355

  678 type_declaration_no_options: "type" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 676 ($@41)

    $@41  go to state 414


State 356

  701 type_declaration_no_options: "array" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 699 ($@46)

    $@46  go to state 415


State 357

  704 type_declaration_no_options: "table" '<' . $@48 table_type_pair '>' $@49

    $default  reduce using rule 702 ($@48)

    $@48  go to state 416


State 358

  679 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 483
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 359

  707 type_declaration_no_options: "iterator" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 705 ($@50)

    $@50  go to state 492


State 360

  697 type_declaration_no_options: "smart_ptr" '<' . $@44 type_declaration '>' $@45

    $default  reduce using rule 695 ($@44)

    $@44  go to state 493


State 361

  656 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 494


State 362

  665 bitfield_type_declaration: "bitfield" '<' . $@39 bitfield_bits '>' $@40

    $default  reduce using rule 663 ($@39)

    $@39  go to state 495


State 363

  711 type_declaration_no_options: "block" '<' . $@52 type_declaration '>' $@53
  714                            | "block" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 712 ($@54)
    '>'       reduce using rule 712 ($@54)
    '('       reduce using rule 712 ($@54)
    $default  reduce using rule 709 ($@52)

    $@52  go to state 496
    $@54  go to state 497


State 364

  718 type_declaration_no_options: "function" '<' . $@56 type_declaration '>' $@57
  721                            | "function" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 719 ($@58)
    '>'       reduce using rule 719 ($@58)
    '('       reduce using rule 719 ($@58)
    $default  reduce using rule 716 ($@56)

    $@56  go to state 498
    $@58  go to state 499


State 365

  725 type_declaration_no_options: "lambda" '<' . $@60 type_declaration '>' $@61
  728                            | "lambda" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 726 ($@62)
    '>'       reduce using rule 726 ($@62)
    '('       reduce using rule 726 ($@62)
    $default  reduce using rule 723 ($@60)

    $@60  go to state 500
    $@62  go to state 501


State 366

  731 type_declaration_no_options: "tuple" '<' . $@64 tuple_type_list '>' $@65

    $default  reduce using rule 729 ($@64)

    $@64  go to state 502


State 367

  734 type_declaration_no_options: "variant" '<' . $@66 variant_type_list '>' $@67

    $default  reduce using rule 732 ($@66)

    $@66  go to state 503


State 368

  657 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 504
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 369

  680 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  682                            | '$' name_in_namespace . '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 505
    '('  shift, and go to state 506


State 370

  685 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 685 (type_declaration_no_options)


State 371

  690 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 690 (type_declaration_no_options)


State 372

  684 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 684 (type_declaration_no_options)


State 373

  692 type_declaration_no_options: type_declaration_no_options "==" . "const"
  693                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 507
    '&'      shift, and go to state 508


State 374

  698 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 375

  687 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 687 (type_declaration_no_options)


State 376

  683 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  686                            | type_declaration_no_options '-' . "const"
  688                            | type_declaration_no_options '-' . '&'
  691                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 509
    '&'      shift, and go to state 510
    '['      shift, and go to state 511
    '#'      shift, and go to state 512


State 377

  694 type_declaration_no_options: type_declaration_no_options '*' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 378

  668 dim_list: '[' . expr ']'
  675 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 513
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 514
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 379

  689 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 689 (type_declaration_no_options)


State 380

  669 dim_list: dim_list . '[' expr ']'
  674 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 515

    '['       [reduce using rule 674 (type_declaration_no_options)]
    $default  reduce using rule 674 (type_declaration_no_options)


State 381

  736 type_declaration: type_declaration '|' . type_declaration_no_options
  737                 | type_declaration '|' . '#'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266
    '#'          shift, and go to state 516

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 517


State 382

  661 bitfield_alias_bits: "name" .

    $default  reduce using rule 661 (bitfield_alias_bits)


State 383

  662 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits . optional_comma $@76 "end of code block"

    ','  shift, and go to state 518

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 519


State 384

  534 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  535                      | tuple_alias_type_list . tuple_type "end of expression"
  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list . $@70 "end of code block"

    "type"               shift, and go to state 226
    "array"              shift, and go to state 227
    "table"              shift, and go to state 228
    "typedecl"           shift, and go to state 229
    "iterator"           shift, and go to state 230
    "smart_ptr"          shift, and go to state 231
    "bool"               shift, and go to state 232
    "void"               shift, and go to state 233
    "string"             shift, and go to state 234
    "auto"               shift, and go to state 235
    "int"                shift, and go to state 236
    "int2"               shift, and go to state 237
    "int3"               shift, and go to state 238
    "int4"               shift, and go to state 239
    "uint"               shift, and go to state 240
    "bitfield"           shift, and go to state 241
    "uint2"              shift, and go to state 242
    "uint3"              shift, and go to state 243
    "uint4"              shift, and go to state 244
    "float"              shift, and go to state 245
    "float2"             shift, and go to state 246
    "float3"             shift, and go to state 247
    "float4"             shift, and go to state 248
    "range"              shift, and go to state 249
    "urange"             shift, and go to state 250
    "range64"            shift, and go to state 251
    "urange64"           shift, and go to state 252
    "block"              shift, and go to state 253
    "int64"              shift, and go to state 254
    "uint64"             shift, and go to state 255
    "double"             shift, and go to state 256
    "function"           shift, and go to state 257
    "lambda"             shift, and go to state 258
    "int8"               shift, and go to state 259
    "uint8"              shift, and go to state 260
    "int16"              shift, and go to state 261
    "uint16"             shift, and go to state 262
    "tuple"              shift, and go to state 263
    "variant"            shift, and go to state 264
    "::"                 shift, and go to state 59
    "$t"                 shift, and go to state 265
    "name"               shift, and go to state 520
    "end of expression"  shift, and go to state 521
    '$'                  shift, and go to state 266

    $default  reduce using rule 740 ($@70)

    name_in_namespace            go to state 267
    tuple_type                   go to state 522
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 523
    $@70                         go to state 524


State 385

  540 variant_alias_type_list: variant_alias_type_list . "end of expression"
  541                        | variant_alias_type_list . variant_type "end of expression"
  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list . $@73 "end of code block"

    "name"               shift, and go to state 525
    "end of expression"  shift, and go to state 526

    $default  reduce using rule 744 ($@73)

    variant_type  go to state 527
    $@73          go to state 528


State 386

  178 function_name: "operator" "is" "name" .

    $default  reduce using rule 178 (function_name)


State 387

  179 function_name: "operator" "as" "name" .

    $default  reduce using rule 179 (function_name)


State 388

  172 function_name: "operator" "?." "name" .

    $default  reduce using rule 172 (function_name)


State 389

  167 function_name: "operator" "?[" ']' .

    $default  reduce using rule 167 (function_name)


State 390

  180 function_name: "operator" '?' "as" .
  181              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 529

    $default  reduce using rule 180 (function_name)


State 391

  170 function_name: "operator" '.' "name" .
  171              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 530

    $default  reduce using rule 170 (function_name)


State 392

  166 function_name: "operator" '[' ']' .

    $default  reduce using rule 166 (function_name)


State 393

  526 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 531


State 394

  118 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 395

  525 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 532
    "var"  shift, and go to state 533

    $default  reduce using rule 289 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 534


State 396

  527 function_argument_list: function_argument_declaration .

    $default  reduce using rule 527 (function_argument_list)


State 397

  119 optional_function_argument_list: '(' function_argument_list . ')'
  528 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 535
    ')'                  shift, and go to state 536


State 398

  121 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 537


State 399

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 211 (function_declaration_header)


State 400

  214 expression_block: "begin of code block" expressions . "end of code block"
  215                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 538
    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 539
    "if"                              shift, and go to state 540
    "static_if"                       shift, and go to state 541
    "for"                             shift, and go to state 542
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "return"                          shift, and go to state 543
    "null"                            shift, and go to state 425
    "break"                           shift, and go to state 544
    "try"                             shift, and go to state 545
    "table"                           shift, and go to state 426
    "delete"                          shift, and go to state 546
    "deref"                           shift, and go to state 427
    "with"                            shift, and go to state 547
    "assume"                          shift, and go to state 548
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 430
    "continue"                        shift, and go to state 549
    "pass"                            shift, and go to state 550
    "reinterpret"                     shift, and go to state 431
    "label"                           shift, and go to state 551
    "goto"                            shift, and go to state 552
    "unsafe"                          shift, and go to state 553
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 554
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    "end of code block"               shift, and go to state 559
    "end of expression"               shift, and go to state 560
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder             go to state 467
    expr_reader                go to state 468
    expression_label           go to state 561
    expression_goto            go to state 562
    if_or_static_if            go to state 563
    expression_if_one_liner    go to state 564
    expression_if_then_else    go to state 565
    expression_for_loop        go to state 566
    expression_unsafe          go to state 567
    expression_while_loop      go to state 568
    expression_with            go to state 569
    expression_with_alias      go to state 570
    expr_call_pipe             go to state 571
    expression_any             go to state 572
    expr_keyword               go to state 573
    expression_keyword         go to state 574
    expr_pipe                  go to state 575
    name_in_namespace          go to state 470
    expression_delete          go to state 576
    expr_new                   go to state 471
    expression_break           go to state 577
    expression_continue        go to state 578
    expression_return_no_pipe  go to state 579
    expression_return          go to state 580
    expression_yield_no_pipe   go to state 581
    expression_yield           go to state 582
    expression_try_catch       go to state 583
    kwd_let                    go to state 584
    expression_let             go to state 585
    expr_cast                  go to state 472
    expr_type_decl             go to state 473
    expr_type_info             go to state 474
    block_or_lambda            go to state 475
    expr_full_block            go to state 476
    expr_numeric_const         go to state 477
    expr_assign                go to state 586
    expr_assign_pipe           go to state 587
    expr_named_call            go to state 478
    expr_method_call           go to state 479
    func_addr_expr             go to state 480
    expr_field                 go to state 481
    expr_call                  go to state 482
    expr                       go to state 588
    expr_mtag                  go to state 484
    basic_type_declaration     go to state 485
    make_decl                  go to state 486
    make_struct_decl           go to state 487
    make_tuple_call            go to state 488
    make_dim_decl              go to state 489
    make_table_decl            go to state 490
    array_comprehension        go to state 491


State 401

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 . enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 589

    $default  reduce using rule 578 (enum_list)

    enum_expression  go to state 590
    enum_list        go to state 591


State 402

  600 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 592


State 403

  603 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 603 (structure_name)


State 404

  610 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 518 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 593


State 405

  613 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list .

    $default  reduce using rule 613 (structure_declaration)


State 406

  567 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 350
    "name"  shift, and go to state 351

    let_variable_name_with_pos_list  go to state 352
    let_variable_declaration         go to state 594


State 407

  100 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 100 (metadata_argument_list)


State 408

  556 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 595
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 409

  557 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 596


State 410

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  559                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 597


State 411

  560 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  561                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 598


State 412

  554 optional_ref: '&' .

    $default  reduce using rule 554 (optional_ref)


State 413

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 602


State 414

  678 type_declaration_no_options: "type" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 603


State 415

  701 type_declaration_no_options: "array" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 604


State 416

  704 type_declaration_no_options: "table" '<' $@48 . table_type_pair '>' $@49

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    table_type_pair              go to state 605
    type_declaration_no_options  go to state 272
    type_declaration             go to state 606


State 417

  770 make_struct_decl: "struct" . '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 607


State 418

  773 make_struct_decl: "class" . '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 608


State 419

  413 expr: "true" .

    $default  reduce using rule 413 (expr)


State 420

  414 expr: "false" .

    $default  reduce using rule 414 (expr)


State 421

  268 expr_new: "new" . structure_type_declaration
  269         | "new" . structure_type_declaration '(' optional_expr_list ')'
  270         | "new" . new_type_declaration '(' use_initializer ')'
  271         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  272         | "new" . make_decl

    "struct"               shift, and go to state 417
    "class"                shift, and go to state 418
    "array"                shift, and go to state 424
    "table"                shift, and go to state 426
    "dim"                  shift, and go to state 432
    "default"              shift, and go to state 433
    "tuple"                shift, and go to state 435
    "variant"              shift, and go to state 436
    "::"                   shift, and go to state 59
    "name"                 shift, and go to state 60
    "begin of code block"  shift, and go to state 457
    '<'                    shift, and go to state 609
    '['                    shift, and go to state 463

    name_in_namespace           go to state 267
    new_type_declaration        go to state 610
    structure_type_declaration  go to state 611
    make_decl                   go to state 612
    make_struct_decl            go to state 487
    make_tuple_call             go to state 488
    make_dim_decl               go to state 489
    make_table_decl             go to state 490
    array_comprehension         go to state 491


State 422

  312 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  313               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 613


State 423

  311 expr_type_decl: "type" . '<' $@15 type_declaration '>' $@16

    '<'  shift, and go to state 614


State 424

  789 make_dim_decl: "array" . "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'
  792              | "array" . "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'
  795              | "array" . "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'
  796              | "array" . '(' expr_list optional_comma ')'
  799              | "array" . '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 615
    "tuple"    shift, and go to state 616
    "variant"  shift, and go to state 617
    '<'        shift, and go to state 618
    '('        shift, and go to state 619


State 425

  407 expr: "null" .

    $default  reduce using rule 407 (expr)


State 426

  807 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  808                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  809                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 620
    '('  shift, and go to state 621


State 427

  457 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 622


State 428

  302 expr_cast: "cast" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 623


State 429

  305 expr_cast: "upcast" . '<' $@11 type_declaration_no_options '>' $@12 expr

    '<'  shift, and go to state 624


State 430

  458 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 625


State 431

  308 expr_cast: "reinterpret" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 626


State 432

  800 make_dim_decl: "dim" . '(' expr_list optional_comma ')'
  803              | "dim" . '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 627
    '('  shift, and go to state 628


State 433

  779 make_struct_decl: "default" . '<' $@83 type_declaration_no_options '>' $@84 use_initializer

    '<'  shift, and go to state 629


State 434

  645 basic_type_declaration: "bitfield" .

    $default  reduce using rule 645 (basic_type_declaration)


State 435

  782 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  785                | "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 630
    '('  shift, and go to state 631


State 436

  776 make_struct_decl: "variant" . '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

    '<'  shift, and go to state 632


State 437

  459 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  460     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 633


State 438

  443 expr: "++" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 634
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 439

  444 expr: "--" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 635
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 440

  489 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 636


State 441

  490 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 637


State 442

  491 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 638


State 443

  492 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 639


State 444

  493 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 640


State 445

  495 expr_mtag: "$c" . '(' expr ')' '(' ')'
  496          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 641


State 446

  494 expr_mtag: "..." .

    $default  reduce using rule 494 (expr_mtag)


State 447

  335 expr_numeric_const: "integer constant" .

    $default  reduce using rule 335 (expr_numeric_const)


State 448

  337 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 449

  336 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 450

  338 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 451

  339 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 452

  340 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 453

  341 expr_numeric_const: "double constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 454

  251 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    '<'  shift, and go to state 642


State 455

  254 expression_keyword: "type function" . '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    '<'  shift, and go to state 643


State 456

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 644


State 457

  806 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  816 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "for"                             shift, and go to state 645
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 646
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_map_tuple          go to state 647
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    expr_map_tuple_list     go to state 648
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 458

  420 expr: '-' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 649
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 459

  419 expr: '+' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 650
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 460

  456 expr: '*' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 651
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 461

  418 expr: '~' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 652
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 462

  417 expr: '!' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 653
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 463

  786 make_dim_decl: '[' . expr_list optional_comma ']'
  814 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  815                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "for"                             shift, and go to state 654
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "iterator"                        shift, and go to state 655
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 656
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 464

  447 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 658
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 465

  320 block_or_lambda: '$' .

    $default  reduce using rule 320 (block_or_lambda)


State 466

  321 block_or_lambda: '@' .
  322                | '@' . '@'
  388 func_addr_expr: '@' . '@' func_addr_name
  391               | '@' . '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  394               | '@' . '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  504 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 659

    $default  reduce using rule 321 (block_or_lambda)


State 467

  411 expr: string_builder .

    $default  reduce using rule 411 (expr)


State 468

  410 expr: expr_reader .

    $default  reduce using rule 410 (expr)


State 469

  488 expr: expression_keyword .

    $default  reduce using rule 488 (expr)


State 470

  382 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  383                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  402 expr_call: name_in_namespace . '(' ')'
  403          | name_in_namespace . '(' make_struct_single ')'
  404          | name_in_namespace . '(' expr_list ')'
  408 expr: name_in_namespace .

    '('  shift, and go to state 660

    '('       [reduce using rule 408 (expr)]
    $default  reduce using rule 408 (expr)


State 471

  481 expr: expr_new .

    $default  reduce using rule 481 (expr)


State 472

  480 expr: expr_cast .

    $default  reduce using rule 480 (expr)


State 473

  479 expr: expr_type_decl .

    $default  reduce using rule 479 (expr)


State 474

  478 expr: expr_type_info .

    $default  reduce using rule 478 (expr)


State 475

  333 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 661


State 476

  484 expr: expr_full_block .

    $default  reduce using rule 484 (expr)


State 477

  409 expr: expr_numeric_const .

    $default  reduce using rule 409 (expr)


State 478

  483 expr: expr_named_call .

    $default  reduce using rule 483 (expr)


State 479

  482 expr: expr_method_call .

    $default  reduce using rule 482 (expr)


State 480

  454 expr: func_addr_expr .

    $default  reduce using rule 454 (expr)


State 481

  415 expr: expr_field .

    $default  reduce using rule 415 (expr)


State 482

  455 expr: expr_call .

    $default  reduce using rule 455 (expr)


State 483

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  679 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 697


State 484

  416 expr: expr_mtag .

    $default  reduce using rule 416 (expr)


State 485

  405 expr_call: basic_type_declaration . '(' ')'
  406          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 698


State 486

  412 expr: make_decl .

    $default  reduce using rule 412 (expr)


State 487

  750 make_decl: make_struct_decl .

    $default  reduce using rule 750 (make_decl)


State 488

  754 make_decl: make_tuple_call .

    $default  reduce using rule 754 (make_decl)


State 489

  751 make_decl: make_dim_decl .

    $default  reduce using rule 751 (make_decl)


State 490

  752 make_decl: make_table_decl .

    $default  reduce using rule 752 (make_decl)


State 491

  753 make_decl: array_comprehension .

    $default  reduce using rule 753 (make_decl)


State 492

  707 type_declaration_no_options: "iterator" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 699


State 493

  697 type_declaration_no_options: "smart_ptr" '<' $@44 . type_declaration '>' $@45

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 700


State 494

  656 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 701


State 495

  665 bitfield_type_declaration: "bitfield" '<' $@39 . bitfield_bits '>' $@40

    "name"  shift, and go to state 702

    bitfield_bits  go to state 703


State 496

  711 type_declaration_no_options: "block" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 704


State 497

  714 type_declaration_no_options: "block" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 705


State 498

  718 type_declaration_no_options: "function" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 706


State 499

  721 type_declaration_no_options: "function" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 707


State 500

  725 type_declaration_no_options: "lambda" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 708


State 501

  728 type_declaration_no_options: "lambda" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 709


State 502

  731 type_declaration_no_options: "tuple" '<' $@64 . tuple_type_list '>' $@65

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 520
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    tuple_type                   go to state 710
    tuple_type_list              go to state 711
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 523


State 503

  734 type_declaration_no_options: "variant" '<' $@66 . variant_type_list '>' $@67

    "name"  shift, and go to state 525

    variant_type       go to state 712
    variant_type_list  go to state 713


State 504

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  657 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 714


State 505

  682 type_declaration_no_options: '$' name_in_namespace '<' . $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 681 ($@43)

    $@43  go to state 715


State 506

  680 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 467
    expr_reader             go to state 468
    optional_expr_list      go to state 716
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 717
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 507

  692 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 692 (type_declaration_no_options)


State 508

  693 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 693 (type_declaration_no_options)


State 509

  686 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 686 (type_declaration_no_options)


State 510

  688 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 511

  683 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 718


State 512

  691 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 513

  675 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 675 (type_declaration_no_options)


State 514

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  668 dim_list: '[' expr . ']'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ']'    shift, and go to state 719


State 515

  669 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 720
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 516

  737 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 737 (type_declaration)


State 517

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  736 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    $default  reduce using rule 736 (type_declaration)

    dim_list  go to state 380


State 518

  662 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  813 optional_comma: ',' .

    "name"  shift, and go to state 721

    $default  reduce using rule 813 (optional_comma)


State 519

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma . $@76 "end of code block"

    $default  reduce using rule 748 ($@76)

    $@76  go to state 722


State 520

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"
  530 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 99
    ':'   shift, and go to state 723

    $default  reduce using rule 260 (name_in_namespace)


State 521

  534 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 534 (tuple_alias_type_list)


State 522

  535 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 724


State 523

  529 tuple_type: type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 529 (tuple_type)


State 524

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 . "end of code block"

    "end of code block"  shift, and go to state 725


State 525

  536 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 726


State 526

  540 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 540 (variant_alias_type_list)


State 527

  541 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 727


State 528

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 . "end of code block"

    "end of code block"  shift, and go to state 728


State 529

  181 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 181 (function_name)


State 530

  171 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 171 (function_name)


State 531

  526 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 729
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 532

  287 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 287 (kwd_let_var_or_nothing)


State 533

  288 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 288 (kwd_let_var_or_nothing)


State 534

  525 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 730
    "name"  shift, and go to state 731

    variable_declaration         go to state 732
    variable_name_with_pos_list  go to state 733


State 535

  528 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 393
    '@'   shift, and go to state 218

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list         go to state 219
    optional_field_annotation      go to state 395
    function_argument_declaration  go to state 734


State 536

  119 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 119 (optional_function_argument_list)


State 537

  121 optional_function_type: ':' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 121 (optional_function_type)


State 538

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 539

   75 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 735
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 540

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 541

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 542

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 730
    "name"  shift, and go to state 731

    variable_name_with_pos_list  go to state 736


State 543

  275 expression_return_no_pipe: "return" .
  276                          | "return" . expr_list
  277                          | "return" . "<-" expr_list
  279 expression_return: "return" . expr_pipe
  280                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 737
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 275 (expression_return_no_pipe)

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 738
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 739
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 741
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 544

  273 expression_break: "break" .

    $default  reduce using rule 273 (expression_break)


State 545

  286 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 742


State 546

  263 expression_delete: "delete" . expr
  264                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "explicit"                        shift, and go to state 743
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 744
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 547

   76 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 745
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 548

   77 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 746


State 549

  274 expression_continue: "continue" .

    $default  reduce using rule 274 (expression_continue)


State 550

  238 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 747


State 551

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 748


State 552

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "label"                           shift, and go to state 749
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 750
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 553

   74 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 751


State 554

  281 expression_yield_no_pipe: "yield" . expr
  282                         | "yield" . "<-" expr
  284 expression_yield: "yield" . expr_pipe
  285                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 752
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 753
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 754
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 555

  258 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 758


State 556

  256 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 759


State 557

  257 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 760


State 558

  242 expr_keyword: "keyword" . expr expression_block
  251 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '<'                               shift, and go to state 642
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 761
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 559

  214 expression_block: "begin of code block" expressions "end of code block" .
  215                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 762

    $default  reduce using rule 214 (expression_block)


State 560

  218 expression_any: "end of expression" .

    $default  reduce using rule 218 (expression_any)


State 561

  236 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 763


State 562

  237 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 764


State 563

   71 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 765
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 564

   72 expression_if_then_else: expression_if_one_liner . "if" expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 766


State 565

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 566

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 567

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 568

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 569

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 570

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 571

  259 expr_pipe: expr_call_pipe .

    $default  reduce using rule 259 (expr_pipe)


State 572

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 573

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 574

  217 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  488 expr: expression_keyword .

    '$'  shift, and go to state 465
    '@'  shift, and go to state 755

    '$'       [reduce using rule 488 (expr)]
    '@'       [reduce using rule 488 (expr)]
    $default  reduce using rule 488 (expr)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 768


State 575

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 576

  223 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 769


State 577

   69 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 770

    $default  reduce using rule 69 (expression_if_one_liner)


State 578

   70 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 771

    $default  reduce using rule 70 (expression_if_one_liner)


State 579

   67 expression_if_one_liner: expression_return_no_pipe .
  278 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 772

    $default  reduce using rule 67 (expression_if_one_liner)


State 580

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 581

   68 expression_if_one_liner: expression_yield_no_pipe .
  283 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 773

    $default  reduce using rule 68 (expression_if_one_liner)


State 582

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 583

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 584

  298 expression_let: kwd_let . optional_in_scope let_variable_declaration
  299               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 774

    $default  reduce using rule 293 (optional_in_scope)

    optional_in_scope  go to state 775


State 585

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 586

  222 expression_any: expr_assign . "end of expression"
  255 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 776
    "end of expression"  shift, and go to state 777


State 587

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 588

   66 expression_if_one_liner: expr .
  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  365 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  366                 | expr . "<-" expr_assign_pipe_right
  367                 | expr . "&=" expr_assign_pipe_right
  368                 | expr . "|=" expr_assign_pipe_right
  369                 | expr . "^=" expr_assign_pipe_right
  370                 | expr . "&&=" expr_assign_pipe_right
  371                 | expr . "||=" expr_assign_pipe_right
  372                 | expr . "^^=" expr_assign_pipe_right
  373                 | expr . "+=" expr_assign_pipe_right
  374                 | expr . "-=" expr_assign_pipe_right
  375                 | expr . "*=" expr_assign_pipe_right
  376                 | expr . "/=" expr_assign_pipe_right
  377                 | expr . "%=" expr_assign_pipe_right
  378                 | expr . "<<=" expr_assign_pipe_right
  379                 | expr . ">>=" expr_assign_pipe_right
  380                 | expr . "<<<=" expr_assign_pipe_right
  381                 | expr . ">>>=" expr_assign_pipe_right
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 662
    "as"    shift, and go to state 663
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 664
    ">>"    shift, and go to state 665
    "++"    shift, and go to state 666
    "--"    shift, and go to state 667
    "<="    shift, and go to state 668
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 669
    "=="    shift, and go to state 670
    "!="    shift, and go to state 671
    "->"    shift, and go to state 672
    "<-"    shift, and go to state 788
    "??"    shift, and go to state 673
    "?."    shift, and go to state 674
    "?["    shift, and go to state 675
    "<|"    shift, and go to state 676
    "|>"    shift, and go to state 677
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 678
    ">>>"   shift, and go to state 679
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 680
    "||"    shift, and go to state 681
    "^^"    shift, and go to state 682
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 683
    '='     shift, and go to state 795
    '?'     shift, and go to state 684
    '|'     shift, and go to state 685
    '^'     shift, and go to state 686
    '&'     shift, and go to state 687
    '<'     shift, and go to state 688
    '>'     shift, and go to state 689
    '-'     shift, and go to state 690
    '+'     shift, and go to state 691
    '*'     shift, and go to state 692
    '/'     shift, and go to state 693
    '%'     shift, and go to state 694
    '.'     shift, and go to state 695
    '['     shift, and go to state 696
    '$'     shift, and go to state 465
    '@'     shift, and go to state 755

    "if"      reduce using rule 66 (expression_if_one_liner)
    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 589

  576 enum_expression: "name" .
  577                | "name" . '=' expr

    '='  shift, and go to state 797

    $default  reduce using rule 576 (enum_expression)


State 590

  579 enum_list: enum_expression .

    $default  reduce using rule 579 (enum_list)


State 591

  580 enum_list: enum_list . ',' enum_expression
  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list . optional_comma $@36 "end of code block"

    ','  shift, and go to state 798

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 799


State 592

  600 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 600 (optional_structure_parent)


State 593

  520 struct_variable_declaration_list: struct_variable_declaration_list . $@29 structure_variable_declaration "end of expression"
  522                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  610 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 800
    '['                  shift, and go to state 15

    "def"     reduce using rule 115 (optional_annotation_list)
    $default  reduce using rule 519 ($@29)

    optional_annotation_list  go to state 801
    $@29                      go to state 802


State 594

  567 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 567 (global_variable_declaration_list)


State 595

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  556 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 803


State 596

  557 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 557 (let_variable_name_with_pos_list)


State 597

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  559                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 804

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 598

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 370
    "implicit"           shift, and go to state 371
    "explicit"           shift, and go to state 372
    "=="                 shift, and go to state 373
    "<-"                 shift, and go to state 599
    "??"                 shift, and go to state 374
    ":="                 shift, and go to state 600
    "end of expression"  shift, and go to state 805
    '='                  shift, and go to state 601
    '&'                  shift, and go to state 375
    '-'                  shift, and go to state 376
    '*'                  shift, and go to state 377
    '['                  shift, and go to state 378
    '#'                  shift, and go to state 379

    copy_or_move_or_clone  go to state 806
    dim_list               go to state 380


State 599

  551 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 551 (copy_or_move_or_clone)


State 600

  552 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 552 (copy_or_move_or_clone)


State 601

  550 copy_or_move_or_clone: '=' .

    $default  reduce using rule 550 (copy_or_move_or_clone)


State 602

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  564                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 807
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 808
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 603

  678 type_declaration_no_options: "type" '<' $@41 type_declaration . '>' $@42
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 809


State 604

  701 type_declaration_no_options: "array" '<' $@46 type_declaration . '>' $@47
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 810


State 605

  704 type_declaration_no_options: "table" '<' $@48 table_type_pair . '>' $@49

    '>'  shift, and go to state 811


State 606

  666 table_type_pair: type_declaration .
  667                | type_declaration . "end of expression" type_declaration
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 812
    '|'                  shift, and go to state 381

    $default  reduce using rule 666 (table_type_pair)


State 607

  770 make_struct_decl: "struct" '<' . $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 768 ($@77)

    $@77  go to state 813


State 608

  773 make_struct_decl: "class" '<' . $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 771 ($@79)

    $@79  go to state 814


State 609

  267 new_type_declaration: '<' . $@7 type_declaration '>' $@8

    $default  reduce using rule 265 ($@7)

    $@7  go to state 815


State 610

  270 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  271         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 816


State 611

  268 expr_new: "new" structure_type_declaration .
  269         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 817

    '('       [reduce using rule 268 (expr_new)]
    $default  reduce using rule 268 (expr_new)


State 612

  272 expr_new: "new" make_decl .

    $default  reduce using rule 272 (expr_new)


State 613

  312 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  313               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 818


State 614

  311 expr_type_decl: "type" '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 309 ($@15)

    $@15  go to state 819


State 615

  789 make_dim_decl: "array" "struct" . '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 820


State 616

  792 make_dim_decl: "array" "tuple" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 821


State 617

  795 make_dim_decl: "array" "variant" . '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    '<'  shift, and go to state 822


State 618

  799 make_dim_decl: "array" '<' . $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'

    $default  reduce using rule 797 ($@93)

    $@93  go to state 823


State 619

  796 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 824
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 620

  808 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  809                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 825


State 621

  807 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 646
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_map_tuple          go to state 647
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    expr_map_tuple_list     go to state 826
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 622

  457 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 827
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 623

  302 expr_cast: "cast" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 300 ($@9)

    $@9  go to state 828


State 624

  305 expr_cast: "upcast" '<' . $@11 type_declaration_no_options '>' $@12 expr

    $default  reduce using rule 303 ($@11)

    $@11  go to state 829


State 625

  458 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 830
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 626

  308 expr_cast: "reinterpret" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 306 ($@13)

    $@13  go to state 831


State 627

  803 make_dim_decl: "dim" '<' . $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    $default  reduce using rule 801 ($@95)

    $@95  go to state 832


State 628

  800 make_dim_decl: "dim" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 833
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 629

  779 make_struct_decl: "default" '<' . $@83 type_declaration_no_options '>' $@84 use_initializer

    $default  reduce using rule 777 ($@83)

    $@83  go to state 834


State 630

  785 make_tuple_call: "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 783 ($@85)

    $@85  go to state 835


State 631

  782 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 836
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 632

  776 make_struct_decl: "variant" '<' . $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

    $default  reduce using rule 774 ($@81)

    $@81  go to state 837


State 633

  459 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  460     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 838


State 634

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  443     | "++" expr .
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 443 (expr)


State 635

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  444     | "--" expr .
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 444 (expr)


State 636

  489 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 839
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 637

  490 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 840
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 638

  491 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 841
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 639

  492 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 842
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 640

  493 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 843
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 641

  495 expr_mtag: "$c" '(' . expr ')' '(' ')'
  496          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 844
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 642

  251 expression_keyword: "keyword" '<' . $@3 type_declaration_no_options_list '>' $@4 expr

    $default  reduce using rule 249 ($@3)

    $@3  go to state 845


State 643

  254 expression_keyword: "type function" '<' . $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    $default  reduce using rule 252 ($@5)

    $@5  go to state 846


State 644

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 847
    "{"                   shift, and go to state 848

    character_sequence  go to state 849


State 645

  816 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 730
    "name"  shift, and go to state 731

    variable_name_with_pos_list  go to state 850


State 646

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  780 make_map_tuple: expr . "=>" expr
  781               | expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "=>"   shift, and go to state 851
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 781 (make_map_tuple)


State 647

  804 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 804 (expr_map_tuple_list)


State 648

  805 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  806 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 852

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 853


State 649

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  420 expr: '-' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 420 (expr)


State 650

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  419 expr: '+' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 419 (expr)


State 651

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  456     | '*' expr .
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 456 (expr)


State 652

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  418 expr: '~' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 418 (expr)


State 653

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  417 expr: '!' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 417 (expr)


State 654

  814 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 730
    "name"  shift, and go to state 731

    variable_name_with_pos_list  go to state 854


State 655

  815 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 855


State 656

  316 expr_list: expr_list . ',' expr
  786 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 857


State 657

  315 expr_list: expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 315 (expr_list)


State 658

  316 expr_list: expr_list . ',' expr
  447 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 858


State 659

  322 block_or_lambda: '@' '@' .
  388 func_addr_expr: '@' '@' . func_addr_name
  391               | '@' '@' . '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  394               | '@' '@' . '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  504 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 859
    "$c"    shift, and go to state 860
    "name"  shift, and go to state 60
    '<'     shift, and go to state 861

    $default  reduce using rule 322 (block_or_lambda)

    name_in_namespace  go to state 862
    func_addr_name     go to state 863


State 660

  382 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  383                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  402 expr_call: name_in_namespace '(' . ')'
  403          | name_in_namespace '(' . make_struct_single ')'
  404          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 864
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 865
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 866
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 867
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 868
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_fields      go to state 869
    make_struct_single      go to state 870
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 661

  333 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 871

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 872


State 662

  465 expr: expr "is" . "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr "is" . basic_type_declaration
  467     | expr "is" . "name"
  503 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 873
    "bool"      shift, and go to state 232
    "void"      shift, and go to state 233
    "string"    shift, and go to state 234
    "int"       shift, and go to state 236
    "int2"      shift, and go to state 237
    "int3"      shift, and go to state 238
    "int4"      shift, and go to state 239
    "uint"      shift, and go to state 240
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 242
    "uint3"     shift, and go to state 243
    "uint4"     shift, and go to state 244
    "float"     shift, and go to state 245
    "float2"    shift, and go to state 246
    "float3"    shift, and go to state 247
    "float4"    shift, and go to state 248
    "range"     shift, and go to state 249
    "urange"    shift, and go to state 250
    "range64"   shift, and go to state 251
    "urange64"  shift, and go to state 252
    "int64"     shift, and go to state 254
    "uint64"    shift, and go to state 255
    "double"    shift, and go to state 256
    "int8"      shift, and go to state 259
    "uint8"     shift, and go to state 260
    "int16"     shift, and go to state 261
    "uint16"    shift, and go to state 262
    "$f"        shift, and go to state 874
    "name"      shift, and go to state 875

    basic_type_declaration  go to state 876


State 663

  468 expr: expr "as" . "name"
  471     | expr "as" . "type" '<' $@25 type_declaration '>' $@26
  472     | expr "as" . basic_type_declaration
  501 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 877
    "bool"      shift, and go to state 232
    "void"      shift, and go to state 233
    "string"    shift, and go to state 234
    "int"       shift, and go to state 236
    "int2"      shift, and go to state 237
    "int3"      shift, and go to state 238
    "int4"      shift, and go to state 239
    "uint"      shift, and go to state 240
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 242
    "uint3"     shift, and go to state 243
    "uint4"     shift, and go to state 244
    "float"     shift, and go to state 245
    "float2"    shift, and go to state 246
    "float3"    shift, and go to state 247
    "float4"    shift, and go to state 248
    "range"     shift, and go to state 249
    "urange"    shift, and go to state 250
    "range64"   shift, and go to state 251
    "urange64"  shift, and go to state 252
    "int64"     shift, and go to state 254
    "uint64"    shift, and go to state 255
    "double"    shift, and go to state 256
    "int8"      shift, and go to state 259
    "uint8"     shift, and go to state 260
    "int16"     shift, and go to state 261
    "uint16"    shift, and go to state 262
    "$f"        shift, and go to state 878
    "name"      shift, and go to state 879

    basic_type_declaration  go to state 880


State 664

  421 expr: expr "<<" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 881
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 665

  422 expr: expr ">>" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 882
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 666

  445 expr: expr "++" .

    $default  reduce using rule 445 (expr)


State 667

  446 expr: expr "--" .

    $default  reduce using rule 446 (expr)


State 668

  434 expr: expr "<=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 883
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 669

  435 expr: expr ">=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 884
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 670

  432 expr: expr "==" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 885
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 671

  433 expr: expr "!=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 886
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 672

  384 expr_method_call: expr "->" . "name" '(' ')'
  385                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 887


State 673

  461 expr: expr "??" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 888
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 674

  452 expr: expr "?." . "name"
  498 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 889
    "name"  shift, and go to state 890


State 675

  450 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 891
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 676

  485 expr: expr "<|" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 892
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 677

  486 expr: expr "|>" . expr
  487     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 893
    expr_mtag               go to state 484
    basic_type_declaration  go to state 894
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 678

  423 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 895
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 679

  424 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 896
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 680

  439 expr: expr "&&" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 897
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 681

  440 expr: expr "||" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 898
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 682

  441 expr: expr "^^" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 899
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 683

  442 expr: expr ".." . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 900
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 684

  462 expr: expr '?' . expr ':' expr
  473     | expr '?' . "as" "name"
  476     | expr '?' . "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr '?' . "as" basic_type_declaration
  502 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "as"                              shift, and go to state 901
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 902
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 685

  437 expr: expr '|' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 903
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 686

  438 expr: expr '^' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 904
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 687

  436 expr: expr '&' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 905
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 688

  430 expr: expr '<' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 906
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 689

  431 expr: expr '>' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 907
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 690

  426 expr: expr '-' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 908
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 691

  425 expr: expr '+' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 909
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 692

  427 expr: expr '*' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 910
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 693

  428 expr: expr '/' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 911
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 694

  429 expr: expr '%' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 912
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 695

  395 expr_field: expr '.' . "name"
  396           | expr '.' . '.' "name"
  397           | expr '.' . "name" '(' ')'
  398           | expr '.' . "name" '(' expr_list ')'
  401           | expr '.' . $@21 error $@22
  449 expr: expr '.' . '[' expr ']'
  451     | expr '.' . "?[" expr ']'
  453     | expr '.' . "?." "name"
  497 expr_mtag: expr '.' . "$f" '(' expr ')'
  499          | expr '.' . '.' "$f" '(' expr ')'
  500          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 913
    "?["    shift, and go to state 914
    "$f"    shift, and go to state 915
    "name"  shift, and go to state 916
    '.'     shift, and go to state 917
    '['     shift, and go to state 918

    $default  reduce using rule 399 ($@21)

    $@21  go to state 919


State 696

  448 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 920
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 697

  679 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 679 (type_declaration_no_options)


State 698

  405 expr_call: basic_type_declaration '(' . ')'
  406          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 921
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 922
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 699

  707 type_declaration_no_options: "iterator" '<' $@50 type_declaration . '>' $@51
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 923


State 700

  697 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration . '>' $@45
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 924


State 701

  656 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 656 (auto_type_declaration)


State 702

  658 bitfield_bits: "name" .

    $default  reduce using rule 658 (bitfield_bits)


State 703

  659 bitfield_bits: bitfield_bits . "end of expression" "name"
  665 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits . '>' $@40

    "end of expression"  shift, and go to state 925
    '>'                  shift, and go to state 926


State 704

  711 type_declaration_no_options: "block" '<' $@52 type_declaration . '>' $@53
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 927


State 705

  714 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 928


State 706

  718 type_declaration_no_options: "function" '<' $@56 type_declaration . '>' $@57
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 929


State 707

  721 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 930


State 708

  725 type_declaration_no_options: "lambda" '<' $@60 type_declaration . '>' $@61
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 931


State 709

  728 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 932


State 710

  531 tuple_type_list: tuple_type .

    $default  reduce using rule 531 (tuple_type_list)


State 711

  532 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  731 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list . '>' $@65

    "end of expression"  shift, and go to state 933
    '>'                  shift, and go to state 934


State 712

  537 variant_type_list: variant_type .

    $default  reduce using rule 537 (variant_type_list)


State 713

  538 variant_type_list: variant_type_list . "end of expression" variant_type
  734 type_declaration_no_options: "variant" '<' $@66 variant_type_list . '>' $@67

    "end of expression"  shift, and go to state 935
    '>'                  shift, and go to state 936


State 714

  657 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 657 (auto_type_declaration)


State 715

  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    type_declaration_no_options_list  go to state 937
    name_in_namespace                 go to state 267
    basic_type_declaration            go to state 268
    structure_type_declaration        go to state 269
    auto_type_declaration             go to state 270
    bitfield_type_declaration         go to state 271
    type_declaration_no_options       go to state 272
    type_declaration                  go to state 938


State 716

  680 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 939


State 717

  244 optional_expr_list: expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 940

    $default  reduce using rule 244 (optional_expr_list)


State 718

  683 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 683 (type_declaration_no_options)


State 719

  668 dim_list: '[' expr ']' .

    $default  reduce using rule 668 (dim_list)


State 720

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  669 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ']'    shift, and go to state 941


State 721

  662 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 662 (bitfield_alias_bits)


State 722

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 . "end of code block"

    "end of code block"  shift, and go to state 942


State 723

  530 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 943


State 724

  535 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 535 (tuple_alias_type_list)


State 725

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block" .

    $default  reduce using rule 741 (tuple_alias_declaration)


State 726

  536 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 944


State 727

  541 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 541 (variant_alias_type_list)


State 728

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block" .

    $default  reduce using rule 745 (variant_alias_declaration)


State 729

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  526 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 945


State 730

  615 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 946


State 731

  614 variable_name_with_pos_list: "name" .
  616                            | "name" . "aka" "name"

    "aka"  shift, and go to state 947

    $default  reduce using rule 614 (variable_name_with_pos_list)


State 732

  525 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 525 (function_argument_declaration)


State 733

  544 variable_declaration: variable_name_with_pos_list .
  545                     | variable_name_with_pos_list . '&'
  546                     | variable_name_with_pos_list . ':' type_declaration
  547                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  548                     | variable_name_with_pos_list . copy_or_move expr
  549                     | variable_name_with_pos_list . copy_or_move expr_pipe
  617 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  618                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 948
    ','   shift, and go to state 949
    '='   shift, and go to state 950
    ':'   shift, and go to state 951
    '&'   shift, and go to state 952

    $default  reduce using rule 544 (variable_declaration)

    copy_or_move  go to state 953


State 734

  528 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 528 (function_argument_list)


State 735

   75 expression_while_loop: "while" expr . expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 662
    "as"                   shift, and go to state 663
    "<<"                   shift, and go to state 664
    ">>"                   shift, and go to state 665
    "++"                   shift, and go to state 666
    "--"                   shift, and go to state 667
    "<="                   shift, and go to state 668
    ">="                   shift, and go to state 669
    "=="                   shift, and go to state 670
    "!="                   shift, and go to state 671
    "->"                   shift, and go to state 672
    "??"                   shift, and go to state 673
    "?."                   shift, and go to state 674
    "?["                   shift, and go to state 675
    "<|"                   shift, and go to state 676
    "|>"                   shift, and go to state 677
    "<<<"                  shift, and go to state 678
    ">>>"                  shift, and go to state 679
    "&&"                   shift, and go to state 680
    "||"                   shift, and go to state 681
    "^^"                   shift, and go to state 682
    ".."                   shift, and go to state 683
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 684
    '|'                    shift, and go to state 685
    '^'                    shift, and go to state 686
    '&'                    shift, and go to state 687
    '<'                    shift, and go to state 688
    '>'                    shift, and go to state 689
    '-'                    shift, and go to state 690
    '+'                    shift, and go to state 691
    '*'                    shift, and go to state 692
    '/'                    shift, and go to state 693
    '%'                    shift, and go to state 694
    '.'                    shift, and go to state 695
    '['                    shift, and go to state 696

    expression_block  go to state 954


State 736

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list expression_block
  617 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  618                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 955
    ','   shift, and go to state 949


State 737

  277 expression_return_no_pipe: "return" "<-" . expr_list
  280 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 956
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 957
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 741
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 738

  279 expression_return: "return" expr_pipe .

    $default  reduce using rule 279 (expression_return)


State 739

  276 expression_return_no_pipe: "return" expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 940

    $default  reduce using rule 276 (expression_return_no_pipe)


State 740

  255 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 776


State 741

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  315 expr_list: expr .
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 662
    "as"    shift, and go to state 663
    "+="    shift, and go to state 958
    "-="    shift, and go to state 959
    "/="    shift, and go to state 960
    "*="    shift, and go to state 961
    "%="    shift, and go to state 962
    "&="    shift, and go to state 963
    "|="    shift, and go to state 964
    "^="    shift, and go to state 965
    "<<"    shift, and go to state 664
    ">>"    shift, and go to state 665
    "++"    shift, and go to state 666
    "--"    shift, and go to state 667
    "<="    shift, and go to state 668
    "<<="   shift, and go to state 966
    ">>="   shift, and go to state 967
    ">="    shift, and go to state 669
    "=="    shift, and go to state 670
    "!="    shift, and go to state 671
    "->"    shift, and go to state 672
    "<-"    shift, and go to state 968
    "??"    shift, and go to state 673
    "?."    shift, and go to state 674
    "?["    shift, and go to state 675
    "<|"    shift, and go to state 676
    "|>"    shift, and go to state 677
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 678
    ">>>"   shift, and go to state 679
    "<<<="  shift, and go to state 969
    ">>>="  shift, and go to state 970
    "&&"    shift, and go to state 680
    "||"    shift, and go to state 681
    "^^"    shift, and go to state 682
    "&&="   shift, and go to state 971
    "||="   shift, and go to state 972
    "^^="   shift, and go to state 973
    ".."    shift, and go to state 683
    '='     shift, and go to state 974
    '?'     shift, and go to state 684
    '|'     shift, and go to state 685
    '^'     shift, and go to state 686
    '&'     shift, and go to state 687
    '<'     shift, and go to state 688
    '>'     shift, and go to state 689
    '-'     shift, and go to state 690
    '+'     shift, and go to state 691
    '*'     shift, and go to state 692
    '/'     shift, and go to state 693
    '%'     shift, and go to state 694
    '.'     shift, and go to state 695
    '['     shift, and go to state 696
    '$'     shift, and go to state 465
    '@'     shift, and go to state 755

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 315 (expr_list)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 742

  286 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 975


State 743

  264 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 976
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 744

  263 expression_delete: "delete" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 263 (expression_delete)


State 745

   76 expression_with: "with" expr . expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 662
    "as"                   shift, and go to state 663
    "<<"                   shift, and go to state 664
    ">>"                   shift, and go to state 665
    "++"                   shift, and go to state 666
    "--"                   shift, and go to state 667
    "<="                   shift, and go to state 668
    ">="                   shift, and go to state 669
    "=="                   shift, and go to state 670
    "!="                   shift, and go to state 671
    "->"                   shift, and go to state 672
    "??"                   shift, and go to state 673
    "?."                   shift, and go to state 674
    "?["                   shift, and go to state 675
    "<|"                   shift, and go to state 676
    "|>"                   shift, and go to state 677
    "<<<"                  shift, and go to state 678
    ">>>"                  shift, and go to state 679
    "&&"                   shift, and go to state 680
    "||"                   shift, and go to state 681
    "^^"                   shift, and go to state 682
    ".."                   shift, and go to state 683
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 684
    '|'                    shift, and go to state 685
    '^'                    shift, and go to state 686
    '&'                    shift, and go to state 687
    '<'                    shift, and go to state 688
    '>'                    shift, and go to state 689
    '-'                    shift, and go to state 690
    '+'                    shift, and go to state 691
    '*'                    shift, and go to state 692
    '/'                    shift, and go to state 693
    '%'                    shift, and go to state 694
    '.'                    shift, and go to state 695
    '['                    shift, and go to state 696

    expression_block  go to state 977


State 746

   77 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 978


State 747

  238 expression_any: "pass" "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 748

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 979


State 749

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 980


State 750

   56 expression_goto: "goto" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 56 (expression_goto)


State 751

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 752

  282 expression_yield_no_pipe: "yield" "<-" . expr
  285 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 981
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 982
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 753

  284 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 284 (expression_yield)


State 754

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  281 expression_yield_no_pipe: "yield" expr .
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 662
    "as"    shift, and go to state 663
    "+="    shift, and go to state 958
    "-="    shift, and go to state 959
    "/="    shift, and go to state 960
    "*="    shift, and go to state 961
    "%="    shift, and go to state 962
    "&="    shift, and go to state 963
    "|="    shift, and go to state 964
    "^="    shift, and go to state 965
    "<<"    shift, and go to state 664
    ">>"    shift, and go to state 665
    "++"    shift, and go to state 666
    "--"    shift, and go to state 667
    "<="    shift, and go to state 668
    "<<="   shift, and go to state 966
    ">>="   shift, and go to state 967
    ">="    shift, and go to state 669
    "=="    shift, and go to state 670
    "!="    shift, and go to state 671
    "->"    shift, and go to state 672
    "<-"    shift, and go to state 968
    "??"    shift, and go to state 673
    "?."    shift, and go to state 674
    "?["    shift, and go to state 675
    "<|"    shift, and go to state 676
    "|>"    shift, and go to state 677
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 678
    ">>>"   shift, and go to state 679
    "<<<="  shift, and go to state 969
    ">>>="  shift, and go to state 970
    "&&"    shift, and go to state 680
    "||"    shift, and go to state 681
    "^^"    shift, and go to state 682
    "&&="   shift, and go to state 971
    "||="   shift, and go to state 972
    "^^="   shift, and go to state 973
    ".."    shift, and go to state 683
    '='     shift, and go to state 974
    '?'     shift, and go to state 684
    '|'     shift, and go to state 685
    '^'     shift, and go to state 686
    '&'     shift, and go to state 687
    '<'     shift, and go to state 688
    '>'     shift, and go to state 689
    '-'     shift, and go to state 690
    '+'     shift, and go to state 691
    '*'     shift, and go to state 692
    '/'     shift, and go to state 693
    '%'     shift, and go to state 694
    '.'     shift, and go to state 695
    '['     shift, and go to state 696
    '$'     shift, and go to state 465
    '@'     shift, and go to state 755

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 281 (expression_yield_no_pipe)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 755

  321 block_or_lambda: '@' .
  322                | '@' . '@'

    '@'  shift, and go to state 983

    $default  reduce using rule 321 (block_or_lambda)


State 756

  331 expr_block: expression_block .

    $default  reduce using rule 331 (expr_block)


State 757

  332 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 984


State 758

  258 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 759

  256 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 256 (expr_pipe)


State 760

  257 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 761

  242 expr_keyword: "keyword" expr . expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 662
    "as"                   shift, and go to state 663
    "<<"                   shift, and go to state 664
    ">>"                   shift, and go to state 665
    "++"                   shift, and go to state 666
    "--"                   shift, and go to state 667
    "<="                   shift, and go to state 668
    ">="                   shift, and go to state 669
    "=="                   shift, and go to state 670
    "!="                   shift, and go to state 671
    "->"                   shift, and go to state 672
    "??"                   shift, and go to state 673
    "?."                   shift, and go to state 674
    "?["                   shift, and go to state 675
    "<|"                   shift, and go to state 676
    "|>"                   shift, and go to state 677
    "<<<"                  shift, and go to state 678
    ">>>"                  shift, and go to state 679
    "&&"                   shift, and go to state 680
    "||"                   shift, and go to state 681
    "^^"                   shift, and go to state 682
    ".."                   shift, and go to state 683
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 684
    '|'                    shift, and go to state 685
    '^'                    shift, and go to state 686
    '&'                    shift, and go to state 687
    '<'                    shift, and go to state 688
    '>'                    shift, and go to state 689
    '-'                    shift, and go to state 690
    '+'                    shift, and go to state 691
    '*'                    shift, and go to state 692
    '/'                    shift, and go to state 693
    '%'                    shift, and go to state 694
    '.'                    shift, and go to state 695
    '['                    shift, and go to state 696

    expression_block  go to state 985


State 762

  215 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 986


State 763

  236 expression_any: expression_label "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 764

  237 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 765

   71 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 662
    "as"                   shift, and go to state 663
    "<<"                   shift, and go to state 664
    ">>"                   shift, and go to state 665
    "++"                   shift, and go to state 666
    "--"                   shift, and go to state 667
    "<="                   shift, and go to state 668
    ">="                   shift, and go to state 669
    "=="                   shift, and go to state 670
    "!="                   shift, and go to state 671
    "->"                   shift, and go to state 672
    "??"                   shift, and go to state 673
    "?."                   shift, and go to state 674
    "?["                   shift, and go to state 675
    "<|"                   shift, and go to state 676
    "|>"                   shift, and go to state 677
    "<<<"                  shift, and go to state 678
    ">>>"                  shift, and go to state 679
    "&&"                   shift, and go to state 680
    "||"                   shift, and go to state 681
    "^^"                   shift, and go to state 682
    ".."                   shift, and go to state 683
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 684
    '|'                    shift, and go to state 685
    '^'                    shift, and go to state 686
    '&'                    shift, and go to state 687
    '<'                    shift, and go to state 688
    '>'                    shift, and go to state 689
    '-'                    shift, and go to state 690
    '+'                    shift, and go to state 691
    '*'                    shift, and go to state 692
    '/'                    shift, and go to state 693
    '%'                    shift, and go to state 694
    '.'                    shift, and go to state 695
    '['                    shift, and go to state 696

    expression_block  go to state 987


State 766

   72 expression_if_then_else: expression_if_one_liner "if" . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 988
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 767

  334 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 989


State 768

  217 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 217 (expr_call_pipe)


State 769

  223 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 770

  230 expression_any: expression_break "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 771

  231 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 772

  278 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 278 (expression_return)


State 773

  283 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 283 (expression_yield)


State 774

  292 optional_in_scope: "inscope" .

    $default  reduce using rule 292 (optional_in_scope)


State 775

  298 expression_let: kwd_let optional_in_scope . let_variable_declaration
  299               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 350
    "name"  shift, and go to state 351
    '('     shift, and go to state 990

    tuple_expansion_variable_declaration  go to state 991
    let_variable_name_with_pos_list       go to state 352
    let_variable_declaration              go to state 992


State 776

  255 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 993


State 777

  222 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 778

  352 expr_assign: expr "+=" . expr
  373 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 998
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 999
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 779

  353 expr_assign: expr "-=" . expr
  374 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1001
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 780

  355 expr_assign: expr "/=" . expr
  376 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1003
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 781

  354 expr_assign: expr "*=" . expr
  375 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1004
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1005
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 782

  356 expr_assign: expr "%=" . expr
  377 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1006
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1007
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 783

  346 expr_assign: expr "&=" . expr
  367 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1008
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1009
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 784

  347 expr_assign: expr "|=" . expr
  368 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1011
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 785

  348 expr_assign: expr "^=" . expr
  369 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1013
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 786

  357 expr_assign: expr "<<=" . expr
  378 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1015
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 787

  358 expr_assign: expr ">>=" . expr
  379 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1017
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 788

  344 expr_assign: expr "<-" . expr
  366 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1018
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1019
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 789

  345 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1020
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 790

  359 expr_assign: expr "<<<=" . expr
  380 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1022
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 791

  360 expr_assign: expr ">>>=" . expr
  381 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1023
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1024
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 792

  349 expr_assign: expr "&&=" . expr
  370 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1025
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1026
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 793

  350 expr_assign: expr "||=" . expr
  371 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1028
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 794

  351 expr_assign: expr "^^=" . expr
  372 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1029
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1030
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 795

  343 expr_assign: expr '=' . expr
  365 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 994
    "@ <|"                            shift, and go to state 995
    "@@ <|"                           shift, and go to state 996
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 997
    expression_keyword      go to state 574
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign_pipe_right  go to state 1031
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1032
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 796

  216 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 216 (expr_call_pipe)


State 797

  577 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1033
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 798

  580 enum_list: enum_list ',' . enum_expression
  813 optional_comma: ',' .

    "name"  shift, and go to state 589

    $default  reduce using rule 813 (optional_comma)

    enum_expression  go to state 1034


State 799

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma . $@36 "end of code block"

    $default  reduce using rule 597 ($@36)

    $@36  go to state 1035


State 800

  610 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 610 (optional_struct_variable_declaration_list)


State 801

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "def"  shift, and go to state 1036


State 802

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 218

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list          go to state 219
    optional_field_annotation       go to state 1037
    structure_variable_declaration  go to state 1038


State 803

  556 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 556 (let_variable_name_with_pos_list)


State 804

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1039


State 805

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 560 (let_variable_declaration)


State 806

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 1040
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1041
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 807

  564 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 564 (let_variable_declaration)


State 808

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 662
    "as"                 shift, and go to state 663
    "+="                 shift, and go to state 958
    "-="                 shift, and go to state 959
    "/="                 shift, and go to state 960
    "*="                 shift, and go to state 961
    "%="                 shift, and go to state 962
    "&="                 shift, and go to state 963
    "|="                 shift, and go to state 964
    "^="                 shift, and go to state 965
    "<<"                 shift, and go to state 664
    ">>"                 shift, and go to state 665
    "++"                 shift, and go to state 666
    "--"                 shift, and go to state 667
    "<="                 shift, and go to state 668
    "<<="                shift, and go to state 966
    ">>="                shift, and go to state 967
    ">="                 shift, and go to state 669
    "=="                 shift, and go to state 670
    "!="                 shift, and go to state 671
    "->"                 shift, and go to state 672
    "<-"                 shift, and go to state 968
    "??"                 shift, and go to state 673
    "?."                 shift, and go to state 674
    "?["                 shift, and go to state 675
    "<|"                 shift, and go to state 676
    "|>"                 shift, and go to state 677
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 678
    ">>>"                shift, and go to state 679
    "<<<="               shift, and go to state 969
    ">>>="               shift, and go to state 970
    "&&"                 shift, and go to state 680
    "||"                 shift, and go to state 681
    "^^"                 shift, and go to state 682
    "&&="                shift, and go to state 971
    "||="                shift, and go to state 972
    "^^="                shift, and go to state 973
    ".."                 shift, and go to state 683
    "end of expression"  shift, and go to state 1042
    '='                  shift, and go to state 974
    '?'                  shift, and go to state 684
    '|'                  shift, and go to state 685
    '^'                  shift, and go to state 686
    '&'                  shift, and go to state 687
    '<'                  shift, and go to state 688
    '>'                  shift, and go to state 689
    '-'                  shift, and go to state 690
    '+'                  shift, and go to state 691
    '*'                  shift, and go to state 692
    '/'                  shift, and go to state 693
    '%'                  shift, and go to state 694
    '.'                  shift, and go to state 695
    '['                  shift, and go to state 696
    '$'                  shift, and go to state 465
    '@'                  shift, and go to state 755

    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 809

  678 type_declaration_no_options: "type" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 677 ($@42)

    $@42  go to state 1043


State 810

  701 type_declaration_no_options: "array" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 700 ($@47)

    $@47  go to state 1044


State 811

  704 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' . $@49

    $default  reduce using rule 703 ($@49)

    $@49  go to state 1045


State 812

  667 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1046


State 813

  770 make_struct_decl: "struct" '<' $@77 . type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1047


State 814

  773 make_struct_decl: "class" '<' $@79 . type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1048


State 815

  267 new_type_declaration: '<' $@7 . type_declaration '>' $@8

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1049


State 816

  270 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  271         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1051


State 817

  269 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 467
    expr_reader             go to state 468
    optional_expr_list      go to state 1052
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 717
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 818

  312 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  313               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '<'                               shift, and go to state 1053
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1054
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 819

  311 expr_type_decl: "type" '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1055


State 820

  789 make_dim_decl: "array" "struct" '<' . $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 787 ($@87)

    $@87  go to state 1056


State 821

  792 make_dim_decl: "array" "tuple" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 790 ($@89)

    $@89  go to state 1057


State 822

  795 make_dim_decl: "array" "variant" '<' . $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    $default  reduce using rule 793 ($@91)

    $@91  go to state 1058


State 823

  799 make_dim_decl: "array" '<' $@93 . type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1059


State 824

  316 expr_list: expr_list . ',' expr
  796 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1060


State 825

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  808 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  809                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 370
    "implicit"           shift, and go to state 371
    "explicit"           shift, and go to state 372
    "=="                 shift, and go to state 373
    "??"                 shift, and go to state 374
    "end of expression"  shift, and go to state 1061
    '&'                  shift, and go to state 375
    '>'                  shift, and go to state 1062
    '-'                  shift, and go to state 376
    '*'                  shift, and go to state 377
    '['                  shift, and go to state 378
    '#'                  shift, and go to state 379

    dim_list  go to state 380


State 826

  805 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  807 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 852

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1063


State 827

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  457     | "deref" '(' expr . ')'
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1064


State 828

  302 expr_cast: "cast" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1065


State 829

  305 expr_cast: "upcast" '<' $@11 . type_declaration_no_options '>' $@12 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1066


State 830

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  458     | "addr" '(' expr . ')'
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1067


State 831

  308 expr_cast: "reinterpret" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1068


State 832

  803 make_dim_decl: "dim" '<' $@95 . type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1069


State 833

  316 expr_list: expr_list . ',' expr
  800 make_dim_decl: "dim" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1070


State 834

  779 make_struct_decl: "default" '<' $@83 . type_declaration_no_options '>' $@84 use_initializer

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1071


State 835

  785 make_tuple_call: "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1072


State 836

  316 expr_list: expr_list . ',' expr
  782 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1073


State 837

  776 make_struct_decl: "variant" '<' $@81 . type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1074


State 838

  459 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  460     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1075
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 839

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  489 expr_mtag: "$$" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1076


State 840

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  490 expr_mtag: "$i" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1077


State 841

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$v" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1078


State 842

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$b" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1079


State 843

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$a" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1080


State 844

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$c" '(' expr . ')' '(' ')'
  496          | "$c" '(' expr . ')' '(' expr_list ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1081


State 845

  251 expression_keyword: "keyword" '<' $@3 . type_declaration_no_options_list '>' $@4 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    type_declaration_no_options_list  go to state 1082
    name_in_namespace                 go to state 267
    basic_type_declaration            go to state 268
    structure_type_declaration        go to state 269
    auto_type_declaration             go to state 270
    bitfield_type_declaration         go to state 271
    type_declaration_no_options       go to state 272
    type_declaration                  go to state 938


State 846

  254 expression_keyword: "type function" '<' $@5 . type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    type_declaration_no_options_list  go to state 1083
    name_in_namespace                 go to state 267
    basic_type_declaration            go to state 268
    structure_type_declaration        go to state 269
    auto_type_declaration             go to state 270
    bitfield_type_declaration         go to state 271
    type_declaration_no_options       go to state 272
    type_declaration                  go to state 938


State 847

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 848

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1084
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 849

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 221
    STRING_CHARACTER_ESC  shift, and go to state 222

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 850

  617 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  618                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1085
    ','   shift, and go to state 949


State 851

  780 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1086
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 852

  805 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  813 optional_comma: ',' .

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 813 (optional_comma)

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 646
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_map_tuple          go to state 1087
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 853

  806 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1088


State 854

  617 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  618                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  814 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1089
    ','   shift, and go to state 949


State 855

  815 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 730
    "name"  shift, and go to state 731

    variable_name_with_pos_list  go to state 1090


State 856

  316 expr_list: expr_list ',' . expr
  813 optional_comma: ',' .

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 813 (optional_comma)

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1091
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 857

  786 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1092


State 858

  447 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1093


State 859

  387 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1094


State 860

  504 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1095


State 861

  391 func_addr_expr: '@' '@' '<' . $@17 type_declaration_no_options '>' $@18 func_addr_name
  394               | '@' '@' '<' . $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    ':'       reduce using rule 392 ($@19)
    '>'       reduce using rule 392 ($@19)
    '('       reduce using rule 392 ($@19)
    $default  reduce using rule 389 ($@17)

    $@17  go to state 1096
    $@19  go to state 1097


State 862

  386 func_addr_name: name_in_namespace .

    $default  reduce using rule 386 (func_addr_name)


State 863

  388 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 388 (func_addr_expr)


State 864

  759 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  760                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1098


State 865

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"
  755 make_struct_fields: "name" . copy_or_move expr
  756                   | "name" . ":=" expr

    "<-"  shift, and go to state 948
    ":="  shift, and go to state 1099
    "::"  shift, and go to state 99
    '='   shift, and go to state 950

    $default  reduce using rule 260 (name_in_namespace)

    copy_or_move  go to state 1100


State 866

  382 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  786 make_dim_decl: '[' . expr_list optional_comma ']'
  814 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  815                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "for"                             shift, and go to state 654
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "iterator"                        shift, and go to state 655
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 864
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 865
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 656
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_fields      go to state 1101
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 867

  402 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 402 (expr_call)


State 868

  316 expr_list: expr_list . ',' expr
  383 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  404 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1102
    ')'  shift, and go to state 1103


State 869

  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  763 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1104

    $default  reduce using rule 763 (make_struct_single)


State 870

  403 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1105


State 871

  330 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1106


State 872

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1107


State 873

  465 expr: expr "is" "type" . '<' $@23 type_declaration_no_options '>' $@24

    '<'  shift, and go to state 1108


State 874

  503 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1109


State 875

  467 expr: expr "is" "name" .

    $default  reduce using rule 467 (expr)


State 876

  466 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 466 (expr)


State 877

  471 expr: expr "as" "type" . '<' $@25 type_declaration '>' $@26

    '<'  shift, and go to state 1110


State 878

  501 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1111


State 879

  468 expr: expr "as" "name" .

    $default  reduce using rule 468 (expr)


State 880

  472 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 472 (expr)


State 881

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  421     | expr "<<" expr .
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '-'   shift, and go to state 690
    '+'   shift, and go to state 691
    '*'   shift, and go to state 692
    '/'   shift, and go to state 693
    '%'   shift, and go to state 694
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 421 (expr)


State 882

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  422     | expr ">>" expr .
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '-'   shift, and go to state 690
    '+'   shift, and go to state 691
    '*'   shift, and go to state 692
    '/'   shift, and go to state 693
    '%'   shift, and go to state 694
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 422 (expr)


State 883

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  434     | expr "<=" expr .
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 434 (expr)


State 884

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  435     | expr ">=" expr .
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 435 (expr)


State 885

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  432     | expr "==" expr .
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 432 (expr)


State 886

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  433     | expr "!=" expr .
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 433 (expr)


State 887

  384 expr_method_call: expr "->" "name" . '(' ')'
  385                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1112


State 888

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  461     | expr "??" expr .
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 461 (expr)


State 889

  498 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1113


State 890

  452 expr: expr "?." "name" .

    $default  reduce using rule 452 (expr)


State 891

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  450     | expr "?[" expr . ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ']'    shift, and go to state 1114


State 892

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  485     | expr "<|" expr .
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 485 (expr)


State 893

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  486     | expr "|>" expr .
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 672
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 486 (expr)


State 894

  405 expr_call: basic_type_declaration . '(' ')'
  406          | basic_type_declaration . '(' expr_list ')'
  487 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 698

    $default  reduce using rule 487 (expr)


State 895

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  423     | expr "<<<" expr .
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '-'   shift, and go to state 690
    '+'   shift, and go to state 691
    '*'   shift, and go to state 692
    '/'   shift, and go to state 693
    '%'   shift, and go to state 694
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 423 (expr)


State 896

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  424     | expr ">>>" expr .
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '-'   shift, and go to state 690
    '+'   shift, and go to state 691
    '*'   shift, and go to state 692
    '/'   shift, and go to state 693
    '%'   shift, and go to state 694
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 424 (expr)


State 897

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  439     | expr "&&" expr .
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 439 (expr)


State 898

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  440     | expr "||" expr .
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "^^"   shift, and go to state 682
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 440 (expr)


State 899

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  441     | expr "^^" expr .
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 441 (expr)


State 900

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  442     | expr ".." expr .
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    ".."  error (nonassociative)

    $default  reduce using rule 442 (expr)


State 901

  473 expr: expr '?' "as" . "name"
  476     | expr '?' "as" . "type" '<' $@27 type_declaration '>' $@28
  477     | expr '?' "as" . basic_type_declaration
  502 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1115
    "bool"      shift, and go to state 232
    "void"      shift, and go to state 233
    "string"    shift, and go to state 234
    "int"       shift, and go to state 236
    "int2"      shift, and go to state 237
    "int3"      shift, and go to state 238
    "int4"      shift, and go to state 239
    "uint"      shift, and go to state 240
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 242
    "uint3"     shift, and go to state 243
    "uint4"     shift, and go to state 244
    "float"     shift, and go to state 245
    "float2"    shift, and go to state 246
    "float3"    shift, and go to state 247
    "float4"    shift, and go to state 248
    "range"     shift, and go to state 249
    "urange"    shift, and go to state 250
    "range64"   shift, and go to state 251
    "urange64"  shift, and go to state 252
    "int64"     shift, and go to state 254
    "uint64"    shift, and go to state 255
    "double"    shift, and go to state 256
    "int8"      shift, and go to state 259
    "uint8"     shift, and go to state 260
    "int16"     shift, and go to state 261
    "uint16"    shift, and go to state 262
    "$f"        shift, and go to state 1116
    "name"      shift, and go to state 1117

    basic_type_declaration  go to state 1118


State 902

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  462     | expr '?' expr . ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    ':'    shift, and go to state 1119
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696


State 903

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  437     | expr '|' expr .
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 437 (expr)


State 904

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  438     | expr '^' expr .
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 438 (expr)


State 905

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  436     | expr '&' expr .
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 436 (expr)


State 906

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  430     | expr '<' expr .
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 430 (expr)


State 907

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  431     | expr '>' expr .
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 431 (expr)


State 908

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  426     | expr '-' expr .
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '*'   shift, and go to state 692
    '/'   shift, and go to state 693
    '%'   shift, and go to state 694
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 426 (expr)


State 909

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  425     | expr '+' expr .
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '*'   shift, and go to state 692
    '/'   shift, and go to state 693
    '%'   shift, and go to state 694
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 425 (expr)


State 910

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  427     | expr '*' expr .
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 427 (expr)


State 911

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  428     | expr '/' expr .
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 428 (expr)


State 912

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  429     | expr '%' expr .
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 662
    "as"  shift, and go to state 663
    "++"  shift, and go to state 666
    "--"  shift, and go to state 667
    "->"  shift, and go to state 672
    "??"  shift, and go to state 673
    "?."  shift, and go to state 674
    "?["  shift, and go to state 675
    "<|"  shift, and go to state 676
    "|>"  shift, and go to state 677
    '.'   shift, and go to state 695
    '['   shift, and go to state 696

    $default  reduce using rule 429 (expr)


State 913

  453 expr: expr '.' "?." . "name"
  500 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1120
    "name"  shift, and go to state 1121


State 914

  451 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1122
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 915

  497 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1123


State 916

  395 expr_field: expr '.' "name" .
  397           | expr '.' "name" . '(' ')'
  398           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1124

    '('       [reduce using rule 395 (expr_field)]
    $default  reduce using rule 395 (expr_field)


State 917

  396 expr_field: expr '.' '.' . "name"
  499 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1125
    "name"  shift, and go to state 1126


State 918

  449 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1127
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 919

  401 expr_field: expr '.' $@21 . error $@22

    error  shift, and go to state 1128


State 920

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  448     | expr '[' expr . ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ']'    shift, and go to state 1129


State 921

  405 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 405 (expr_call)


State 922

  316 expr_list: expr_list . ',' expr
  406 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 940
    ')'  shift, and go to state 1130


State 923

  707 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 706 ($@51)

    $@51  go to state 1131


State 924

  697 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 696 ($@45)

    $@45  go to state 1132


State 925

  659 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1133


State 926

  665 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' . $@40

    $default  reduce using rule 664 ($@40)

    $@40  go to state 1134


State 927

  711 type_declaration_no_options: "block" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 710 ($@53)

    $@53  go to state 1135


State 928

  714 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1136


State 929

  718 type_declaration_no_options: "function" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 717 ($@57)

    $@57  go to state 1137


State 930

  721 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1138


State 931

  725 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 724 ($@61)

    $@61  go to state 1139


State 932

  728 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1140


State 933

  532 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 520
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    tuple_type                   go to state 1141
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 523


State 934

  731 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' . $@65

    $default  reduce using rule 730 ($@65)

    $@65  go to state 1142


State 935

  538 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 525

    variant_type  go to state 1143


State 936

  734 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' . $@67

    $default  reduce using rule 733 ($@67)

    $@67  go to state 1144


State 937

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1145
    '>'                  shift, and go to state 1146


State 938

  247 type_declaration_no_options_list: type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 247 (type_declaration_no_options_list)


State 939

  680 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 680 (type_declaration_no_options)


State 940

  316 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1091
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 941

  669 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 669 (dim_list)


State 942

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block" .

    $default  reduce using rule 749 (bitfield_alias_declaration)


State 943

  530 tuple_type: "name" ':' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 530 (tuple_type)


State 944

  536 variant_type: "name" ':' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 536 (variant_type)


State 945

  526 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 526 (function_argument_declaration)


State 946

  615 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1147
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 947

  616 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1148


State 948

  543 copy_or_move: "<-" .

    $default  reduce using rule 543 (copy_or_move)


State 949

  617 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  618                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1149


State 950

  542 copy_or_move: '=' .

    $default  reduce using rule 542 (copy_or_move)


State 951

  546 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  547                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1150


State 952

  545 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 545 (variable_declaration)


State 953

  548 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  549                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 1151
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_assign             go to state 740
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1152
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 954

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 955

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1153
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 956

  280 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 280 (expression_return)


State 957

  277 expression_return_no_pipe: "return" "<-" expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 940

    $default  reduce using rule 277 (expression_return_no_pipe)


State 958

  352 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1154
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 959

  353 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1155
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 960

  355 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1156
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 961

  354 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1157
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 962

  356 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1158
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 963

  346 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1159
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 964

  347 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1160
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 965

  348 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1161
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 966

  357 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1162
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 967

  358 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1163
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 968

  344 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1164
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 969

  359 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1165
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 970

  360 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1166
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 971

  349 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1167
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 972

  350 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1168
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 973

  351 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1169
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 974

  343 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1170
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 975

  286 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1171


State 976

  264 expression_delete: "delete" "explicit" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 264 (expression_delete)


State 977

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 978

   77 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1172
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 979

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 980

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 981

  285 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 285 (expression_yield)


State 982

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  282 expression_yield_no_pipe: "yield" "<-" expr .
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 662
    "as"    shift, and go to state 663
    "+="    shift, and go to state 958
    "-="    shift, and go to state 959
    "/="    shift, and go to state 960
    "*="    shift, and go to state 961
    "%="    shift, and go to state 962
    "&="    shift, and go to state 963
    "|="    shift, and go to state 964
    "^="    shift, and go to state 965
    "<<"    shift, and go to state 664
    ">>"    shift, and go to state 665
    "++"    shift, and go to state 666
    "--"    shift, and go to state 667
    "<="    shift, and go to state 668
    "<<="   shift, and go to state 966
    ">>="   shift, and go to state 967
    ">="    shift, and go to state 669
    "=="    shift, and go to state 670
    "!="    shift, and go to state 671
    "->"    shift, and go to state 672
    "<-"    shift, and go to state 968
    "??"    shift, and go to state 673
    "?."    shift, and go to state 674
    "?["    shift, and go to state 675
    "<|"    shift, and go to state 676
    "|>"    shift, and go to state 677
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 678
    ">>>"   shift, and go to state 679
    "<<<="  shift, and go to state 969
    ">>>="  shift, and go to state 970
    "&&"    shift, and go to state 680
    "||"    shift, and go to state 681
    "^^"    shift, and go to state 682
    "&&="   shift, and go to state 971
    "||="   shift, and go to state 972
    "^^="   shift, and go to state 973
    ".."    shift, and go to state 683
    '='     shift, and go to state 974
    '?'     shift, and go to state 684
    '|'     shift, and go to state 685
    '^'     shift, and go to state 686
    '&'     shift, and go to state 687
    '<'     shift, and go to state 688
    '>'     shift, and go to state 689
    '-'     shift, and go to state 690
    '+'     shift, and go to state 691
    '*'     shift, and go to state 692
    '/'     shift, and go to state 693
    '%'     shift, and go to state 694
    '.'     shift, and go to state 695
    '['     shift, and go to state 696
    '$'     shift, and go to state 465
    '@'     shift, and go to state 755

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 282 (expression_yield_no_pipe)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 983

  322 block_or_lambda: '@' '@' .

    $default  reduce using rule 322 (block_or_lambda)


State 984

  332 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 871

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1173


State 985

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 986

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1174


State 987

   71 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1175
    "elif"         shift, and go to state 1176
    "static_elif"  shift, and go to state 1177

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1178
    expression_else      go to state 1179


State 988

   72 expression_if_then_else: expression_if_one_liner "if" expr . expression_else_one_liner "end of expression"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1180
    "is"    shift, and go to state 662
    "as"    shift, and go to state 663
    "<<"    shift, and go to state 664
    ">>"    shift, and go to state 665
    "++"    shift, and go to state 666
    "--"    shift, and go to state 667
    "<="    shift, and go to state 668
    ">="    shift, and go to state 669
    "=="    shift, and go to state 670
    "!="    shift, and go to state 671
    "->"    shift, and go to state 672
    "??"    shift, and go to state 673
    "?."    shift, and go to state 674
    "?["    shift, and go to state 675
    "<|"    shift, and go to state 676
    "|>"    shift, and go to state 677
    "<<<"   shift, and go to state 678
    ">>>"   shift, and go to state 679
    "&&"    shift, and go to state 680
    "||"    shift, and go to state 681
    "^^"    shift, and go to state 682
    ".."    shift, and go to state 683
    '?'     shift, and go to state 684
    '|'     shift, and go to state 685
    '^'     shift, and go to state 686
    '&'     shift, and go to state 687
    '<'     shift, and go to state 688
    '>'     shift, and go to state 689
    '-'     shift, and go to state 690
    '+'     shift, and go to state 691
    '*'     shift, and go to state 692
    '/'     shift, and go to state 693
    '%'     shift, and go to state 694
    '.'     shift, and go to state 695
    '['     shift, and go to state 696

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1181


State 989

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 871

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1182


State 990

  296 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1183

    tuple_expansion  go to state 1184


State 991

  299 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 299 (expression_let)


State 992

  298 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 298 (expression_let)


State 993

  255 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 255 (expr_pipe)


State 994

  363 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 1185


State 995

  361 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 1186


State 996

  362 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 465
    '@'                    shift, and go to state 755

    expression_block  go to state 756
    block_or_lambda   go to state 757
    expr_block        go to state 1187


State 997

  364 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 364 (expr_assign_pipe_right)


State 998

  373 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 999

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "+=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1000

  374 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 1001

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "-=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1002

  376 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 1003

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "/=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1004

  375 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 1005

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "*=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1006

  377 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1007

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "%=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1008

  367 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 367 (expr_assign_pipe)


State 1009

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr "&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1010

  368 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 368 (expr_assign_pipe)


State 1011

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr "|=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1012

  369 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 1013

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr "^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1014

  378 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1015

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1016

  379 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1017

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr ">>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1018

  366 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 366 (expr_assign_pipe)


State 1019

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  344 expr_assign: expr "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 344 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1020

  345 expr_assign: expr ":=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 345 (expr_assign)


State 1021

  380 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1022

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "<<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1023

  381 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1024

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr ">>>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1025

  370 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 1026

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr "&&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1027

  371 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 1028

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "||=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1029

  372 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 1030

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "^^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1031

  365 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 365 (expr_assign_pipe)


State 1032

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    '$'    shift, and go to state 465
    '@'    shift, and go to state 755

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1033

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  577 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 577 (enum_expression)


State 1034

  580 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 580 (enum_list)


State 1035

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 . "end of code block"

    "end of code block"  shift, and go to state 1188


State 1036

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "public"   shift, and go to state 1189
    "private"  shift, and go to state 1190

    $default  reduce using rule 512 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1191


State 1037

  517 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1192

    $default  reduce using rule 515 (optional_static_member_variable)

    optional_static_member_variable  go to state 1193


State 1038

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1194


State 1039

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 559 (let_variable_name_with_pos_list)


State 1040

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 562 (let_variable_declaration)


State 1041

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 662
    "as"                 shift, and go to state 663
    "+="                 shift, and go to state 958
    "-="                 shift, and go to state 959
    "/="                 shift, and go to state 960
    "*="                 shift, and go to state 961
    "%="                 shift, and go to state 962
    "&="                 shift, and go to state 963
    "|="                 shift, and go to state 964
    "^="                 shift, and go to state 965
    "<<"                 shift, and go to state 664
    ">>"                 shift, and go to state 665
    "++"                 shift, and go to state 666
    "--"                 shift, and go to state 667
    "<="                 shift, and go to state 668
    "<<="                shift, and go to state 966
    ">>="                shift, and go to state 967
    ">="                 shift, and go to state 669
    "=="                 shift, and go to state 670
    "!="                 shift, and go to state 671
    "->"                 shift, and go to state 672
    "<-"                 shift, and go to state 968
    "??"                 shift, and go to state 673
    "?."                 shift, and go to state 674
    "?["                 shift, and go to state 675
    "<|"                 shift, and go to state 676
    "|>"                 shift, and go to state 677
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 678
    ">>>"                shift, and go to state 679
    "<<<="               shift, and go to state 969
    ">>>="               shift, and go to state 970
    "&&"                 shift, and go to state 680
    "||"                 shift, and go to state 681
    "^^"                 shift, and go to state 682
    "&&="                shift, and go to state 971
    "||="                shift, and go to state 972
    "^^="                shift, and go to state 973
    ".."                 shift, and go to state 683
    "end of expression"  shift, and go to state 1195
    '='                  shift, and go to state 974
    '?'                  shift, and go to state 684
    '|'                  shift, and go to state 685
    '^'                  shift, and go to state 686
    '&'                  shift, and go to state 687
    '<'                  shift, and go to state 688
    '>'                  shift, and go to state 689
    '-'                  shift, and go to state 690
    '+'                  shift, and go to state 691
    '*'                  shift, and go to state 692
    '/'                  shift, and go to state 693
    '%'                  shift, and go to state 694
    '.'                  shift, and go to state 695
    '['                  shift, and go to state 696
    '$'                  shift, and go to state 465
    '@'                  shift, and go to state 755

    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1042

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 563 (let_variable_declaration)


State 1043

  678 type_declaration_no_options: "type" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 678 (type_declaration_no_options)


State 1044

  701 type_declaration_no_options: "array" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 701 (type_declaration_no_options)


State 1045

  704 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' $@49 .

    $default  reduce using rule 704 (type_declaration_no_options)


State 1046

  667 table_type_pair: type_declaration "end of expression" type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 667 (table_type_pair)


State 1047

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options . '>' $@78 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1196
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1048

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options . '>' $@80 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1197
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1049

  267 new_type_declaration: '<' $@7 type_declaration . '>' $@8
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1198


State 1050

  767 use_initializer: "uninitialized" .

    $default  reduce using rule 767 (use_initializer)


State 1051

  270 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  271         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199
    ')'     shift, and go to state 1200

    make_struct_fields  go to state 869
    make_struct_single  go to state 1201


State 1052

  269 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1202


State 1053

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1203


State 1054

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1204


State 1055

  311 expr_type_decl: "type" '<' $@15 type_declaration . '>' $@16
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1205


State 1056

  789 make_dim_decl: "array" "struct" '<' $@87 . type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1206


State 1057

  792 make_dim_decl: "array" "tuple" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1207


State 1058

  795 make_dim_decl: "array" "variant" '<' $@91 . type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1208


State 1059

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options . '>' $@94 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1209
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1060

  796 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1210


State 1061

  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1211


State 1062

  808 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1212


State 1063

  807 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1213


State 1064

  457 expr: "deref" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 1065

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options . '>' $@10 expr
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1214
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1066

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options . '>' $@12 expr
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1215
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1067

  458 expr: "addr" '(' expr ')' .

    $default  reduce using rule 458 (expr)


State 1068

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options . '>' $@14 expr
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1216
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1069

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options . '>' $@96 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1217
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1070

  800 make_dim_decl: "dim" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1218


State 1071

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  779 make_struct_decl: "default" '<' $@83 type_declaration_no_options . '>' $@84 use_initializer

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1219
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1072

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1220
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1073

  782 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1221


State 1074

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options . '>' $@82 '(' make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1222
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1075

  459 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  460     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 871

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1223


State 1076

  489 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1077

  490 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1078

  491 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1079

  492 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1080

  493 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1081

  495 expr_mtag: "$c" '(' expr ')' . '(' ')'
  496          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1224


State 1082

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list . '>' $@4 expr

    "end of expression"  shift, and go to state 1145
    '>'                  shift, and go to state 1225


State 1083

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list . '>' $@6 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1145
    '>'                  shift, and go to state 1226


State 1084

   30 string_builder_body: string_builder_body "{" expr . "}"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    "}"    shift, and go to state 1227
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696


State 1085

  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1228
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1086

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  780 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 780 (make_map_tuple)


State 1087

  805 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 805 (expr_map_tuple_list)


State 1088

  806 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 806 (make_table_decl)


State 1089

  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1229
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1090

  617 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  618                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1230
    ','   shift, and go to state 949


State 1091

  316 expr_list: expr_list ',' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 316 (expr_list)


State 1092

  786 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 786 (make_dim_decl)


State 1093

  447 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 447 (expr)


State 1094

  387 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1231
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1095

  504 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1232
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1096

  391 func_addr_expr: '@' '@' '<' $@17 . type_declaration_no_options '>' $@18 func_addr_name

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1233


State 1097

  394 func_addr_expr: '@' '@' '<' $@19 . optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1234


State 1098

  759 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  760                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1235
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1099

  756 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1236
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1100

  755 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1237
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1101

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1104
    ']'  shift, and go to state 1238


State 1102

  316 expr_list: expr_list ',' . expr
  383 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1239
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1091
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1103

  404 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 404 (expr_call)


State 1104

  757 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  758                   | make_struct_fields ',' . "name" ":=" expr
  761                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1240
    "name"  shift, and go to state 1241


State 1105

  403 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 403 (expr_call)


State 1106

  330 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1242
    ":="  shift, and go to state 1243
    '='   shift, and go to state 1244
    '&'   shift, and go to state 1245

    capture_entry  go to state 1246
    capture_list   go to state 1247


State 1107

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1248


State 1108

  465 expr: expr "is" "type" '<' . $@23 type_declaration_no_options '>' $@24

    $default  reduce using rule 463 ($@23)

    $@23  go to state 1249


State 1109

  503 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1250
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1110

  471 expr: expr "as" "type" '<' . $@25 type_declaration '>' $@26

    $default  reduce using rule 469 ($@25)

    $@25  go to state 1251


State 1111

  501 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1252
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1112

  384 expr_method_call: expr "->" "name" '(' . ')'
  385                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1253
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1254
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1113

  498 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1255
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1114

  450 expr: expr "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 1115

  476 expr: expr '?' "as" "type" . '<' $@27 type_declaration '>' $@28

    '<'  shift, and go to state 1256


State 1116

  502 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1257


State 1117

  473 expr: expr '?' "as" "name" .

    $default  reduce using rule 473 (expr)


State 1118

  477 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 477 (expr)


State 1119

  462 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1258
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1120

  500 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1259


State 1121

  453 expr: expr '.' "?." "name" .

    $default  reduce using rule 453 (expr)


State 1122

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  451     | expr '.' "?[" expr . ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ']'    shift, and go to state 1260


State 1123

  497 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1261
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1124

  397 expr_field: expr '.' "name" '(' . ')'
  398           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1262
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1263
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1125

  499 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1264


State 1126

  396 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 396 (expr_field)


State 1127

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  449     | expr '.' '[' expr . ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ']'    shift, and go to state 1265


State 1128

  401 expr_field: expr '.' $@21 error . $@22

    $default  reduce using rule 400 ($@22)

    $@22  go to state 1266


State 1129

  448 expr: expr '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1130

  406 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 406 (expr_call)


State 1131

  707 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 707 (type_declaration_no_options)


State 1132

  697 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 697 (type_declaration_no_options)


State 1133

  659 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 659 (bitfield_bits)


State 1134

  665 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40 .

    $default  reduce using rule 665 (bitfield_type_declaration)


State 1135

  711 type_declaration_no_options: "block" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 711 (type_declaration_no_options)


State 1136

  714 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 713 ($@55)

    $@55  go to state 1267


State 1137

  718 type_declaration_no_options: "function" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 718 (type_declaration_no_options)


State 1138

  721 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 720 ($@59)

    $@59  go to state 1268


State 1139

  725 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1140

  728 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 727 ($@63)

    $@63  go to state 1269


State 1141

  532 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 532 (tuple_type_list)


State 1142

  731 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' $@65 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1143

  538 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 538 (variant_type_list)


State 1144

  734 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' $@67 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1145

  248 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1270


State 1146

  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1271


State 1147

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  615 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1272


State 1148

  616 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 616 (variable_name_with_pos_list)


State 1149

  617 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  618                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1273

    $default  reduce using rule 617 (variable_name_with_pos_list)


State 1150

  546 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  547                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 948
    '='   shift, and go to state 950
    '|'   shift, and go to state 381

    $default  reduce using rule 546 (variable_declaration)

    copy_or_move  go to state 1274


State 1151

  549 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 549 (variable_declaration)


State 1152

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  548 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 662
    "as"    shift, and go to state 663
    "+="    shift, and go to state 958
    "-="    shift, and go to state 959
    "/="    shift, and go to state 960
    "*="    shift, and go to state 961
    "%="    shift, and go to state 962
    "&="    shift, and go to state 963
    "|="    shift, and go to state 964
    "^="    shift, and go to state 965
    "<<"    shift, and go to state 664
    ">>"    shift, and go to state 665
    "++"    shift, and go to state 666
    "--"    shift, and go to state 667
    "<="    shift, and go to state 668
    "<<="   shift, and go to state 966
    ">>="   shift, and go to state 967
    ">="    shift, and go to state 669
    "=="    shift, and go to state 670
    "!="    shift, and go to state 671
    "->"    shift, and go to state 672
    "<-"    shift, and go to state 968
    "??"    shift, and go to state 673
    "?."    shift, and go to state 674
    "?["    shift, and go to state 675
    "<|"    shift, and go to state 676
    "|>"    shift, and go to state 677
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 678
    ">>>"   shift, and go to state 679
    "<<<="  shift, and go to state 969
    ">>>="  shift, and go to state 970
    "&&"    shift, and go to state 680
    "||"    shift, and go to state 681
    "^^"    shift, and go to state 682
    "&&="   shift, and go to state 971
    "||="   shift, and go to state 972
    "^^="   shift, and go to state 973
    ".."    shift, and go to state 683
    '='     shift, and go to state 974
    '?'     shift, and go to state 684
    '|'     shift, and go to state 685
    '^'     shift, and go to state 686
    '&'     shift, and go to state 687
    '<'     shift, and go to state 688
    '>'     shift, and go to state 689
    '-'     shift, and go to state 690
    '+'     shift, and go to state 691
    '*'     shift, and go to state 692
    '/'     shift, and go to state 693
    '%'     shift, and go to state 694
    '.'     shift, and go to state 695
    '['     shift, and go to state 696
    '$'     shift, and go to state 465
    '@'     shift, and go to state 755

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 548 (variable_declaration)

    block_or_lambda                go to state 767
    expr_full_block_assumed_piped  go to state 796


State 1153

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . expression_block
  316 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 332
    ','                    shift, and go to state 940

    expression_block  go to state 1275


State 1154

  352 expr_assign: expr "+=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 352 (expr_assign)


State 1155

  353 expr_assign: expr "-=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 353 (expr_assign)


State 1156

  355 expr_assign: expr "/=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 355 (expr_assign)


State 1157

  354 expr_assign: expr "*=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 354 (expr_assign)


State 1158

  356 expr_assign: expr "%=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 356 (expr_assign)


State 1159

  346 expr_assign: expr "&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 346 (expr_assign)


State 1160

  347 expr_assign: expr "|=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 347 (expr_assign)


State 1161

  348 expr_assign: expr "^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 348 (expr_assign)


State 1162

  357 expr_assign: expr "<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 357 (expr_assign)


State 1163

  358 expr_assign: expr ">>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 358 (expr_assign)


State 1164

  344 expr_assign: expr "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 344 (expr_assign)


State 1165

  359 expr_assign: expr "<<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 359 (expr_assign)


State 1166

  360 expr_assign: expr ">>>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 360 (expr_assign)


State 1167

  349 expr_assign: expr "&&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 349 (expr_assign)


State 1168

  350 expr_assign: expr "||=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 350 (expr_assign)


State 1169

  351 expr_assign: expr "^^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 351 (expr_assign)


State 1170

  343 expr_assign: expr '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 343 (expr_assign)


State 1171

  286 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 286 (expression_try_catch)


State 1172

   77 expression_with_alias: "assume" "name" '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 77 (expression_with_alias)


State 1173

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1276


State 1174

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 538
    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 539
    "if"                              shift, and go to state 540
    "static_if"                       shift, and go to state 541
    "for"                             shift, and go to state 542
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "return"                          shift, and go to state 543
    "null"                            shift, and go to state 425
    "break"                           shift, and go to state 544
    "try"                             shift, and go to state 545
    "table"                           shift, and go to state 426
    "delete"                          shift, and go to state 546
    "deref"                           shift, and go to state 427
    "with"                            shift, and go to state 547
    "assume"                          shift, and go to state 548
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 430
    "continue"                        shift, and go to state 549
    "pass"                            shift, and go to state 550
    "reinterpret"                     shift, and go to state 431
    "label"                           shift, and go to state 551
    "goto"                            shift, and go to state 552
    "unsafe"                          shift, and go to state 553
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 554
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    "end of code block"               shift, and go to state 1277
    "end of expression"               shift, and go to state 560
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder             go to state 467
    expr_reader                go to state 468
    expression_label           go to state 561
    expression_goto            go to state 562
    if_or_static_if            go to state 563
    expression_if_one_liner    go to state 564
    expression_if_then_else    go to state 565
    expression_for_loop        go to state 566
    expression_unsafe          go to state 567
    expression_while_loop      go to state 568
    expression_with            go to state 569
    expression_with_alias      go to state 570
    expr_call_pipe             go to state 571
    expression_any             go to state 572
    expr_keyword               go to state 573
    expression_keyword         go to state 574
    expr_pipe                  go to state 575
    name_in_namespace          go to state 470
    expression_delete          go to state 576
    expr_new                   go to state 471
    expression_break           go to state 577
    expression_continue        go to state 578
    expression_return_no_pipe  go to state 579
    expression_return          go to state 580
    expression_yield_no_pipe   go to state 581
    expression_yield           go to state 582
    expression_try_catch       go to state 583
    kwd_let                    go to state 584
    expression_let             go to state 585
    expr_cast                  go to state 472
    expr_type_decl             go to state 473
    expr_type_info             go to state 474
    block_or_lambda            go to state 475
    expr_full_block            go to state 476
    expr_numeric_const         go to state 477
    expr_assign                go to state 586
    expr_assign_pipe           go to state 587
    expr_named_call            go to state 478
    expr_method_call           go to state 479
    func_addr_expr             go to state 480
    expr_field                 go to state 481
    expr_call                  go to state 482
    expr                       go to state 588
    expr_mtag                  go to state 484
    basic_type_declaration     go to state 485
    make_decl                  go to state 486
    make_struct_decl           go to state 487
    make_tuple_call            go to state 488
    make_dim_decl              go to state 489
    make_table_decl            go to state 490
    array_comprehension        go to state 491


State 1175

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1278


State 1176

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1177

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1178

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1279
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1179

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 71 (expression_if_then_else)


State 1180

   65 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "return"                          shift, and go to state 1280
    "null"                            shift, and go to state 425
    "break"                           shift, and go to state 544
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "continue"                        shift, and go to state 549
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 1281
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder             go to state 467
    expr_reader                go to state 468
    expression_if_one_liner    go to state 1282
    expression_keyword         go to state 469
    name_in_namespace          go to state 470
    expr_new                   go to state 471
    expression_break           go to state 1283
    expression_continue        go to state 1284
    expression_return_no_pipe  go to state 1285
    expression_yield_no_pipe   go to state 1286
    expr_cast                  go to state 472
    expr_type_decl             go to state 473
    expr_type_info             go to state 474
    block_or_lambda            go to state 475
    expr_full_block            go to state 476
    expr_numeric_const         go to state 477
    expr_named_call            go to state 478
    expr_method_call           go to state 479
    func_addr_expr             go to state 480
    expr_field                 go to state 481
    expr_call                  go to state 482
    expr                       go to state 1287
    expr_mtag                  go to state 484
    basic_type_declaration     go to state 485
    make_decl                  go to state 486
    make_struct_decl           go to state 487
    make_tuple_call            go to state 488
    make_dim_decl              go to state 489
    make_table_decl            go to state 490
    array_comprehension        go to state 491


State 1181

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1288


State 1182

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1289


State 1183

  294 tuple_expansion: "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1184

  295 tuple_expansion: tuple_expansion . ',' "name"
  296 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1290
    ')'  shift, and go to state 1291


State 1185

  363 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 363 (expr_assign_pipe_right)


State 1186

  361 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 361 (expr_assign_pipe_right)


State 1187

  362 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 362 (expr_assign_pipe_right)


State 1188

  598 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block" .

    $default  reduce using rule 598 (enum_declaration)


State 1189

  513 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 513 (optional_public_or_private_member_variable)


State 1190

  514 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 514 (optional_public_or_private_member_variable)


State 1191

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "abstract"  shift, and go to state 1292
    "static"    shift, and go to state 1192

    $default  reduce using rule 515 (optional_static_member_variable)

    optional_static_member_variable  go to state 1293


State 1192

  516 optional_static_member_variable: "static" .

    $default  reduce using rule 516 (optional_static_member_variable)


State 1193

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1294
    "sealed"    shift, and go to state 1295

    $default  reduce using rule 507 (optional_override)

    optional_override  go to state 1296


State 1194

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression" .

    $default  reduce using rule 520 (struct_variable_declaration_list)


State 1195

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 561 (let_variable_declaration)


State 1196

  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' . $@78 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 769 ($@78)

    $@78  go to state 1297


State 1197

  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' . $@80 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 772 ($@80)

    $@80  go to state 1298


State 1198

  267 new_type_declaration: '<' $@7 type_declaration '>' . $@8

    $default  reduce using rule 266 ($@8)

    $@8  go to state 1299


State 1199

  755 make_struct_fields: "name" . copy_or_move expr
  756                   | "name" . ":=" expr

    "<-"  shift, and go to state 948
    ":="  shift, and go to state 1099
    '='   shift, and go to state 950

    copy_or_move  go to state 1100


State 1200

  270 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 270 (expr_new)


State 1201

  271 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1300


State 1202

  269 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 269 (expr_new)


State 1203

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1301
    '>'                  shift, and go to state 1302


State 1204

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 312 (expr_type_info)


State 1205

  311 expr_type_decl: "type" '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 310 ($@16)

    $@16  go to state 1303


State 1206

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options . '>' $@88 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1304
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1207

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1305
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1208

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options . '>' $@92 '(' make_struct_dim ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1306
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1209

  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' . $@94 '(' expr_list optional_comma ')'

    $default  reduce using rule 798 ($@94)

    $@94  go to state 1307


State 1210

  796 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 796 (make_dim_decl)


State 1211

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"
  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1308
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1212

  808 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 646
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_map_tuple          go to state 647
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    expr_map_tuple_list     go to state 1309
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1213

  807 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 807 (make_table_decl)


State 1214

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 301 ($@10)

    $@10  go to state 1310


State 1215

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' . $@12 expr

    $default  reduce using rule 304 ($@12)

    $@12  go to state 1311


State 1216

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 307 ($@14)

    $@14  go to state 1312


State 1217

  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' . $@96 '(' expr_list optional_comma ')'

    $default  reduce using rule 802 ($@96)

    $@96  go to state 1313


State 1218

  800 make_dim_decl: "dim" '(' expr_list optional_comma ')' .

    $default  reduce using rule 800 (make_dim_decl)


State 1219

  779 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' . $@84 use_initializer

    $default  reduce using rule 778 ($@84)

    $@84  go to state 1314


State 1220

  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 784 ($@86)

    $@86  go to state 1315


State 1221

  782 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 782 (make_tuple_call)


State 1222

  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' . $@82 '(' make_struct_dim ')'

    $default  reduce using rule 775 ($@82)

    $@82  go to state 1316


State 1223

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1317


State 1224

  495 expr_mtag: "$c" '(' expr ')' '(' . ')'
  496          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1318
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1319
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1225

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' . $@4 expr

    $default  reduce using rule 250 ($@4)

    $@4  go to state 1320


State 1226

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' . $@6 optional_expr_list_in_braces

    $default  reduce using rule 253 ($@6)

    $@6  go to state 1321


State 1227

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1228

  316 expr_list: expr_list . ',' expr
  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1322
    ','                  shift, and go to state 940


State 1229

  316 expr_list: expr_list . ',' expr
  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1323
    ','                  shift, and go to state 940


State 1230

  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1324
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1231

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  387 func_addr_name: "$i" '(' expr . ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1325


State 1232

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  504          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1326


State 1233

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options . '>' $@18 func_addr_name
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1327
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1234

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list . optional_function_type '>' $@20 func_addr_name

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1328


State 1235

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  760                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1329


State 1236

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 756 (make_struct_fields)


State 1237

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 755 (make_struct_fields)


State 1238

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1330


State 1239

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  786 make_dim_decl: '[' . expr_list optional_comma ']'
  814 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  815                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "for"                             shift, and go to state 654
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "iterator"                        shift, and go to state 655
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 864
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 865
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 656
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_fields      go to state 1331
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1240

  761 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1332


State 1241

  757 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  758                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 948
    ":="  shift, and go to state 1333
    '='   shift, and go to state 950

    copy_or_move  go to state 1334


State 1242

  325 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1335


State 1243

  326 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1336


State 1244

  324 capture_entry: '=' . "name"

    "name"  shift, and go to state 1337


State 1245

  323 capture_entry: '&' . "name"

    "name"  shift, and go to state 1338


State 1246

  327 capture_list: capture_entry .

    $default  reduce using rule 327 (capture_list)


State 1247

  328 capture_list: capture_list . ',' capture_entry
  330 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1339
    ']'  shift, and go to state 1340


State 1248

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1341
    "begin of code block"  shift, and go to state 332

    expression_block       go to state 1342
    block_or_simple_block  go to state 1343


State 1249

  465 expr: expr "is" "type" '<' $@23 . type_declaration_no_options '>' $@24

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1344


State 1250

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  503          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1345


State 1251

  471 expr: expr "as" "type" '<' $@25 . type_declaration '>' $@26

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1346


State 1252

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  501          | expr "as" "$f" '(' expr . ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1347


State 1253

  384 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 384 (expr_method_call)


State 1254

  316 expr_list: expr_list . ',' expr
  385 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 940
    ')'  shift, and go to state 1348


State 1255

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  498          | expr "?." "$f" '(' expr . ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1349


State 1256

  476 expr: expr '?' "as" "type" '<' . $@27 type_declaration '>' $@28

    $default  reduce using rule 474 ($@27)

    $@27  go to state 1350


State 1257

  502 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1351
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1258

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  462     | expr '?' expr ':' expr .
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 462 (expr)


State 1259

  500 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1352
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1260

  451 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 451 (expr)


State 1261

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr '.' "$f" '(' expr . ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1353


State 1262

  397 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 397 (expr_field)


State 1263

  316 expr_list: expr_list . ',' expr
  398 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 940
    ')'  shift, and go to state 1354


State 1264

  499 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1355
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1265

  449 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 449 (expr)


State 1266

  401 expr_field: expr '.' $@21 error $@22 .

    $default  reduce using rule 401 (expr_field)


State 1267

  714 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 714 (type_declaration_no_options)


State 1268

  721 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 721 (type_declaration_no_options)


State 1269

  728 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 728 (type_declaration_no_options)


State 1270

  248 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 248 (type_declaration_no_options_list)


State 1271

  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 467
    expr_reader             go to state 468
    optional_expr_list      go to state 1356
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 717
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1272

  615 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 615 (variable_name_with_pos_list)


State 1273

  618 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1357


State 1274

  547 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1358
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1275

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1276

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1359


State 1277

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 215 (expression_block)


State 1278

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1279

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 662
    "as"                   shift, and go to state 663
    "<<"                   shift, and go to state 664
    ">>"                   shift, and go to state 665
    "++"                   shift, and go to state 666
    "--"                   shift, and go to state 667
    "<="                   shift, and go to state 668
    ">="                   shift, and go to state 669
    "=="                   shift, and go to state 670
    "!="                   shift, and go to state 671
    "->"                   shift, and go to state 672
    "??"                   shift, and go to state 673
    "?."                   shift, and go to state 674
    "?["                   shift, and go to state 675
    "<|"                   shift, and go to state 676
    "|>"                   shift, and go to state 677
    "<<<"                  shift, and go to state 678
    ">>>"                  shift, and go to state 679
    "&&"                   shift, and go to state 680
    "||"                   shift, and go to state 681
    "^^"                   shift, and go to state 682
    ".."                   shift, and go to state 683
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 684
    '|'                    shift, and go to state 685
    '^'                    shift, and go to state 686
    '&'                    shift, and go to state 687
    '<'                    shift, and go to state 688
    '>'                    shift, and go to state 689
    '-'                    shift, and go to state 690
    '+'                    shift, and go to state 691
    '*'                    shift, and go to state 692
    '/'                    shift, and go to state 693
    '%'                    shift, and go to state 694
    '.'                    shift, and go to state 695
    '['                    shift, and go to state 696

    expression_block  go to state 1360


State 1280

  275 expression_return_no_pipe: "return" .
  276                          | "return" . expr_list
  277                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 1361
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 275 (expression_return_no_pipe)

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 739
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1281

  281 expression_yield_no_pipe: "yield" . expr
  282                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 1362
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1363
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1282

   65 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 65 (expression_else_one_liner)


State 1283

   69 expression_if_one_liner: expression_break .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1284

   70 expression_if_one_liner: expression_continue .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1285

   67 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1286

   68 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1287

   66 expression_if_one_liner: expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 66 (expression_if_one_liner)


State 1288

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 72 (expression_if_then_else)


State 1289

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 398

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1364


State 1290

  295 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1365


State 1291

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1366
    '&'  shift, and go to state 412

    $default  reduce using rule 553 (optional_ref)

    optional_ref  go to state 1367


State 1292

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@30 function_declaration_header "end of expression"

    "const"  shift, and go to state 1368

    $default  reduce using rule 510 (optional_constant)

    optional_constant  go to state 1369


State 1293

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@31 function_declaration_header expression_block

    "override"  shift, and go to state 1294
    "sealed"    shift, and go to state 1295

    $default  reduce using rule 507 (optional_override)

    optional_override  go to state 1370


State 1294

  508 optional_override: "override" .

    $default  reduce using rule 508 (optional_override)


State 1295

  509 optional_override: "sealed" .

    $default  reduce using rule 509 (optional_override)


State 1296

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1189
    "private"  shift, and go to state 1190

    $default  reduce using rule 512 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1371


State 1297

  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1372


State 1298

  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1373


State 1299

  267 new_type_declaration: '<' $@7 type_declaration '>' $@8 .

    $default  reduce using rule 267 (new_type_declaration)


State 1300

  271 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 271 (expr_new)


State 1301

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1374


State 1302

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1375
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1303

  311 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 311 (expr_type_decl)


State 1304

  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' . $@88 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 788 ($@88)

    $@88  go to state 1376


State 1305

  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 791 ($@90)

    $@90  go to state 1377


State 1306

  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' . $@92 '(' make_struct_dim ')'

    $default  reduce using rule 794 ($@92)

    $@92  go to state 1378


State 1307

  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1379


State 1308

  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1380


State 1309

  805 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  808 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 852

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1381


State 1310

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1382
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1311

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1383
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1312

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1384
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1313

  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' $@96 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1385


State 1314

  779 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 . use_initializer

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1386


State 1315

  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1387


State 1316

  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 . '(' make_struct_dim ')'

    '('  shift, and go to state 1388


State 1317

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1389
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1390
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1318

  495 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1319

  316 expr_list: expr_list . ',' expr
  496 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 940
    ')'  shift, and go to state 1391


State 1320

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1392
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1321

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 . optional_expr_list_in_braces

    '('  shift, and go to state 1393

    '('       [reduce using rule 245 (optional_expr_list_in_braces)]
    $default  reduce using rule 245 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1394


State 1322

  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 646
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_map_tuple          go to state 1395
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1323

  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1396
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1324

  316 expr_list: expr_list . ',' expr
  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1397
    ','                  shift, and go to state 940


State 1325

  387 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 387 (func_addr_name)


State 1326

  504 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1327

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' . $@18 func_addr_name

    $default  reduce using rule 390 ($@18)

    $@18  go to state 1398


State 1328

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type . '>' $@20 func_addr_name

    '>'  shift, and go to state 1399


State 1329

  759 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  760                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 948
    ":="  shift, and go to state 1400
    '='   shift, and go to state 950

    copy_or_move  go to state 1401


State 1330

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 382 (expr_named_call)


State 1331

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1104
    ']'  shift, and go to state 1402


State 1332

  761 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1403
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1333

  758 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1404
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1334

  757 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1405
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1335

  325 capture_entry: "<-" "name" .

    $default  reduce using rule 325 (capture_entry)


State 1336

  326 capture_entry: ":=" "name" .

    $default  reduce using rule 326 (capture_entry)


State 1337

  324 capture_entry: '=' "name" .

    $default  reduce using rule 324 (capture_entry)


State 1338

  323 capture_entry: '&' "name" .

    $default  reduce using rule 323 (capture_entry)


State 1339

  328 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1242
    ":="  shift, and go to state 1243
    '='   shift, and go to state 1244
    '&'   shift, and go to state 1245

    capture_entry  go to state 1406


State 1340

  330 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1407


State 1341

  318 block_or_simple_block: "=>" . expr
  319                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 1408
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1409
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1342

  317 block_or_simple_block: expression_block .

    $default  reduce using rule 317 (block_or_simple_block)


State 1343

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 333 (expr_full_block)


State 1344

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options . '>' $@24
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1410
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1345

  503 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1346

  471 expr: expr "as" "type" '<' $@25 type_declaration . '>' $@26
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1411


State 1347

  501 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1348

  385 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 385 (expr_method_call)


State 1349

  498 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1350

  476 expr: expr '?' "as" "type" '<' $@27 . type_declaration '>' $@28

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1412


State 1351

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr '?' "as" "$f" '(' expr . ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1413


State 1352

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr '.' "?." "$f" '(' expr . ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1414


State 1353

  497 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1354

  398 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 398 (expr_field)


State 1355

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr '.' '.' "$f" '(' expr . ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1415


State 1356

  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1416


State 1357

  618 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 618 (variable_name_with_pos_list)


State 1358

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  547 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 547 (variable_declaration)


State 1359

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1341
    "begin of code block"  shift, and go to state 332

    expression_block       go to state 1342
    block_or_simple_block  go to state 1417


State 1360

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1175
    "elif"         shift, and go to state 1176
    "static_elif"  shift, and go to state 1177

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1178
    expression_else      go to state 1418


State 1361

  277 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 957
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1362

  282 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1419
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1363

  281 expression_yield_no_pipe: "yield" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 281 (expression_yield_no_pipe)


State 1364

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1420


State 1365

  295 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 295 (tuple_expansion)


State 1366

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1421


State 1367

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 1422


State 1368

  511 optional_constant: "const" .

    $default  reduce using rule 511 (optional_constant)


State 1369

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@30 function_declaration_header "end of expression"

    $default  reduce using rule 521 ($@30)

    $@30  go to state 1423


State 1370

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@31 function_declaration_header expression_block

    "const"  shift, and go to state 1368

    $default  reduce using rule 510 (optional_constant)

    optional_constant  go to state 1424


State 1371

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 730
    "name"  shift, and go to state 731

    variable_declaration         go to state 1425
    variable_name_with_pos_list  go to state 733


State 1372

  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1426


State 1373

  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1427


State 1374

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1428


State 1375

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1429


State 1376

  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1430


State 1377

  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1431


State 1378

  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 . '(' make_struct_dim ')'

    '('  shift, and go to state 1432


State 1379

  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1433
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1380

  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 646
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_map_tuple          go to state 647
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    expr_map_tuple_list     go to state 1434
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1381

  808 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1435


State 1382

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 302 (expr_cast)


State 1383

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 305 (expr_cast)


State 1384

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 308 (expr_cast)


State 1385

  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' $@96 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 1436
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1386

  779 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 use_initializer .

    $default  reduce using rule 779 (make_struct_decl)


State 1387

  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1437


State 1388

  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1439


State 1389

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 459 (expr)


State 1390

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1440


State 1391

  496 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1392

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 251 (expression_keyword)


State 1393

  246 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 467
    expr_reader             go to state 468
    optional_expr_list      go to state 1441
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    expr_list               go to state 717
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 657
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1394

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces .

    $default  reduce using rule 254 (expression_keyword)


State 1395

  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1442

    $default  reduce using rule 810 (array_comprehension_where)

    array_comprehension_where  go to state 1443


State 1396

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 662
    "as"                 shift, and go to state 663
    "<<"                 shift, and go to state 664
    ">>"                 shift, and go to state 665
    "++"                 shift, and go to state 666
    "--"                 shift, and go to state 667
    "<="                 shift, and go to state 668
    ">="                 shift, and go to state 669
    "=="                 shift, and go to state 670
    "!="                 shift, and go to state 671
    "->"                 shift, and go to state 672
    "??"                 shift, and go to state 673
    "?."                 shift, and go to state 674
    "?["                 shift, and go to state 675
    "<|"                 shift, and go to state 676
    "|>"                 shift, and go to state 677
    "<<<"                shift, and go to state 678
    ">>>"                shift, and go to state 679
    "&&"                 shift, and go to state 680
    "||"                 shift, and go to state 681
    "^^"                 shift, and go to state 682
    ".."                 shift, and go to state 683
    "end of expression"  shift, and go to state 1442
    '?'                  shift, and go to state 684
    '|'                  shift, and go to state 685
    '^'                  shift, and go to state 686
    '&'                  shift, and go to state 687
    '<'                  shift, and go to state 688
    '>'                  shift, and go to state 689
    '-'                  shift, and go to state 690
    '+'                  shift, and go to state 691
    '*'                  shift, and go to state 692
    '/'                  shift, and go to state 693
    '%'                  shift, and go to state 694
    '.'                  shift, and go to state 695
    '['                  shift, and go to state 696

    $default  reduce using rule 810 (array_comprehension_where)

    array_comprehension_where  go to state 1444


State 1397

  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1445
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1398

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 859
    "name"  shift, and go to state 60

    name_in_namespace  go to state 862
    func_addr_name     go to state 1446


State 1399

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' . $@20 func_addr_name

    $default  reduce using rule 393 ($@20)

    $@20  go to state 1447


State 1400

  760 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1448
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1401

  759 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1449
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1402

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1450


State 1403

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1451


State 1404

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 758 (make_struct_fields)


State 1405

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  757 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 757 (make_struct_fields)


State 1406

  328 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 328 (capture_list)


State 1407

  330 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 330 (optional_capture_list)


State 1408

  319 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1452
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1409

  318 block_or_simple_block: "=>" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    ".."  error (nonassociative)

    $default  reduce using rule 318 (block_or_simple_block)


State 1410

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' . $@24

    $default  reduce using rule 464 ($@24)

    $@24  go to state 1453


State 1411

  471 expr: expr "as" "type" '<' $@25 type_declaration '>' . $@26

    $default  reduce using rule 470 ($@26)

    $@26  go to state 1454


State 1412

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration . '>' $@28
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1455


State 1413

  502 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1414

  500 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1415

  499 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1416

  682 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 682 (type_declaration_no_options)


State 1417

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 332 (expr_block)


State 1418

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1419

  282 expression_yield_no_pipe: "yield" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 282 (expression_yield_no_pipe)


State 1420

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 334 (expr_full_block_assumed_piped)


State 1421

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '*'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "<-"        shift, and go to state 599
    "??"        shift, and go to state 374
    ":="        shift, and go to state 600
    '='         shift, and go to state 601
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '*'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    copy_or_move_or_clone  go to state 1456
    dim_list               go to state 380


State 1422

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1457
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1423

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1458


State 1424

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@31 function_declaration_header expression_block

    $default  reduce using rule 523 ($@31)

    $@31  go to state 1459


State 1425

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 517 (structure_variable_declaration)


State 1426

  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1460


State 1427

  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1461


State 1428

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1462
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1429

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1430

  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1463


State 1431

  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1050

    $default  reduce using rule 766 (use_initializer)

    use_initializer  go to state 1464


State 1432

  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1465


State 1433

  316 expr_list: expr_list . ',' expr
  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1466


State 1434

  805 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 852

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1467


State 1435

  808 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 808 (make_table_decl)


State 1436

  316 expr_list: expr_list . ',' expr
  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 856

    $default  reduce using rule 812 (optional_comma)

    optional_comma  go to state 1468


State 1437

  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1469


State 1438

  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  764 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1104

    $default  reduce using rule 764 (make_struct_dim)


State 1439

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1471


State 1440

  460 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 460 (expr)


State 1441

  246 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1472


State 1442

  811 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1473


State 1443

  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1474


State 1444

  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1475


State 1445

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 662
    "as"                 shift, and go to state 663
    "<<"                 shift, and go to state 664
    ">>"                 shift, and go to state 665
    "++"                 shift, and go to state 666
    "--"                 shift, and go to state 667
    "<="                 shift, and go to state 668
    ">="                 shift, and go to state 669
    "=="                 shift, and go to state 670
    "!="                 shift, and go to state 671
    "->"                 shift, and go to state 672
    "??"                 shift, and go to state 673
    "?."                 shift, and go to state 674
    "?["                 shift, and go to state 675
    "<|"                 shift, and go to state 676
    "|>"                 shift, and go to state 677
    "<<<"                shift, and go to state 678
    ">>>"                shift, and go to state 679
    "&&"                 shift, and go to state 680
    "||"                 shift, and go to state 681
    "^^"                 shift, and go to state 682
    ".."                 shift, and go to state 683
    "end of expression"  shift, and go to state 1442
    '?'                  shift, and go to state 684
    '|'                  shift, and go to state 685
    '^'                  shift, and go to state 686
    '&'                  shift, and go to state 687
    '<'                  shift, and go to state 688
    '>'                  shift, and go to state 689
    '-'                  shift, and go to state 690
    '+'                  shift, and go to state 691
    '*'                  shift, and go to state 692
    '/'                  shift, and go to state 693
    '%'                  shift, and go to state 694
    '.'                  shift, and go to state 695
    '['                  shift, and go to state 696

    $default  reduce using rule 810 (array_comprehension_where)

    array_comprehension_where  go to state 1476


State 1446

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name .

    $default  reduce using rule 391 (func_addr_expr)


State 1447

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 859
    "name"  shift, and go to state 60

    name_in_namespace  go to state 862
    func_addr_name     go to state 1477


State 1448

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  760 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 760 (make_struct_fields)


State 1449

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 759 (make_struct_fields)


State 1450

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 383 (expr_named_call)


State 1451

  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 948
    ":="  shift, and go to state 1478
    '='   shift, and go to state 950

    copy_or_move  go to state 1479


State 1452

  319 block_or_simple_block: "=>" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 319 (block_or_simple_block)


State 1453

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24 .

    $default  reduce using rule 465 (expr)


State 1454

  471 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26 .

    $default  reduce using rule 471 (expr)


State 1455

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' . $@28

    $default  reduce using rule 475 ($@28)

    $@28  go to state 1480


State 1456

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1481
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1457

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 662
    "as"                 shift, and go to state 663
    "<<"                 shift, and go to state 664
    ">>"                 shift, and go to state 665
    "++"                 shift, and go to state 666
    "--"                 shift, and go to state 667
    "<="                 shift, and go to state 668
    ">="                 shift, and go to state 669
    "=="                 shift, and go to state 670
    "!="                 shift, and go to state 671
    "->"                 shift, and go to state 672
    "??"                 shift, and go to state 673
    "?."                 shift, and go to state 674
    "?["                 shift, and go to state 675
    "<|"                 shift, and go to state 676
    "|>"                 shift, and go to state 677
    "<<<"                shift, and go to state 678
    ">>>"                shift, and go to state 679
    "&&"                 shift, and go to state 680
    "||"                 shift, and go to state 681
    "^^"                 shift, and go to state 682
    ".."                 shift, and go to state 683
    "end of expression"  shift, and go to state 1482
    '?'                  shift, and go to state 684
    '|'                  shift, and go to state 685
    '^'                  shift, and go to state 686
    '&'                  shift, and go to state 687
    '<'                  shift, and go to state 688
    '>'                  shift, and go to state 689
    '-'                  shift, and go to state 690
    '+'                  shift, and go to state 691
    '*'                  shift, and go to state 692
    '/'                  shift, and go to state 693
    '%'                  shift, and go to state 694
    '.'                  shift, and go to state 695
    '['                  shift, and go to state 696


State 1458

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1483


State 1459

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1484


State 1460

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1485


State 1461

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1486


State 1462

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696
    ')'    shift, and go to state 1487


State 1463

  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1488


State 1464

  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1438
    make_struct_dim     go to state 1489


State 1465

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1490


State 1466

  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1491


State 1467

  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1492


State 1468

  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1493


State 1469

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1494


State 1470

  765 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 864
    "name"  shift, and go to state 1199

    make_struct_fields  go to state 1495


State 1471

  776 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')' .

    $default  reduce using rule 776 (make_struct_decl)


State 1472

  246 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 246 (optional_expr_list_in_braces)


State 1473

  811 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1496
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1474

  816 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 816 (array_comprehension)


State 1475

  814 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 814 (array_comprehension)


State 1476

  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1497


State 1477

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name .

    $default  reduce using rule 394 (func_addr_expr)


State 1478

  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1498
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1479

  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 417
    "class"                           shift, and go to state 418
    "true"                            shift, and go to state 419
    "false"                           shift, and go to state 420
    "new"                             shift, and go to state 421
    "typeinfo"                        shift, and go to state 422
    "type"                            shift, and go to state 423
    "array"                           shift, and go to state 424
    "null"                            shift, and go to state 425
    "table"                           shift, and go to state 426
    "deref"                           shift, and go to state 427
    "cast"                            shift, and go to state 428
    "upcast"                          shift, and go to state 429
    "addr"                            shift, and go to state 430
    "reinterpret"                     shift, and go to state 431
    "dim"                             shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 454
    "type function"                   shift, and go to state 455
    "start of the string"             shift, and go to state 456
    "begin of code block"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466

    string_builder          go to state 467
    expr_reader             go to state 468
    expression_keyword      go to state 469
    name_in_namespace       go to state 470
    expr_new                go to state 471
    expr_cast               go to state 472
    expr_type_decl          go to state 473
    expr_type_info          go to state 474
    block_or_lambda         go to state 475
    expr_full_block         go to state 476
    expr_numeric_const      go to state 477
    expr_named_call         go to state 478
    expr_method_call        go to state 479
    func_addr_expr          go to state 480
    expr_field              go to state 481
    expr_call               go to state 482
    expr                    go to state 1499
    expr_mtag               go to state 484
    basic_type_declaration  go to state 485
    make_decl               go to state 486
    make_struct_decl        go to state 487
    make_tuple_call         go to state 488
    make_dim_decl           go to state 489
    make_table_decl         go to state 490
    array_comprehension     go to state 491


State 1480

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28 .

    $default  reduce using rule 476 (expr)


State 1481

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 662
    "as"                 shift, and go to state 663
    "<<"                 shift, and go to state 664
    ">>"                 shift, and go to state 665
    "++"                 shift, and go to state 666
    "--"                 shift, and go to state 667
    "<="                 shift, and go to state 668
    ">="                 shift, and go to state 669
    "=="                 shift, and go to state 670
    "!="                 shift, and go to state 671
    "->"                 shift, and go to state 672
    "??"                 shift, and go to state 673
    "?."                 shift, and go to state 674
    "?["                 shift, and go to state 675
    "<|"                 shift, and go to state 676
    "|>"                 shift, and go to state 677
    "<<<"                shift, and go to state 678
    ">>>"                shift, and go to state 679
    "&&"                 shift, and go to state 680
    "||"                 shift, and go to state 681
    "^^"                 shift, and go to state 682
    ".."                 shift, and go to state 683
    "end of expression"  shift, and go to state 1500
    '?'                  shift, and go to state 684
    '|'                  shift, and go to state 685
    '^'                  shift, and go to state 686
    '&'                  shift, and go to state 687
    '<'                  shift, and go to state 688
    '>'                  shift, and go to state 689
    '-'                  shift, and go to state 690
    '+'                  shift, and go to state 691
    '*'                  shift, and go to state 692
    '/'                  shift, and go to state 693
    '%'                  shift, and go to state 694
    '.'                  shift, and go to state 695
    '['                  shift, and go to state 696


State 1482

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 297 (tuple_expansion_variable_declaration)


State 1483

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression" .

    $default  reduce using rule 522 (struct_variable_declaration_list)


State 1484

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1501


State 1485

  770 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 770 (make_struct_decl)


State 1486

  773 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 773 (make_struct_decl)


State 1487

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 314 (expr_type_info)


State 1488

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1502


State 1489

  765 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1470
    ')'                  shift, and go to state 1503


State 1490

  795 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')' .

    $default  reduce using rule 795 (make_dim_decl)


State 1491

  799 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')' .

    $default  reduce using rule 799 (make_dim_decl)


State 1492

  809 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 809 (make_table_decl)


State 1493

  803 make_dim_decl: "dim" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')' .

    $default  reduce using rule 803 (make_dim_decl)


State 1494

  785 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 785 (make_tuple_call)


State 1495

  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  765 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1104

    $default  reduce using rule 765 (make_struct_dim)


State 1496

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  811 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 811 (array_comprehension_where)


State 1497

  815 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 815 (array_comprehension)


State 1498

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 762 (make_struct_fields)


State 1499

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 662
    "as"   shift, and go to state 663
    "<<"   shift, and go to state 664
    ">>"   shift, and go to state 665
    "++"   shift, and go to state 666
    "--"   shift, and go to state 667
    "<="   shift, and go to state 668
    ">="   shift, and go to state 669
    "=="   shift, and go to state 670
    "!="   shift, and go to state 671
    "->"   shift, and go to state 672
    "??"   shift, and go to state 673
    "?."   shift, and go to state 674
    "?["   shift, and go to state 675
    "<|"   shift, and go to state 676
    "|>"   shift, and go to state 677
    "<<<"  shift, and go to state 678
    ">>>"  shift, and go to state 679
    "&&"   shift, and go to state 680
    "||"   shift, and go to state 681
    "^^"   shift, and go to state 682
    ".."   shift, and go to state 683
    '?'    shift, and go to state 684
    '|'    shift, and go to state 685
    '^'    shift, and go to state 686
    '&'    shift, and go to state 687
    '<'    shift, and go to state 688
    '>'    shift, and go to state 689
    '-'    shift, and go to state 690
    '+'    shift, and go to state 691
    '*'    shift, and go to state 692
    '/'    shift, and go to state 693
    '%'    shift, and go to state 694
    '.'    shift, and go to state 695
    '['    shift, and go to state 696

    $default  reduce using rule 761 (make_struct_fields)


State 1500

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)


State 1501

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block .

    $default  reduce using rule 524 (struct_variable_declaration_list)


State 1502

  789 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 789 (make_dim_decl)


State 1503

  792 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 792 (make_dim_decl)
